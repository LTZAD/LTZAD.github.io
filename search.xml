<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python使用requests+lxml进行网页分析，通过prettytable可视化打造动漫下载器</title>
      <link href="/2025/03/16/yhdm/"/>
      <url>/2025/03/16/yhdm/</url>
      
        <content type="html"><![CDATA[<h1 id="python使用requests-lxml进行网页分析，通过prettytable可视化打造动漫下载器"><a href="#python使用requests-lxml进行网页分析，通过prettytable可视化打造动漫下载器" class="headerlink" title="python使用requests+lxml进行网页分析，通过prettytable可视化打造动漫下载器"></a>python使用requests+lxml进行网页分析，通过prettytable可视化打造动漫下载器</h1><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><video width="100%" height="100%" controls>    <source src="result.mp4" type="video/mp4"></video><h2 id="简单分析搜索页网页元素"><a href="#简单分析搜索页网页元素" class="headerlink" title="简单分析搜索页网页元素"></a>简单分析搜索页网页元素</h2><p>分析网页<a href="https://www.yinghuadm.cn/">樱花动漫</a>，进行搜索。</p><p>例如搜索动漫<code>牧神记</code>，搜索之后跳转的链接为<a href="https://www.yinghuadm.cn/search_-------------.html?wd=牧神记">https://www.yinghuadm.cn/search_-------------.html?wd=牧神记</a>，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/search_msj.jpg" alt="alt"></p><p>因此可以猜测该网站搜索结果均在上述链接<code>wd=</code>之后，在python中可以先定义变量name，然后访问想要的搜索界面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name  = <span class="built_in">input</span>(<span class="string">&#x27;请输入动漫名：&#x27;</span>)</span><br><span class="line">search_url = <span class="string">&#x27;https://www.yinghuadm.cn/search_-------------.html?wd=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name)</span><br></pre></td></tr></table></figure><h3 id="分析详细页链接如何获得"><a href="#分析详细页链接如何获得" class="headerlink" title="分析详细页链接如何获得"></a>分析详细页链接如何获得</h3><p>随后继续点击搜索结果，进入详细界面，发现其链接为<a href="https://www.yinghuadm.cn/vod_9004.html">https://www.yinghuadm.cn/vod_9004.html</a>，可以发现只需要在<code>https://www.yinghuadm.cn/</code>后面加上<code>vod_</code>及之后的值和<code>.html</code>，便可以访问到该动漫的详细信息。</p><p>随后通过检查上一页源码，发现其<code>vod_9004</code>存储在<code>&lt;div class=&quot;module-card-item module-item&quot;&gt;</code>标签中，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/search_msj_vod.jpg" alt="alt"></p><p>可以通过xpath语法<code>//div[@class=&#39;module-card-item module-item&#39;]/a/@href</code>来获取该标签里<code>href</code>中的内容（注意这里用etree进行分析之后输出结果为列表的形式，如果搜索结果有多个，可以更容易的逐个进行访问）</p><h3 id="分析动漫标题如何获得"><a href="#分析动漫标题如何获得" class="headerlink" title="分析动漫标题如何获得"></a>分析动漫标题如何获得</h3><p>继续研究该页源码，发现其标题信息存储在<code>&lt;div class=&quot;module-item-pic&quot;&gt;</code>标签中，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/search_msj_title.jpg" alt="alt"></p><p>同样可以通过XPath语法<code>//div[@class=&#39;module-item-pic&#39;]/img/@alt</code>来获取该标签里<code>alt</code>中的内容（同理，这里的输出也为列表形式，可以通过索引实现与vod值对应）</p><h2 id="通过代码实现打印搜索结果"><a href="#通过代码实现打印搜索结果" class="headerlink" title="通过代码实现打印搜索结果"></a>通过代码实现打印搜索结果</h2><p>这里使用prettytable库，使搜索结果能够更直观的展示出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TB = PrettyTable()</span><br><span class="line">TB.field_names = [<span class="string">&quot;序号&quot;</span>, <span class="string">&quot;动漫名&quot;</span>, <span class="string">&quot;链接&quot;</span>]</span><br></pre></td></tr></table></figure><p>首先创建名为TB的表格，随后用requests库获取搜索结果的源码，并用etree库进行分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search_url = <span class="string">&#x27;https://www.yinghuadm.cn/search_-------------.html?wd=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name)</span><br><span class="line">main_response = requests.get(search_url).text</span><br><span class="line">main_tree = etree.HTML(main_response)</span><br></pre></td></tr></table></figure><p>之后用xpath语法获取搜索结果的链接和标题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url_list = main_tree.xpath(<span class="string">&quot;//div[@class=&#x27;module-card-item module-item&#x27;]/a/@href&quot;</span>)</span><br><span class="line">title_list = main_tree.xpath(<span class="string">&quot;//div[@class=&#x27;module-item-pic&#x27;]/img/@alt&quot;</span>)</span><br></pre></td></tr></table></figure><p>通过之前的分析，可以了解到两个列表的长度应该相同，可以使用for循环将结果依次加入表格中（注意这里的链接应为<code>https://www.yinghuadm.cn</code>和<code>title_list</code>中的元素拼接而成）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义链接前缀</span></span><br><span class="line">url_head = <span class="string">&#x27;https://www.yinghuadm.cn&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(url_list)):</span><br><span class="line">    TB.add_row([i+<span class="number">1</span>, title_list[i], url_head + url_list[i]])</span><br></pre></td></tr></table></figure><p>最后打印表格，输出结果如下图</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/search_msj_result.jpg" alt="alt"></p><h2 id="分析详细页信息"><a href="#分析详细页信息" class="headerlink" title="分析详细页信息"></a>分析详细页信息</h2><p>可以通过输入序号，来选择要访问的详细页，接着还是以<code>牧神记</code>为例，详情页如图</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_detail_1.jpg" alt="alt"></p><p>可以看到所有集的链接均在<code>&lt;div class=&quot;module-play-list-content module-play-list-base&quot;&gt;</code>标签内的<code>href</code>中</p><p>然而通过在源码中查找，发现结果超出范围，原因是有两种不同的播放源造成的</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_detail_2.jpg" alt="alt"></p><p>那么再次对页面源码观察，发现不同的播放源所归属的<code>div</code>标签有细微差距，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_detail_3.jpg" alt="alt"></p><p>接着分析可以发现播放源存放在<code>&lt;div class=&quot;module-tab-items-box hisSwiper&quot;&gt;</code>标签中，通过对多个页面进行分析，发现默认情况下对应的播放源为<code>&lt;div class=&quot;module-tab-item tab-item active&quot;&gt;</code>，若还有第二或者第三播放源，均存放在<code>&lt;div class=&quot;module-tab-item tab-item&quot;&gt;</code>，如图以<code>火影忍者</code>为例</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/hyrz_detail.jpg" alt="alt"></p><p>这里的<code>官方路线</code>和<code>备用路线</code>的div标签相同，所以可以通过xpath对上一div标签进行定位，然后获取其中div标签数量，<code>//div[@class=&#39;module-tab-items-box hisSwiper&#39;]/div</code>，可以用以下代码实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># detail_tree为详细页源码的etree对象</span></span><br><span class="line">player_number = <span class="built_in">len</span>(detail_tree.xpath(<span class="string">&quot;//div[@class=&#x27;module-tab-items-box hisSwiper&#x27;]/div&quot;</span>))</span><br></pre></td></tr></table></figure><p>随后可以通过和1比较，如果仅有1个，其xpath为<code>//div[@class=&#39;module-tab-item tab-item active&#39;]</code>，如果大于1，则均为<code>//div[@class=&#39;module-tab-item tab-item&#39;]</code>，展开div标签可发现播放器名称在<code>&lt;span&gt;</code>标签中，集数在<code>small</code>标签中，这里不再放图展示</p><p>但是通过写代码发现<code>//div[@class=&#39;module-tab-item tab-item active&#39;]</code>中并无内容，反而都存储在<code>//div[@class=&#39;module-tab-item tab-item&#39;]</code>中，这也使得代码更加简便</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">player_name = detail_tree.xpath(<span class="string">&quot;//div[@class=&#x27;module-tab-item tab-item&#x27;]/span/text()&quot;</span>)</span><br><span class="line">player_episode = detail_tree.xpath(<span class="string">&quot;//div[@class=&#x27;module-tab-item tab-item&#x27;]/small/text()&quot;</span>)</span><br></pre></td></tr></table></figure><p>通过这段代码可以将播放器名称和集数分别存入两个列表中，之后再加上前文对<code>//div[@class=&#39;module-tab-items-box hisSwiper&#39;]/div</code>数量的分析，可以通过循环依次打印，使播放器名称和集数相对应</p><h2 id="通过代码实现打印详细页信息"><a href="#通过代码实现打印详细页信息" class="headerlink" title="通过代码实现打印详细页信息"></a>通过代码实现打印详细页信息</h2><p>这里要创建第二个表格，用于展示详细页信息，因此将其命名为<code>TB_detail</code>，前边表格更名为<code>TB_search</code>，让代码维护更加方便</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TB_detail = PrettyTable()</span><br><span class="line">TB_detail.field_names = [<span class="string">&quot;序号&quot;</span>, <span class="string">&quot;播放器名称&quot;</span>, <span class="string">&quot;集数&quot;</span>]</span><br></pre></td></tr></table></figure><p>然后通过之前的分析，可以把播放器名称和集数分别存入两个列表中，随后通过循环将内容添加到表格中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(player_number):</span><br><span class="line">    TB_detail.add_row([i+<span class="number">1</span>, player_name[i], player_episode[i] + <span class="string">&#x27;集&#x27;</span>])</span><br></pre></td></tr></table></figure><p>最后打印表格，输出结果如下图，这里以<code>火影忍者</code>为例，因为有3个播放源，能够更好的检测代码是否正确</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/hyrz_detail_result.jpg" alt="alt"></p><p>由于在对每个页面进行分析，获取etree对象时会有重复的步骤，因此可以将其封装成一个函数（同时可以考虑删除<code>TB_search</code>表格中的<code>链接</code>列，展示更加清爽直观，随后可以通过输入序号，来获得链接，从而进行详细页的访问，使其不在输出端显示出来）</p><h2 id="获取播放页链接"><a href="#获取播放页链接" class="headerlink" title="获取播放页链接"></a>获取播放页链接</h2><p>在前边已经发现播放页链接存放在<code>//div[@class=&#39;module-list sort-list tab-list his-tab-list active&#39;]//a/@href</code>和<code>//div[@class=&#39;module-list sort-list tab-list his-tab-list&#39;]//a/@href</code>中，但通过代码调试发现和之前出现的情况相同，<code>//div[@class=&#39;module-list sort-list tab-list his-tab-list active&#39;]//a/@href</code>中并无内容，代码会变得更加容易，但由于列表内容过多，需要结合不同播放器的集数来分配内容</p><p>因此这里需要输入选择的播放器序号，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">player_choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入播放器序号：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">start_number = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(player_name_list) != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, player_choice-<span class="number">1</span>):</span><br><span class="line">        start_number += <span class="built_in">int</span>(player_episode_list[i])</span><br></pre></td></tr></table></figure><p>这里的<code>start_number</code>表示当前播放器的起始集数，随后通过输入集数<code>episode_choice</code>，两者相加-1得到该播放器对应的集数，随后通过<code>//div[@class=&#39;module-list sort-list tab-list his-tab-list&#39;]//a/@href</code>得到所有的播放页链接列表，通过索引拿到对应的播放页链接的后半部分，通过拼接获得完整播放页链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">episode_choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入集数：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">player_url_list = detail_tree.xpath(<span class="string">&quot;//div[@class=&#x27;module-list sort-list tab-list his-tab-list&#x27;]//a/@href&quot;</span>)</span><br><span class="line">player_url = <span class="string">&#x27;https://www.yinghuadm.cn&#x27;</span>+ player_url_list[start_number + episode_choice - <span class="number">2</span>]</span><br></pre></td></tr></table></figure><h2 id="找到视频下载链接"><a href="#找到视频下载链接" class="headerlink" title="找到视频下载链接"></a>找到视频下载链接</h2><p>通过对播放页面进行分析，发现视频链接存放在<code>&lt;td id=&quot;playleft&quot;&gt;</code>中<code>iframe</code>的<code>src</code>中（如图），因此可以直接通过xpath获取该链接，但是很不幸的是，通过在requests获取的网页中，找不到这个标签，原因肯呢个由于网页是动态加载的，需要通过其他途径来获取，在对网页<code>js</code>进行分析时发现，其链接是拼接而成，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_player_js_1.jpg" alt="alt"></p><p>那么只需要找到<code>this.Path</code>和<code>this.PlayFrom</code>这两个变量（<code>this.Path</code>由于对应其他<code>js</code>文件内容过多，因此先分析的<code>this.PlayFrom</code>，但是刚好这个分析完之后可以拿到视频链接，因此这里只展示<code>this.PlayFrom</code>的分析过程），搜索<code>this.PlayFrom</code>，可以在<code>js</code>中找到<code>a.from</code>和<code>MacPlayerConfig.player_list[this.PlayFrom].parse</code>两项，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_player_js_2.jpg" alt="alt"></p><p>而后者的为字典，其中存储了多个视频类型以及其对应的链接</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_player_js_3.jpg" alt="alt"></p><p>因此，可以猜测链接是通过列表中<code>parse</code>内容及之后的url拼接而成，所以我们可以先在 <code>python</code>文件中创建一个字典来存放不同视频类型对应的链接，同时可以删掉没用的部分，只留下其<code>parse</code>的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">player_list = &#123;</span><br><span class="line">    <span class="string">&#x27;dyttm3u8&#x27;</span>: <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mp4&#x27;</span>: <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yinghua&#x27;</span>:  <span class="string">&#x27;https://api.xiaomingming.org/cloud/sina.php?vid= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;qz&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yunbo&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;qq&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;qz2&#x27;</span>:  <span class="string">&#x27;https://jx.aidouer.net/?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yun&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;zuidam3u8&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ckm3u8&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bjm3u8&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mao&#x27;</span>:  <span class="string">&#x27;https://danmu.yhdmjx.com/m3u8.php?url= &#x27;</span>,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接着分析<code>a.from</code>，通过搜索发现只在那个文件中存在，因此向上观看代码，发现其变量<code>a</code>实际上为<code>player_aaaa</code>，如图所示</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_player_js_4.jpg" alt="alt"></p><p>值得庆幸的是，通过搜索发现<code>player_aaaa</code>就在页面源码的<code>&lt;script type=&quot;text/javascript&quot;&gt;</code>之中，而这个可以通过<code>requests</code>获取，并用xpath分析</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/msj_player.jpg" alt="alt"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">player_aaaa = detail_tree.xpath(<span class="string">&quot;//div[@class=&#x27;player-box-main&#x27;]//script[@type=&#x27;text/javascript&#x27;]/text()&quot;</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>通过打印发现其前边多了<code>var player_aaaa=</code>内容，使其不是一个纯的字典类型，我们需要使用<code>re</code>库，用正则表达式将其删除，并通过<code>json</code>库将字符串类型变成字典，随后通过字典来访问其中的<code>url</code>和<code>from</code>，将<code>from</code>中的内容和之前创建的字典匹配，得到链接前缀，随后和<code>url</code>拼接，最终可以获得完整的视频链接</p><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/player_result.jpg" alt="alt"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正则表达式删除前边多余内容，并转换成字典类型</span></span><br><span class="line">player_aaaa = json.loads(re.sub(<span class="string">&#x27;var player_aaaa=&#x27;</span>, <span class="string">&#x27;&#x27;</span>, player_aaaa))</span><br></pre></td></tr></table></figure><p>之后拼接出完整的视频链接，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viedeo_url = player_list[<span class="built_in">str</span>(player_aaaa[<span class="string">&#x27;from&#x27;</span>])] + player_aaaa[<span class="string">&#x27;url&#x27;</span>]</span><br></pre></td></tr></table></figure><p>（之后的视频页面由于采用动态加载，使用<code>requests</code>库难以实现，故本篇内容到此结束，之后获取下载链接将放到使用<code>playwright</code>库的文章中）</p><h2 id="代码的完善"><a href="#代码的完善" class="headerlink" title="代码的完善"></a>代码的完善</h2><p>在这里可以考虑一下搜索动漫搜不到任何内容的情况，可以增加一个条件，判断<code>url_list</code>是否为空，如果为空，则输出提示信息，并退出程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> url_list == []:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;抱歉，未找到相关动漫&#x27;</span>)</span><br><span class="line">    exit()</span><br></pre></td></tr></table></figure><p>在输入动漫序号，播放器序号以及集数时，也可以判断输入是否合法，并给出提示内容之后重新尝试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入动漫序号：&#x27;</span>))</span><br><span class="line"><span class="keyword">while</span> choice &lt; <span class="number">1</span> <span class="keyword">or</span> choice &gt; <span class="built_in">len</span>(url_list):</span><br><span class="line">    choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;动漫序号输入错误！请重新输入：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">player_choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入播放器序号：&#x27;</span>))</span><br><span class="line"><span class="keyword">while</span> player_choice &lt; <span class="number">1</span> <span class="keyword">or</span> player_choice &gt; player_number:</span><br><span class="line">    player_choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;播放器序号输入错误！请重新输入：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">episode_choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入集数：&#x27;</span>))</span><br><span class="line"><span class="keyword">while</span> episode_choice &lt; <span class="number">1</span> <span class="keyword">or</span> episode_choice &gt; <span class="built_in">int</span>(player_episode_list[player_choice-<span class="number">1</span>]):</span><br><span class="line">    episode_choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;集数输入错误！请重新输入：&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><img src="https://www.ltzblog.top/2025/03/16/yhdm/code.png" alt="alt"></p>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的C++笔记</title>
      <link href="/2025/03/16/C++%E8%87%AA%E7%94%A8/"/>
      <url>/2025/03/16/C++%E8%87%AA%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="小数类型"><a href="#小数类型" class="headerlink" title="小数类型"></a>小数类型</h1><p>默认输出为科学计数法</p><p>需要使用<code>cout &lt;&lt; fixed;</code>来转化为小数输出</p><p><code>cout.width(n)</code>设置输出宽度为n，不足的部分用空格填充</p><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>在C++中可以使用<code>string</code>来表示字符串，也可以使用C语言的方法</p><p>字符串之间可以使用<code>+</code>进行拼接并赋值给新的字符串类型的变量；如果不是字符串类型，则可以通过<code>to_string</code>进行转化，注意需要在开头写上<code>#include \<string></string></code></p><p>以下是代码示例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line">string c = <span class="string">&quot;3&quot;</span>;</span><br><span class="line"></span><br><span class="line">string abc = a + <span class="built_in">to_string</span>(b) + c;</span><br><span class="line">cout &lt;&lt; abc &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串比较大小"><a href="#字符串比较大小" class="headerlink" title="字符串比较大小"></a>字符串比较大小</h2><p>如果使用C语言的字符串风格，直接比较会比较内存地址，需要使用<code>strcmp</code>函数进行字符串的比较，需要在开头写上<code>#include \<cstring></cstring></code>，在使用strcmp函数比较时，-1为小于，0为等于，1为大于</p><p>如果进行比较的两个字符串至少有一个是string类型，则可以使用运算符直接进行比较</p><h1 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h1><p>在C++中可以通过<code>#include \<random></random></code>来生成随机数</p><p>函数代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_random_num</span><span class="params">(<span class="type">int</span> min, <span class="type">int</span> max)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 创建一个随机数生成器</span></span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="comment">// 定义一个均匀分布的整数范围</span></span><br><span class="line">uniform_int_distribution&lt;&gt; <span class="built_in">dis</span>(min, max);</span><br><span class="line"><span class="comment">// 生成一个随机数并返回这个值</span></span><br><span class="line"><span class="type">int</span> random_num = <span class="built_in">dis</span>(gen);</span><br><span class="line"><span class="keyword">return</span> random_num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h1><p>枚举类型<code>enum</code>的每个元素都有对应整数，默认从0开始依次往下，也可以赋值</p><p>用法如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> 枚举名&#123;</span><br><span class="line">枚举元素<span class="number">1</span>,</span><br><span class="line">枚举元素<span class="number">2</span>,</span><br><span class="line">...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>注意：枚举元素必须是标识符</p></blockquote><h1 id="高级for循环"><a href="#高级for循环" class="headerlink" title="高级for循环"></a>高级for循环</h1><p>数组有几个元素，循环体就执行几次，在第N次循环中，临时变量名会记录数组的第N个元素</p><p>用法如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先定义一个数组</span></span><br><span class="line"><span class="type">int</span> arr[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="comment">// 格式为for (元素类型 临时变量名 : 数组变量)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> element : arr)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; element &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 循环执行3次，会依次输出1 2 3</span></span><br></pre></td></tr></table></figure><h1 id="空指针"><a href="#空指针" class="headerlink" title="空指针"></a>空指针</h1><p>两种方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* p = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="type">int</span>* p = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h1 id="动态内存分配"><a href="#动态内存分配" class="headerlink" title="动态内存分配"></a>动态内存分配</h1><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>在C++中可以使用<code>new</code>和<code>delete</code>来动态分配和释放内存</p><ol><li><p><code>new</code>用来申请内存空间，返回指向该内存空间的指针</p></li><li><p><code>delete</code>用来释放内存空间，传入指针作为参数（仅可用于new申请的内存空间）</p></li></ol><p>基本语法如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">类型* 指针名 = <span class="keyword">new</span> 类型; <span class="comment">// 申请普通类型的内存空间</span></span><br><span class="line">类型* 指针名 = <span class="keyword">new</span> 类型[数组长度]; <span class="comment">// 申请数组类型的内存空间</span></span><br><span class="line"><span class="keyword">delete</span> 指针名; <span class="comment">// 释放申请的内存空间</span></span><br><span class="line"><span class="keyword">delete</span>[] 指针名; <span class="comment">// 释放申请的数组内存空间</span></span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* p = <span class="keyword">new</span> <span class="type">int</span>; <span class="comment">// 申请一个int类型内存空间</span></span><br><span class="line">*p = <span class="number">10</span>; <span class="comment">// 给申请的内存空间赋值</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl; <span class="comment">// 输出10</span></span><br><span class="line"><span class="keyword">delete</span> p; <span class="comment">// 释放申请的内存空间</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* arr = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>]; <span class="comment">// 申请一个长度为10的int数组内存空间</span></span><br><span class="line"><span class="comment">// 给申请的数组依次赋值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">arr[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出数组元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[] arr; <span class="comment">// 释放申请的数组内存空间</span></span><br></pre></td></tr></table></figure><h2 id="扩展用法"><a href="#扩展用法" class="headerlink" title="扩展用法"></a>扩展用法</h2><ol><li>数组元素的移除</li></ol><p>如果原来有一个数组，则可以通过<code>new</code>创建一个新的数组，将需要保留的数据复制到新的数组中，效果相当于对原先数组的元素进行移除</p><blockquote><p>注意：如果原先的数组内存地址用<code>new</code>申请，则可以通过<code>delete[]</code>来释放原来的数组，随后将新的数组赋值给原来的变量</p></blockquote><ol><li>数组元素的添加</li></ol><p>如果原来有一个数组，则可以通过<code>new</code>创建一个新的数组，将需要添加的数据和原先数组的元素复制到新的数组中，效果相当于对原先数组的元素进行添加</p><blockquote><p>注意：同理，如果原先的数组内存地址用<code>new</code>申请，则可以通过<code>delete[]</code>来释放原来的数组，随后将新的数组赋值给原来的变量</p></blockquote><h1 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h1><p>在C++中可以使用<code>const</code>关键字来定义常量，常量的值不能被修改</p><h2 id="指向const的指针"><a href="#指向const的指针" class="headerlink" title="指向const的指针"></a>指向const的指针</h2><p>该指针本身是可以修改的，但是指向的地址的值是常量的，不能修改指向的地址的值，但可以修改指针指向的地址</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> 数据类型* 指针名 = &amp;常量值;</span><br></pre></td></tr></table></figure><h1 id="const指针"><a href="#const指针" class="headerlink" title="const指针"></a>const指针</h1><p>该指针本身是常量，不能修改指针指向的地址，但可以修改指针指向的地址的值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型* <span class="type">const</span> 指针名 = &amp;变量值;</span><br></pre></td></tr></table></figure><h2 id="指向const的const指针"><a href="#指向const的const指针" class="headerlink" title="指向const的const指针"></a>指向const的const指针</h2><p>该指针本身和指向的地址都是常量，指针指向的地址和指针指向的地址的值都不能修改</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> 数据类型* <span class="type">const</span> 指针名 = &amp;常量值;</span><br></pre></td></tr></table></figure><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>包含不同类型的不同成员</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>1.创建结构体</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> 结构体名</span><br><span class="line">&#123;</span><br><span class="line">成员<span class="number">1</span>类型 成员<span class="number">1</span>名称;</span><br><span class="line">...</span><br><span class="line">成员n类型 成员n名称;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>2.结构体变量声明如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> 结构体名 变量名;</span><br></pre></td></tr></table></figure><blockquote><p>注意：前边的<code>struct</code>关键字不写也可以，但便于区分普通变量和结构体变量，建议写上<code>struct</code>关键字</p></blockquote><p>3.结构体变量的初始化</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量名 = &#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;;</span><br></pre></td></tr></table></figure><p>4.结构体变量的输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; 变量名.成员<span class="number">1</span>名称 &lt;&lt; endl;</span><br><span class="line">...</span><br><span class="line">cout &lt;&lt; 变量名.成员n名称 &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>5.结构体变量的默认值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> 结构体名</span><br><span class="line">&#123;</span><br><span class="line">成员<span class="number">1</span>类型 成员<span class="number">1</span>名称 = 成员<span class="number">1</span>默认值;</span><br><span class="line">...</span><br><span class="line">成员n类型 成员n名称 = 成员n默认值;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>通过在定义结构体时可以给成员指定默认值，这样在创建结构体变量时，不填写成员的值，则会使用默认值</p></blockquote><h2 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h2><p>结构体可以作为数组的元素，数组的长度可以是任意的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明数组对象</span></span><br><span class="line"><span class="keyword">struct</span> 结构体名 数组名[数组长度];</span><br><span class="line"><span class="comment">// 赋值</span></span><br><span class="line">数组名[<span class="number">0</span>] = &#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;;</span><br><span class="line">...</span><br><span class="line">数组名[数组长度<span class="number">-1</span>] = &#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;;</span><br></pre></td></tr></table></figure><p>其简便写法如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> 结构体名 数组名[] = &#123;</span><br><span class="line">&#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;,</span><br><span class="line">...</span><br><span class="line">&#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h2><p>结构体指针可以指向结构体变量，也可以指向结构体数组的元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先定义结构体变量</span></span><br><span class="line"><span class="keyword">struct</span> 结构体名 变量名;</span><br><span class="line"><span class="comment">// 再声明结构体指针</span></span><br><span class="line">结构体名* 指针名 = &amp;变量名;</span><br></pre></td></tr></table></figure><p>也可以通过new申请内存空间，并将结构体变量赋值给指针</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">结构体名* 指针名 = <span class="keyword">new</span> 结构体名 &#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;;</span><br></pre></td></tr></table></figure><p>通过指针可以直接访问结构体变量的成员</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; 指针名-&gt;成员<span class="number">1</span>名称 &lt;&lt; endl;</span><br><span class="line">...</span><br><span class="line">cout &lt;&lt; 指针名-&gt;成员n名称 &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="结构体指针数组"><a href="#结构体指针数组" class="headerlink" title="结构体指针数组"></a>结构体指针数组</h2><p>结构体指针数组，主要用于动态内存分配，方便管理大量结构体</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> 结构体名* 指针名 = <span class="keyword">new</span> 结构体名[数组长度] &#123;</span><br><span class="line">&#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;,</span><br><span class="line">...</span><br><span class="line">&#123;成员<span class="number">1</span>初始值,..., 成员n初始值&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 访问数组元素</span></span><br><span class="line">cout &lt;&lt; 指针名[<span class="number">0</span>].成员<span class="number">1</span>名称 &lt;&lt; endl;</span><br><span class="line">...</span><br><span class="line">cout &lt;&lt; 指针名[数组长度<span class="number">-1</span>].成员n名称 &lt;&lt; endl;</span><br><span class="line"><span class="comment">// 释放内存空间</span></span><br><span class="line"><span class="keyword">delete</span>[] 指针名;</span><br></pre></td></tr></table></figure><h1 id="函数中参数的传递"><a href="#函数中参数的传递" class="headerlink" title="函数中参数的传递"></a>函数中参数的传递</h1><p>在C++中，函数参数传递方式有三种：值传递，地址传递和引用传递</p><h2 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h2><p>在函数调用时，传递的是实参的值，函数内对实参的修改不会影响到实参的值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">10</span>; <span class="comment">// 不会影响到实参的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">func</span>(b); <span class="comment">// 传递的是b的值，不会影响到b的值</span></span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 输出5</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="地址传递"><a href="#地址传递" class="headerlink" title="地址传递"></a>地址传递</h2><p>在函数调用时，传递的是实参的地址，函数内对实参的修改会影响到实参的值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*a = <span class="number">10</span>; <span class="comment">// 会影响到实参的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">func</span>(&amp;b); <span class="comment">// 传递的是b的地址，会影响到b的值</span></span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 输出10</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在地址传参中，如果地址为常量或者对应的数值为常量，可以添加<code>const</code>关键字</p></blockquote><h2 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h2><p>在函数调用时，传递的是实参的引用，函数内对实参的修改会影响到实参的值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">10</span>; <span class="comment">// 会影响到实参的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">func</span>(b); <span class="comment">// 传递的是b的引用，会影响到b的值</span></span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 输出10</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="函数中数组的传递"><a href="#函数中数组的传递" class="headerlink" title="函数中数组的传递"></a>函数中数组的传递</h1><p>有两种方法可以用来传递</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> arr[数组长度])</span> </span>&#123;&#125;; <span class="comment">// 其中数组长度可不写</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>* arr)</span> </span>&#123;&#125;;</span><br></pre></td></tr></table></figure><p>不管用哪种方法，传入的都是数组的地址</p><h1 id="函数返回指针"><a href="#函数返回指针" class="headerlink" title="函数返回指针"></a>函数返回指针</h1><p>函数的返回值可以是指针类型，但需要注意以下几点</p><ol><li><p>函数返回的指针必须在函数体内申请内存空间，不能在函数体外申请</p></li><li><p>函数返回的指针必须在函数调用后手动释放内存空间，否则会造成内存泄漏</p></li></ol><p>语法如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">数据类型* 函数名()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 申请内存空间</span></span><br><span class="line">数据类型* 指针名 = <span class="keyword">new</span> 数据类型;</span><br><span class="line"><span class="comment">// 给指针赋值</span></span><br><span class="line">*指针名 = 值;</span><br><span class="line"><span class="comment">// 返回指针</span></span><br><span class="line"><span class="keyword">return</span> 指针名;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line">数据类型* 指针名 = 函数名();</span><br><span class="line"><span class="comment">// 使用指针解引用</span></span><br><span class="line">cout &lt;&lt; *指针名 &lt;&lt; endl;</span><br><span class="line"><span class="comment">// 释放内存空间</span></span><br><span class="line"><span class="keyword">delete</span> 指针名;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个简单的加法示例如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span>* <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* sum = <span class="keyword">new</span> <span class="type">int</span>;</span><br><span class="line">*sum = a + b;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* result = <span class="built_in">add</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">cout &lt;&lt; *result &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> result;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h1><p>在C++中，<code>static</code>关键字用来修饰变量和函数，用来实现变量和函数的静态化</p><h2 id="修饰变量"><a href="#修饰变量" class="headerlink" title="修饰变量"></a>修饰变量</h2><p><code>static</code>关键字用来修饰变量，不会在函数运行结束后自动释放，而是在程序运行过程中一直存在，直到程序结束</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> 数据类型 变量名;</span><br></pre></td></tr></table></figure><p>例如在函数返回指针时，可以不使用new申请内存空间，而是使用static修饰变量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span>* <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> sum;</span><br><span class="line">sum = a + b;</span><br><span class="line"><span class="keyword">return</span> &amp;sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* result = <span class="built_in">add</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">cout &lt;&lt; *result &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="函数传递的默认值"><a href="#函数传递的默认值" class="headerlink" title="函数传递的默认值"></a>函数传递的默认值</h1><p>在C++中，函数可以设置默认值，这样在调用函数时，如果省略参数，系统会自动使用默认值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a = <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">func</span>(); <span class="comment">// 输出10</span></span><br><span class="line"><span class="built_in">func</span>(<span class="number">20</span>); <span class="comment">// 输出20</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：如果函数有多个参数，在某一个参数开始设置默认值，那么后面的参数都必须设置默认值</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的C语言笔记</title>
      <link href="/2024/10/21/C%E8%87%AA%E7%94%A8/"/>
      <url>/2024/10/21/C%E8%87%AA%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>中文乱码问题</strong>：增添头文件<code>#include <windows.h></windows.h></code>，并在<code>int main()</code>开头第一行写上<code>SetConsoleOutputCP(65001);</code></p><div class="table-container"><table><thead><tr><th style="text-align:center">类型<div style="width:80px"></div></th><th style="text-align:center">占位符<div style="width:80px"></div></th></tr></thead><tbody><tr><td style="text-align:center">整型</td><td style="text-align:center">%d</td></tr><tr><td style="text-align:center">实型</td><td style="text-align:center">%f</td></tr><tr><td style="text-align:center">字符</td><td style="text-align:center">%c</td></tr><tr><td style="text-align:center">字符串</td><td style="text-align:center">%s</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center"><div style="width:30px"></div></th><th style="text-align:center">作用<div style="width:150px"></div></th></tr></thead><tbody><tr><td style="text-align:center">\r</td><td style="text-align:center">光标移到开头</td></tr><tr><td style="text-align:center">\n</td><td style="text-align:center">换行</td></tr><tr><td style="text-align:center">\t</td><td style="text-align:center">长度可变的空格</td></tr></tbody></table></div><blockquote><p><code>\t</code>：制表符，根据前边字母个数在后边补空格，让整体个数达到8或者8的倍数，最少补1个，最多8个</p><p>作用：打印表格数据的时候可以使其对齐</p></blockquote><p><strong>ASCII可显示字符表</strong></p><div class="table-container"><table><thead><tr><th style="text-align:center">二进制</th><th style="text-align:center">十进制</th><th style="text-align:center">十六进制</th><th style="text-align:center">图形</th><th style="text-align:center">二进制</th><th style="text-align:center">十进制</th><th style="text-align:center">十六进制</th><th style="text-align:center">图形</th><th style="text-align:center">二进制</th><th style="text-align:center">十进制</th><th style="text-align:center">十六进制</th><th style="text-align:center">图形</th></tr></thead><tbody><tr><td style="text-align:center">0010 0000</td><td style="text-align:center">32</td><td style="text-align:center">20</td><td style="text-align:center">空格</td><td style="text-align:center">0100 0000</td><td style="text-align:center">64</td><td style="text-align:center">40</td><td style="text-align:center">@</td><td style="text-align:center">0110 0000</td><td style="text-align:center">96</td><td style="text-align:center">60</td><td style="text-align:center">`</td></tr><tr><td style="text-align:center">0010 0001</td><td style="text-align:center">33</td><td style="text-align:center">21</td><td style="text-align:center">!</td><td style="text-align:center">0100 0001</td><td style="text-align:center">65</td><td style="text-align:center">41</td><td style="text-align:center">A</td><td style="text-align:center">0110 0001</td><td style="text-align:center">97</td><td style="text-align:center">61</td><td style="text-align:center">a</td></tr><tr><td style="text-align:center">0010 0010</td><td style="text-align:center">34</td><td style="text-align:center">22</td><td style="text-align:center">“</td><td style="text-align:center">0100 0010</td><td style="text-align:center">66</td><td style="text-align:center">42</td><td style="text-align:center">B</td><td style="text-align:center">0110 0010</td><td style="text-align:center">98</td><td style="text-align:center">62</td><td style="text-align:center">b</td></tr><tr><td style="text-align:center">0010 0011</td><td style="text-align:center">35</td><td style="text-align:center">23</td><td style="text-align:center">#</td><td style="text-align:center">0100 0011</td><td style="text-align:center">67</td><td style="text-align:center">43</td><td style="text-align:center">C</td><td style="text-align:center">0110 0011</td><td style="text-align:center">99</td><td style="text-align:center">63</td><td style="text-align:center">c</td></tr><tr><td style="text-align:center">0010 0100</td><td style="text-align:center">36</td><td style="text-align:center">24</td><td style="text-align:center">$</td><td style="text-align:center">0100 0100</td><td style="text-align:center">68</td><td style="text-align:center">44</td><td style="text-align:center">D</td><td style="text-align:center">0110 0100</td><td style="text-align:center">100</td><td style="text-align:center">64</td><td style="text-align:center">d</td></tr><tr><td style="text-align:center">0010 0101</td><td style="text-align:center">37</td><td style="text-align:center">25</td><td style="text-align:center">%</td><td style="text-align:center">0100 0101</td><td style="text-align:center">69</td><td style="text-align:center">45</td><td style="text-align:center">E</td><td style="text-align:center">0110 0101</td><td style="text-align:center">101</td><td style="text-align:center">65</td><td style="text-align:center">e</td></tr><tr><td style="text-align:center">0010 0110</td><td style="text-align:center">38</td><td style="text-align:center">26</td><td style="text-align:center">&amp;</td><td style="text-align:center">0100 0110</td><td style="text-align:center">70</td><td style="text-align:center">46</td><td style="text-align:center">F</td><td style="text-align:center">0110 0110</td><td style="text-align:center">102</td><td style="text-align:center">66</td><td style="text-align:center">f</td></tr><tr><td style="text-align:center">0010 0111</td><td style="text-align:center">39</td><td style="text-align:center">27</td><td style="text-align:center">‘</td><td style="text-align:center">0100 0111</td><td style="text-align:center">71</td><td style="text-align:center">47</td><td style="text-align:center">G</td><td style="text-align:center">0110 0111</td><td style="text-align:center">103</td><td style="text-align:center">67</td><td style="text-align:center">g</td></tr><tr><td style="text-align:center">0010 1000</td><td style="text-align:center">40</td><td style="text-align:center">28</td><td style="text-align:center">(</td><td style="text-align:center">0100 1000</td><td style="text-align:center">72</td><td style="text-align:center">48</td><td style="text-align:center">H</td><td style="text-align:center">0110 1000</td><td style="text-align:center">104</td><td style="text-align:center">68</td><td style="text-align:center">h</td></tr><tr><td style="text-align:center">0010 1001</td><td style="text-align:center">41</td><td style="text-align:center">29</td><td style="text-align:center">)</td><td style="text-align:center">0100 1001</td><td style="text-align:center">73</td><td style="text-align:center">49</td><td style="text-align:center">I</td><td style="text-align:center">0110 1001</td><td style="text-align:center">105</td><td style="text-align:center">69</td><td style="text-align:center">i</td></tr><tr><td style="text-align:center">0010 1010</td><td style="text-align:center">42</td><td style="text-align:center">2A</td><td style="text-align:center">*</td><td style="text-align:center">0100 1010</td><td style="text-align:center">74</td><td style="text-align:center">4A</td><td style="text-align:center">J</td><td style="text-align:center">0110 1010</td><td style="text-align:center">106</td><td style="text-align:center">6A</td><td style="text-align:center">j</td></tr><tr><td style="text-align:center">0010 1011</td><td style="text-align:center">43</td><td style="text-align:center">2B</td><td style="text-align:center">+</td><td style="text-align:center">0100 1011</td><td style="text-align:center">75</td><td style="text-align:center">4B</td><td style="text-align:center">K</td><td style="text-align:center">0110 1011</td><td style="text-align:center">107</td><td style="text-align:center">6B</td><td style="text-align:center">k</td></tr><tr><td style="text-align:center">0010 1100</td><td style="text-align:center">44</td><td style="text-align:center">2C</td><td style="text-align:center">,</td><td style="text-align:center">0100 1100</td><td style="text-align:center">76</td><td style="text-align:center">4C</td><td style="text-align:center">L</td><td style="text-align:center">0110 1100</td><td style="text-align:center">108</td><td style="text-align:center">6C</td><td style="text-align:center">l</td></tr><tr><td style="text-align:center">0010 1101</td><td style="text-align:center">45</td><td style="text-align:center">2D</td><td style="text-align:center">-</td><td style="text-align:center">0100 1101</td><td style="text-align:center">77</td><td style="text-align:center">4D</td><td style="text-align:center">M</td><td style="text-align:center">0110 1101</td><td style="text-align:center">109</td><td style="text-align:center">6D</td><td style="text-align:center">m</td></tr><tr><td style="text-align:center">0010 1110</td><td style="text-align:center">46</td><td style="text-align:center">2E</td><td style="text-align:center">.</td><td style="text-align:center">0100 1110</td><td style="text-align:center">78</td><td style="text-align:center">4E</td><td style="text-align:center">N</td><td style="text-align:center">0110 1110</td><td style="text-align:center">110</td><td style="text-align:center">6E</td><td style="text-align:center">n</td></tr><tr><td style="text-align:center">0010 1111</td><td style="text-align:center">47</td><td style="text-align:center">2F</td><td style="text-align:center">/</td><td style="text-align:center">0100 1111</td><td style="text-align:center">79</td><td style="text-align:center">4F</td><td style="text-align:center">O</td><td style="text-align:center">0110 1111</td><td style="text-align:center">111</td><td style="text-align:center">6F</td><td style="text-align:center">o</td></tr><tr><td style="text-align:center">0011 0001</td><td style="text-align:center">48</td><td style="text-align:center">30</td><td style="text-align:center">0</td><td style="text-align:center">0101 0000</td><td style="text-align:center">80</td><td style="text-align:center">50</td><td style="text-align:center">P</td><td style="text-align:center">0111 0000</td><td style="text-align:center">112</td><td style="text-align:center">70</td><td style="text-align:center">p</td></tr><tr><td style="text-align:center">0011 0001</td><td style="text-align:center">49</td><td style="text-align:center">31</td><td style="text-align:center">1</td><td style="text-align:center">0101 0001</td><td style="text-align:center">81</td><td style="text-align:center">51</td><td style="text-align:center">Q</td><td style="text-align:center">0111 0001</td><td style="text-align:center">113</td><td style="text-align:center">71</td><td style="text-align:center">q</td></tr><tr><td style="text-align:center">0011 0010</td><td style="text-align:center">50</td><td style="text-align:center">32</td><td style="text-align:center">2</td><td style="text-align:center">0101 0010</td><td style="text-align:center">82</td><td style="text-align:center">52</td><td style="text-align:center">R</td><td style="text-align:center">0111 0010</td><td style="text-align:center">114</td><td style="text-align:center">72</td><td style="text-align:center">r</td></tr><tr><td style="text-align:center">0011 0011</td><td style="text-align:center">51</td><td style="text-align:center">33</td><td style="text-align:center">3</td><td style="text-align:center">0101 0011</td><td style="text-align:center">83</td><td style="text-align:center">53</td><td style="text-align:center">S</td><td style="text-align:center">0111 0011</td><td style="text-align:center">115</td><td style="text-align:center">73</td><td style="text-align:center">s</td></tr><tr><td style="text-align:center">0011 0100</td><td style="text-align:center">52</td><td style="text-align:center">34</td><td style="text-align:center">4</td><td style="text-align:center">0101 0100</td><td style="text-align:center">84</td><td style="text-align:center">54</td><td style="text-align:center">T</td><td style="text-align:center">0111 0100</td><td style="text-align:center">116</td><td style="text-align:center">74</td><td style="text-align:center">t</td></tr><tr><td style="text-align:center">0011 0101</td><td style="text-align:center">53</td><td style="text-align:center">35</td><td style="text-align:center">5</td><td style="text-align:center">0101 0101</td><td style="text-align:center">85</td><td style="text-align:center">55</td><td style="text-align:center">U</td><td style="text-align:center">0111 0101</td><td style="text-align:center">117</td><td style="text-align:center">75</td><td style="text-align:center">u</td></tr><tr><td style="text-align:center">0011 0110</td><td style="text-align:center">54</td><td style="text-align:center">36</td><td style="text-align:center">6</td><td style="text-align:center">0101 0110</td><td style="text-align:center">86</td><td style="text-align:center">56</td><td style="text-align:center">V</td><td style="text-align:center">0111 0110</td><td style="text-align:center">118</td><td style="text-align:center">76</td><td style="text-align:center">v</td></tr><tr><td style="text-align:center">0011 0111</td><td style="text-align:center">55</td><td style="text-align:center">37</td><td style="text-align:center">7</td><td style="text-align:center">0101 0111</td><td style="text-align:center">87</td><td style="text-align:center">57</td><td style="text-align:center">W</td><td style="text-align:center">0111 0111</td><td style="text-align:center">119</td><td style="text-align:center">77</td><td style="text-align:center">w</td></tr><tr><td style="text-align:center">0011 1000</td><td style="text-align:center">56</td><td style="text-align:center">38</td><td style="text-align:center">8</td><td style="text-align:center">0101 1000</td><td style="text-align:center">88</td><td style="text-align:center">58</td><td style="text-align:center">X</td><td style="text-align:center">0111 1000</td><td style="text-align:center">120</td><td style="text-align:center">78</td><td style="text-align:center">x</td></tr><tr><td style="text-align:center">0011 1001</td><td style="text-align:center">57</td><td style="text-align:center">39</td><td style="text-align:center">9</td><td style="text-align:center">0101 1001</td><td style="text-align:center">89</td><td style="text-align:center">59</td><td style="text-align:center">Y</td><td style="text-align:center">0111 1001</td><td style="text-align:center">121</td><td style="text-align:center">79</td><td style="text-align:center">y</td></tr><tr><td style="text-align:center">0010 1010</td><td style="text-align:center">58</td><td style="text-align:center">3A</td><td style="text-align:center">:</td><td style="text-align:center">0101 1010</td><td style="text-align:center">90</td><td style="text-align:center">5A</td><td style="text-align:center">Z</td><td style="text-align:center">0111 1010</td><td style="text-align:center">122</td><td style="text-align:center">7A</td><td style="text-align:center">z</td></tr><tr><td style="text-align:center">0011 1011</td><td style="text-align:center">59</td><td style="text-align:center">3B</td><td style="text-align:center">;</td><td style="text-align:center">0101 1011</td><td style="text-align:center">91</td><td style="text-align:center">5B</td><td style="text-align:center">[</td><td style="text-align:center">0111 1011</td><td style="text-align:center">123</td><td style="text-align:center">7B</td><td style="text-align:center">{</td></tr><tr><td style="text-align:center">0011 1100</td><td style="text-align:center">60</td><td style="text-align:center">3C</td><td style="text-align:center">&lt;</td><td style="text-align:center">0101 1100</td><td style="text-align:center">92</td><td style="text-align:center">5C</td><td style="text-align:center">\</td><td style="text-align:center">0111 1100</td><td style="text-align:center">124</td><td style="text-align:center">7C</td><td style="text-align:center">Vertical bar(无法直接显示用英文代替)</td></tr><tr><td style="text-align:center">0011 1101</td><td style="text-align:center">61</td><td style="text-align:center">3D</td><td style="text-align:center">=</td><td style="text-align:center">0101 1101</td><td style="text-align:center">93</td><td style="text-align:center">5D</td><td style="text-align:center">]</td><td style="text-align:center">0111 1101</td><td style="text-align:center">125</td><td style="text-align:center">7D</td><td style="text-align:center">}</td></tr><tr><td style="text-align:center">0011 1110</td><td style="text-align:center">62</td><td style="text-align:center">3E</td><td style="text-align:center">&gt;</td><td style="text-align:center">0101 1110</td><td style="text-align:center">94</td><td style="text-align:center">5E</td><td style="text-align:center">^</td><td style="text-align:center">0111 1110</td><td style="text-align:center">126</td><td style="text-align:center">7E</td><td style="text-align:center">~</td></tr><tr><td style="text-align:center">0011 1111</td><td style="text-align:center">63</td><td style="text-align:center">3F</td><td style="text-align:center">?</td><td style="text-align:center">0101 1111</td><td style="text-align:center">95</td><td style="text-align:center">5F</td><td style="text-align:center">_</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">组成</th><th style="text-align:center">代码</th></tr></thead><tbody><tr><td style="text-align:center">二进制</td><td style="text-align:center">0和1</td><td style="text-align:center">以0b开头</td></tr><tr><td style="text-align:center">十进制</td><td style="text-align:center">0~9</td><td style="text-align:center">不加前缀</td></tr><tr><td style="text-align:center">八进制</td><td style="text-align:center">0~7</td><td style="text-align:center">以0开头</td></tr><tr><td style="text-align:center">十六进制</td><td style="text-align:center">0~9和a~f</td><td style="text-align:center">以0x开头</td></tr></tbody></table></div><p>以下是代码示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 均输出16</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">0b00010000</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="type">int</span> b = <span class="number">16</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);</span><br><span class="line">    <span class="type">int</span> c = <span class="number">020</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0x10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><div class="table-container"><table><thead><tr><th style="text-align:center">数据类型</th><th style="text-align:center">对应代码</th></tr></thead><tbody><tr><td style="text-align:center">整数</td><td style="text-align:center">short(2字节)<br>int(4字节)<br>long(4字节)<br>long long(8字节)</td></tr><tr><td style="text-align:center">小数</td><td style="text-align:center">float(4字节)<br>double(8字节)<br>long double(8字节)</td></tr><tr><td style="text-align:center">字符</td><td style="text-align:center">char(1字节)<br>(故不能写汉字)</td></tr></tbody></table></div><blockquote><p>注意：(只有)整数类型可以和unsigned组合，表示无符号的整数（不是取绝对值），打印时占位符用<code>%u</code></p></blockquote><h2 id="不同数据的打印"><a href="#不同数据的打印" class="headerlink" title="不同数据的打印"></a>不同数据的打印</h2><div class="table-container"><table><thead><tr><th style="text-align:center">数据类型</th><th style="text-align:center">占位符</th></tr></thead><tbody><tr><td style="text-align:center">short<br>int</td><td style="text-align:center">%d</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">%ld</td></tr><tr><td style="text-align:center">long long</td><td style="text-align:center">%lld</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">%f</td></tr><tr><td style="text-align:center">double<br>long double</td><td style="text-align:center">%lf</td></tr></tbody></table></div><blockquote><p>输出小数时可以控制小数点后位数，例如float类型想控制2位，则使用占位符<code>%.2f</code></p></blockquote><h2 id="sizeof的用法"><a href="#sizeof的用法" class="headerlink" title="sizeof的用法"></a>sizeof的用法</h2><blockquote><p>可以利用sizeof来测量每一种数据类型占用字节</p></blockquote><p>用法：<code>printf(“%zu”, sizeof(变量名/数据类型))</code></p><h1 id="键盘录入scanf"><a href="#键盘录入scanf" class="headerlink" title="键盘录入scanf"></a>键盘录入scanf</h1><h2 id="（注意scanf不安全，可能会导致内存溢出）"><a href="#（注意scanf不安全，可能会导致内存溢出）" class="headerlink" title="（注意scanf不安全，可能会导致内存溢出）"></a>（注意scanf不安全，可能会导致内存溢出）</h2><p>scanf为scanner format的缩写，获取键盘上输入的数据，并赋值给变量</p><p>格式为<code>scanf(“%d”, &amp;变量名);</code>这里需要注意变量名前的<code>&amp;</code></p><p>以下是代码示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;<span class="comment">// 首先定义一个变量a</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);<span class="comment">// 这里对a赋值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);<span class="comment">// 打印变量a</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="字符串变量"><a href="#字符串变量" class="headerlink" title="字符串变量"></a>字符串变量</h1><h2 id="定义方式"><a href="#定义方式" class="headerlink" title="定义方式"></a>定义方式</h2><p>定义方式为：</p><blockquote><p>数据类型 变量名[大小] = 字符串</p></blockquote><p>具体例如：</p><blockquote><p>char str[内存占用大小] = 字符串</p></blockquote><h2 id="内存大小计算方式"><a href="#内存大小计算方式" class="headerlink" title="内存大小计算方式"></a>内存大小计算方式</h2><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小</th></tr></thead><tbody><tr><td style="text-align:center">英文字母/符号/数字</td><td style="text-align:center">占用1个字节</td></tr><tr><td style="text-align:center">中文</td><td style="text-align:center">占用2个字节</td></tr><tr><td style="text-align:center">结束标记</td><td style="text-align:center">占用1个字节</td></tr></tbody></table></div><p>注意：不管有没有字母/符号/数字/中文，都有结束标记。因此内存占用大小均需+1</p><p>以下是代码示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 这里数字123总共3个字节，加上结束标记1个字节，因此前边填4</span></span><br><span class="line">    <span class="type">char</span> str[<span class="number">4</span>] = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>事实上在<code>str[]</code>中可以填更大一点，保证能装下字符串大小即可</p><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>运算符分为以下几类：</p><blockquote><p>算数运算符：+  -  *  /  %</p><p>自增自减运算符：++  —</p><p>赋值运算符：=  +=  -=  *=  /=  %=</p><p>关系运算符：==  !=  &gt;  &gt;=  &lt;  &lt;=</p><p>逻辑运算符：!  &amp;&amp;  ||</p><p>三元运算符：a &gt; b ? a : b</p></blockquote><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><p>注意：<code>/</code>代表除法，向下取整；<code>%</code>代表取余数（运算的数据必须全部都是整数，并且余数的正负和第一个数字保持一致）</p><blockquote><p>在计算过程中会有两个转换：隐式转换和强制转换</p><p>数据类型大小排序：double&gt;float&gt;long long&gt;long&gt;int&gt;short&gt;char</p></blockquote><h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><blockquote><p>定义：在不同数据类型在进行计算、赋值等操作时，会将一个取值范围小的，转成取值范围大的</p><p>注意：short/char类型在运算时会先转化为int再进行计算</p></blockquote><h4 id="普通运算"><a href="#普通运算" class="headerlink" title="普通运算"></a>普通运算</h4><p>以下是两个示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">double</span> b = <span class="number">1.1</span>;</span><br><span class="line"><span class="type">double</span> c = a + b;<span class="comment">// 由于double范围大于int，因此计算结果为double类型</span></span><br></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">short</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">short</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = a + b;<span class="comment">// short类型在运算时会转化为int</span></span><br></pre></td></tr></table></figure><h4 id="字符运算"><a href="#字符运算" class="headerlink" title="字符运算"></a>字符运算</h4><blockquote><p>由于short/char类型在运算时会先转化为int再进行计算，因此字符在相加时会转换为ASCII中的数字形式</p></blockquote><p>以下是代码示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span>;<span class="comment">// 首先定义字符</span></span><br><span class="line">    <span class="type">int</span> b = a + <span class="number">1</span>;<span class="comment">// 由于字符相加会转变为int类型，因此定义b为int</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);<span class="comment">// 字符&#x27;a&#x27;对应的十进制为97，直接输出的结果为98</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, b);<span class="comment">// 如果输出为字符类型，98对应结果为字符&#x27;b&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><blockquote><p>定义：将一个取值范围大的，强制转成取值范围小的</p><p>格式：目标数据类型 变量名 = (目标数据类型)需要被强制转化的数据;</p><p>例如：首先定义int类型的b <code>int b = 10;</code> 随后将其强制转变为short类型并赋值给a <code>short a = (short)b;</code></p><p>注意：强制转换可能导致数据错误</p></blockquote><p>这里给一个计算时的强制转换示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">short</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">short</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">// 由于隐式转换会将short提升为int，因此需要结果为short类型就要进行强制转换</span></span><br><span class="line">    <span class="type">short</span> c = (<span class="type">short</span>)(a + b);<span class="comment">// 这里后边也可以直接写a + b，但是最好还是格式规范一些</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h2><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>同python</p><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">判断是否等于</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">判断是否不等于</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">判断是否大于</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">判断是否大于等于</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">判断是否小于</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">判断是否小于等于</td></tr></tbody></table></div><blockquote><p>输出：若为真则输出1，若为假则输出0</p></blockquote><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">作用</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">与</td><td style="text-align:center">两边都为真，结果才为真</td></tr><tr><td style="text-align:center">\\\</td><td style="text-align:center">或</td><td style="text-align:center">两边都为假，结果才是假</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">非</td><td style="text-align:center">取反</td></tr></tbody></table></div><blockquote><p>输出：若结果为真则输出1，若结果为假则输出0</p><p>ps：逻辑运算会提前停止，例如<code>&amp;&amp;</code>在判断时若第一个为假，则直接输出0；<code>||</code>在判断时若第一个为真，则直接输出1</p></blockquote><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><blockquote><p>格式：关系表达式 ? 表达式1 : 表达式2;</p><p>例如：<code>a &gt; b ? a : b;</code></p></blockquote><p>规则：</p><p>1.计算关系表达式的值</p><p>2.如果成立，输出表达式1；如果不成立输出表达式2</p><h1 id="if和switch"><a href="#if和switch" class="headerlink" title="if和switch"></a>if和switch</h1><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><blockquote><p>规则：如果关系表达式成立则运行语句，反之则运行<code>else</code>中的语句，或者不运行</p></blockquote><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式)</span><br><span class="line">&#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式)</span><br><span class="line">&#123;</span><br><span class="line">    语句体A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    语句体B;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式A)</span><br><span class="line">&#123;</span><br><span class="line">    语句体A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (关系表达式B)</span><br><span class="line">&#123;</span><br><span class="line">    语句体B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (关系表达式C)</span><br><span class="line">&#123;</span><br><span class="line">    语句体C;</span><br><span class="line">&#125;</span><br><span class="line">···</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    语句体N;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><h3 id="switch用法如下"><a href="#switch用法如下" class="headerlink" title="switch用法如下"></a>switch用法如下</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (关系表达式) &#123;</span><br><span class="line">    <span class="keyword">case</span> 数值<span class="number">1</span>:</span><br><span class="line">       语句体<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 数值<span class="number">2</span>:</span><br><span class="line">       语句体<span class="number">2</span>;</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">    ···</span><br><span class="line">    <span class="keyword">default</span> :</span><br><span class="line">       语句体N;</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程为：</p><blockquote><p>1.计算表达式的值</p><p>2.找到对应case的值执行语句，如果没有则执行default后的语句，并且在遇到break时结束</p></blockquote><p>细节补充：</p><blockquote><p>表达式结果和case的值必须为（<strong>字符/整数</strong>）</p><p>case的值不允许重复</p><p>default可以放在任何位置</p></blockquote><h3 id="case穿透"><a href="#case穿透" class="headerlink" title="case穿透"></a>case穿透</h3><blockquote><p>如果匹配的case值语句运行完后并没有<code>break;</code>，那么会继续执行下方case中代码，直到遇到<code>break</code>时停止，或者运行到switch结束</p></blockquote><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句; 条件判断语句; 条件控制语句)</span><br><span class="line">&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>知道循环次数可以使用这个</p></blockquote><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span> (条件判断语句)</span><br><span class="line">&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>先判断后执行</p></blockquote><h3 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do while循环"></a>do while循环</h3><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125; <span class="keyword">while</span> (条件判断语句);</span><br></pre></td></tr></table></figure></p><blockquote><p>先执行后判断，至少运行1次</p></blockquote><h2 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h2><p>这三种类型的无限循环如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( ; ; )</span><br><span class="line">&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="循环的跳转执行"><a href="#循环的跳转执行" class="headerlink" title="循环的跳转执行"></a>循环的跳转执行</h2><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p><code>break</code>只能写在<code>switch</code>或者循环中，在循环中会跳出这一级循环</p><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p><code>continue</code>会结束满足条件的这一次循环，随后接着执行下一次循环，并不会直接跳出这一级循环</p><h3 id="goto"><a href="#goto" class="headerlink" title="goto"></a>goto</h3><p><code>goto</code>可以结合标号，跳转到代码中的任意地方</p><blockquote><p>注意：这个标号和变量不同，可以设置成和变量相同的字母，但可读性不高，不常用</p></blockquote><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>格式如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名(参数<span class="number">1</span>, 参数<span class="number">2.</span>..)</span><br><span class="line">&#123;</span><br><span class="line">    函数体;</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量 = 函数名(参数<span class="number">1</span>, 参数<span class="number">2.</span>..)</span><br></pre></td></tr></table></figure><p><coed>void&lt;/code&gt;开头没返回值，<code>return</code>可以省略不写，若写了则后方不能加返回值</coed></p><p>自定义函数在<code>main</code>函数下边，需要在上方声明</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><blockquote><p>数组：是一种容器，可以用来存储同种数据类型的多个值</p></blockquote><p>用法如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型 数组名[长度] = &#123;数据<span class="number">1</span>, 数据<span class="number">2.</span>..&#125;;</span><br></pre></td></tr></table></figure></p><p>若长度省略，则数据个数就是长度；若不省略，则数据个数需小于等于长度</p><h2 id="计算数组长度"><a href="#计算数组长度" class="headerlink" title="计算数组长度"></a>计算数组长度</h2><p>使用<code>sizeof</code>计算数组长度<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> len = <span class="keyword">sizeof</span>(数组名) / <span class="keyword">sizeof</span>(<span class="type">int</span>);</span><br></pre></td></tr></table></figure></p><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>把多个小数组放到一个大数组里边</p><p>用法如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> 数组名[二维数组长度][一维数组长度] = &#123;</span><br><span class="line">    &#123;x, x, ...&#125;,</span><br><span class="line">    &#123;x, x, ...&#125;,</span><br><span class="line">    &#123;x, x, ...&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="结合指针存入不同长度的一维数组"><a href="#结合指针存入不同长度的一维数组" class="headerlink" title="结合指针存入不同长度的一维数组"></a>结合指针存入不同长度的一维数组</h3><p>例如<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr1[<span class="number">1</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>] = &#123;<span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> arr3[<span class="number">3</span>] = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* arr[<span class="number">3</span>] = &#123;arr1, arr2, arr3&#125;;<span class="comment">// 这里存入的是三个数组的内存地址，所以要用int*，理解为指针数组（存放指针的数组）</span></span><br></pre></td></tr></table></figure></p><h1 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h1><h2 id="普通"><a href="#普通" class="headerlink" title="普通"></a>普通</h2><p>首先引用头文件<code>#include <stdlib.h></stdlib.h></code>，随后使用函数<code>rand()</code></p><p>但由于C中为伪随机，具有固定算法，因此需要使用<code>srand()</code>来设置种子</p><p>为了使每次的随机数不一样，即设置的种子不一样，因此用时间来作为种子，添加头文件<code>#include <time.h></time.h></code>，随后用函数<code>time(NULL)</code></p><p>因此最终代码如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="type">int</span> num = rand();<span class="comment">// 这里num代表生成的随机数</span></span><br></pre></td></tr></table></figure></p><h2 id="进阶-1"><a href="#进阶-1" class="headerlink" title="进阶 1"></a>进阶 1</h2><p>为了生成固定范围的随机数，可以使用取余</p><p>例如：为了生成24~57之间的数，可以先用57-24=33，得到新范围0~33</p><p>随后用生成的随机数对34进行取余运算，结果为0~33，随后+24，便得到24~57的随机数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在原先随机数基础上进行运算</span></span><br><span class="line"><span class="type">int</span> num = rand() % <span class="number">34</span> + <span class="number">24</span>;<span class="comment">// 代表24~57之间的随机数</span></span><br></pre></td></tr></table></figure><h2 id="进阶-2"><a href="#进阶-2" class="headerlink" title="进阶 2"></a>进阶 2</h2><p>生成随机数时，有概率生成一模一样的数字，为了不重复需要进行判断</p><p>最终结合数组，将生成的无重复随机数依次放入数组中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">// 创建包含10个数的空数组</span></span><br><span class="line">srand(time(<span class="literal">NULL</span>));<span class="comment">// 设置种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; )<span class="comment">// 原本需进行10次循环，但由于可能有重复，因此i在确定没有重复后再进行自加</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = rand() % <span class="number">10</span> + <span class="number">1</span>;<span class="comment">// 生成1~10之间的10个随机数，刚好填满空数组，便于检查是否重复</span></span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>;<span class="comment">// 设置标记数字为0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)<span class="comment">// 这个循环是将这次生成的随机数，分别与目前已经填入数组中的随机数进行比较</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] == num)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;<span class="comment">// 判断是否和之前有重复，如有重复，则更改标记数字为1</span></span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">// 同时跳出本次循环，进行下一次循环，减少运算量</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i] = num;<span class="comment">// 判断标记数字是否满足（如果为0则没有重复，如果为1则有重复）</span></span><br><span class="line">        i++;<span class="comment">// 确定没有重复后，i再进行自加</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h1><h2 id="获取变量的内存地址"><a href="#获取变量的内存地址" class="headerlink" title="获取变量的内存地址"></a>获取变量的内存地址</h2><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p&quot;</span>, &amp;变量名);</span><br></pre></td></tr></table></figure></p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>格式：<code>数据类型 * 变量名 = &amp;变量名</code></p><blockquote><p>上方的<code>*</code>为标记</p></blockquote><p>在其他地方使用的<code>*</code>代表解引用运算符</p><h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用 1"></a>作用 1</h2><p>操作函数中的变量</p><p>例如交换两个数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>* p1, <span class="type">int</span>* p2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> temp = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line">    swap(&amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意：函数运行结束后会回收内存，如果要保存变量，需要在变量前加<code>static</code></p><h2 id="作用-2"><a href="#作用-2" class="headerlink" title="作用 2"></a>作用 2</h2><p>函数返回多个值</p><h2 id="作用-3"><a href="#作用-3" class="headerlink" title="作用 3"></a>作用 3</h2><p>将函数的结果和计算状态分开</p><h2 id="作用-4"><a href="#作用-4" class="headerlink" title="作用 4"></a>作用 4</h2><p>方便操作数组和函数</p><h2 id="指针的加减"><a href="#指针的加减" class="headerlink" title="指针的加减"></a>指针的加减</h2><p>直接加减一个整数，则将指针中记录的内存地址向前或向后移动N个字节，N和数据类型有关</p><p>指针之间的运算，可以算出间隔的步长，总字节为<code>步长*数据类型占用字节数</code></p><h2 id="void类型的指针"><a href="#void类型的指针" class="headerlink" title="void类型的指针"></a>void类型的指针</h2><p>不同类型的指针之间不能互相赋值，void类型可以接受任意类型指针记录的内存地址，但无法获得变量里边的数据</p><h2 id="二级指针"><a href="#二级指针" class="headerlink" title="二级指针"></a>二级指针</h2><p>格式：<code>数据类型 <em> </em> 指针名 = &amp;指针名</code></p><h2 id="数组指针"><a href="#数组指针" class="headerlink" title="数组指针"></a>数组指针</h2><p>两种类型如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="comment">// 1.指针获得的是数组的第一个元素的地址，如果进行加减N的话则代表加减数据类型的字节，获得第N-1或N+1个元素的地址</span></span><br><span class="line"><span class="type">int</span>* p1 = arr;<span class="comment">// 数组会退化，这里代表第一个元素的指针</span></span><br><span class="line"><span class="type">int</span>* p2 = arr + <span class="number">1</span>;<span class="comment">// 进行运算+1代表第二个元素的指针</span></span><br><span class="line"><span class="comment">// 2.指针获得的是数组整体，虽然指针显示的也是第一个元素的地址，但进行加减的话则会加减整个数组的字节</span></span><br><span class="line"><span class="type">int</span>* p3 = &amp;arr;</span><br></pre></td></tr></table></figure></p><blockquote><p>补充：在用<code>sizeof</code>进行运算的时候，会获得数组的完整字节</p></blockquote><h3 id="二维数组指针"><a href="#二维数组指针" class="headerlink" title="二维数组指针"></a>二维数组指针</h3><p>格式一：<code>数据类型 (* 指针名) [一维数组长度] = 二维数组名</code><br>格式二：<code>数据类型 <em> </em> 指针名 = 二维数组名</code></p><p>示例如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">3</span>][<span class="number">5</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;,</span><br><span class="line">    &#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>(*p)[<span class="number">5</span>] = arr;<span class="comment">// p这个指针就是二维数组的指针</span></span><br></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr1[<span class="number">1</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>] = &#123;<span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> arr3[<span class="number">3</span>] = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* arr[<span class="number">3</span>] = &#123;arr1, arr2, arr3&#125;;<span class="comment">// 这里存入的是三个数组的内存地址，所以要用int*，理解为指针数组（存放指针的数组）</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>** p = arr;<span class="comment">// p这个指针就是二维数组的指针</span></span><br></pre></td></tr></table></figure><h2 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h2><p>格式：<code>返回值类型 (* 指针名) (形参列表)</code></p><p>可以动态地调用函数</p><p>代码示例<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单定义一个函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> (*p) (<span class="type">int</span>, <span class="type">int</span>) = add;<span class="comment">// p表示函数指针</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 那么可以用指针调用函数</span></span><br><span class="line">sum = p(<span class="number">1</span>, <span class="number">2</span>)<span class="comment">// sum 即为 3</span></span><br></pre></td></tr></table></figure></p><h2 id="函数指针数组"><a href="#函数指针数组" class="headerlink" title="函数指针数组"></a>函数指针数组</h2><p>假设多个函数形参格式和数量都相等，并且返回值相同，那么可以放在一个数组中</p><p>格式：<code>返回值类型 (* 指针数组名[长度]) (形参列表) = &#123;函数1, 函数2, 函数3…&#125;</code></p><p>在调用函数时可以使用<code>(指针数组名[索引数]) (参数)</code></p><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>字符串实际上是以数组的形式存储的，并且结尾加上\0</p><p>例如<code>char str[4] = &#123;‘a’, ‘b’, ‘c’, ‘\0’&#125;;</code></p><p>简写为<code>char str[4] = “abc”;</code></p><p>也可以使用指针来存储字符串<code>char* str = “abc”;</code>。（这种方法定义的会把字符数组放在只读常量区）</p><blockquote><p>只读常量区：内容不可以修改，且里边的字符串可以复用（即如果重复定义相同的字符内容，则此指针地址和最先的定义相同内容的指针地址一样）</p></blockquote><h2 id="字符中常用函数"><a href="#字符中常用函数" class="headerlink" title="字符中常用函数"></a>字符中常用函数</h2><blockquote><p>需要引用头文件<code>#include<string.h></string.h></code></p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">函数名</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">strlen</td><td style="text-align:center">获取字符串长度</td></tr><tr><td style="text-align:center">strcat</td><td style="text-align:center">拼接两个字符串</td></tr><tr><td style="text-align:center">strcpy</td><td style="text-align:center">复制字符串</td></tr><tr><td style="text-align:center">strcmp</td><td style="text-align:center">比较两个字符串</td></tr><tr><td style="text-align:center">strlwr</td><td style="text-align:center">将字符串变为小写</td></tr><tr><td style="text-align:center">strupr</td><td style="text-align:center">将字符串变为大写</td></tr></tbody></table></div><h3 id="strlen"><a href="#strlen" class="headerlink" title="strlen"></a>strlen</h3><p>用法：<code>strlen(str);</code></p><p>细节：计算时不包括结束标记<code>\0</code>，并且一个汉字占用长度为2</p><h3 id="strcat"><a href="#strcat" class="headerlink" title="strcat"></a>strcat</h3><p>用法：<code>strcat(str1, str2);</code></p><p>原理：把第二个字符串中全部内容拷贝到第一个字符串末尾，因此第一个字符串内容发生改变</p><p>条件：第一个字符串可以被修改，并且剩余空间可以容纳第二个字符串</p><h3 id="strcpy"><a href="#strcpy" class="headerlink" title="strcpy"></a>strcpy</h3><p>用法：<code>strcpy(str1, str2);</code></p><p>原理：把第二个字符串中全部内容替换覆盖第一个字符串全部内容</p><p>条件：第一个字符串可以被修改，并且剩余空间可以容纳第二个字符串</p><h3 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp"></a>strcmp</h3><p>用法：<code>strcmp(str1, str2);</code></p><p>原理：将两个字符串中内容进行比较，若完全一样则输出<strong>0</strong>；只要有一个不一样输出<strong>非0</strong></p><p>细节：要求内容和顺序均完全一样才能输出<strong>0</strong></p><h3 id="strlwr和strupr"><a href="#strlwr和strupr" class="headerlink" title="strlwr和strupr"></a>strlwr和strupr</h3><blockquote><p>注意：这两个函数均已过时，需要在函数名前加<code>_</code></p></blockquote><p>用法：<code>_strlwr(str);</code>和<code>_strupr(str);</code></p><p>细节：只能转化英文字母的大小写</p><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>结构体在<code>main()</code>之前定义，但可以在<code>main()</code>中定义变量</p><p>格式如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>;</span><br><span class="line">    成员<span class="number">2</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>在使用时<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> 结构体名 变量名;</span></span><br><span class="line">    变量名.成员<span class="number">1</span> = xxx;</span><br><span class="line">    变量名.成员<span class="number">2</span> = xxx;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 也可以统一进行赋值，如下</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> 结构体名 变量名 =</span> &#123;xxx, xxx...&#125;;<span class="comment">//注意得按照顺序进行赋值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>若其中有的成员为字符串类型，需要使用<code>strcpy</code>函数来进行<strong>赋值</strong>/<strong>修改</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名 变量名;</span></span><br><span class="line"><span class="built_in">strcpy</span>(变量名.成员, <span class="string">&quot;字符串内容&quot;</span>)</span><br></pre></td></tr></table></figure></p><blockquote><p>注意：若要将相同结构体的不同变量放入一个数组时写法为<code>struct 结构体名 数组名[长度] = &#123;变量名1, 变量名2…&#125;;</code></p></blockquote><h2 id="起别名"><a href="#起别名" class="headerlink" title="起别名"></a>起别名</h2><p>假设在写使用结构体时觉得在前方加<code>struct</code>较为麻烦，可以使用如下方法定义结构体</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>;</span><br><span class="line">    成员<span class="number">2</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125; 别名;</span><br></pre></td></tr></table></figure><blockquote><p>注意：其中的结构体名可以不写</p></blockquote><p>之后在使用时可以直接用别名</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    别名 变量名;</span><br><span class="line">    变量名.成员<span class="number">1</span> = xxx;</span><br><span class="line">    变量名.成员<span class="number">2</span> = xxx;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 也可以统一进行赋值，如下</span></span><br><span class="line">    别名 变量名 = &#123;xxx, xxx...&#125;;<span class="comment">//注意得按照顺序进行赋值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：若要将相同结构体的不同变量放入一个数组时写法为<code>别名 数组名[长度] = &#123;变量名1, 变量名2…&#125;;</code></p></blockquote><h2 id="结构体在函数中的应用"><a href="#结构体在函数中的应用" class="headerlink" title="结构体在函数中的应用"></a>结构体在函数中的应用</h2><p>如果想在一个函数里边传入一个结构体，可以使用如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先定义结构体，必须在定义函数之前</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>;</span><br><span class="line">    成员<span class="number">2</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 函数名(<span class="keyword">struct</span> 结构体名 形参名)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 随后可以用调用结构体中的内容</span></span><br><span class="line">    形参名.成员</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 定义一个结构体变量</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> 结构体名 变量名;</span></span><br><span class="line">    变量名.成员<span class="number">1</span> = xxx;</span><br><span class="line">    变量名.成员<span class="number">2</span> = xxx;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用函数时如下</span></span><br><span class="line">    函数名(变量名);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设在定义结构体时使用了别名，则可以使代码更简单</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先定义结构体，必须在定义函数之前</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>;</span><br><span class="line">    成员<span class="number">2</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125; 别名;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 函数名(别名 形参名)<span class="comment">// 这个形参名就代表变量名</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 随后可以用调用结构体中的内容</span></span><br><span class="line">    形参名.成员</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 定义一个结构体变量</span></span><br><span class="line">    别名 变量名;</span><br><span class="line">    变量名.成员<span class="number">1</span> = xxx;</span><br><span class="line">    变量名.成员<span class="number">2</span> = xxx;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用函数时如下</span></span><br><span class="line">    函数名(变量名);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：在函数中使用结构体，实际上是新建了一个变量并将原本变量中的数值传递进去，不管在函数中结构体如何变化，都不会影响到原本的数值</p><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><p>想要真正获取结构体的内容，并进行修改等操作，需要和指针关联，将结构体变量的内存地址传入进去，示例如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以别名为例，如下定义函数</span></span><br><span class="line"><span class="type">void</span> 函数名(别名* 指针变量名)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 在对结构体中数值进行操作时如下，前边为一个整体需要带括号</span></span><br><span class="line">    (*指针变量名).成员</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用函数时如下</span></span><br><span class="line">函数名(&amp;变量名);<span class="comment">// 传入地址</span></span><br></pre></td></tr></table></figure><h2 id="结构体嵌套"><a href="#结构体嵌套" class="headerlink" title="结构体嵌套"></a>结构体嵌套</h2><p>如果需要在一个结构体中引用另外一个结构体，则需要使用嵌套，示例如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体1</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>_1;</span><br><span class="line">    成员<span class="number">1</span>_2;</span><br><span class="line">    ...</span><br><span class="line">&#125;;<span class="comment">// 注意这里需要放在另一个结构体中的结构体要提前定义</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> 结构体2</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">2</span>_1;</span><br><span class="line">    成员<span class="number">2</span>_2;</span><br><span class="line">    ...</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> 结构体1 变量名1;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在对结构体中的<strong>结构体</strong>数值进行<strong>赋值</strong>/<strong>修改</strong>时如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> 结构体2 变量名2;</span></span><br><span class="line">    <span class="comment">// 如果成员直接属于结构体2，可以直接进行操作</span></span><br><span class="line">    变量名<span class="number">2.</span>成员<span class="number">2</span>_1 = xxx;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// 如果成员属于结构体1，需要先在结构体2中找到结构体1</span></span><br><span class="line">    变量名<span class="number">2.</span>变量名<span class="number">1.</span>成员<span class="number">1</span>_1 = xxx;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 也可以统一进行赋值，如下</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> 结构体2 变量名 =</span> &#123;xxx, xxx...&#123;xxx, xxx...&#125;&#125;;</span><br><span class="line">    <span class="comment">// 这里注意在赋值到结构体1中内容时需要加大括号&#123;&#125;，并且得按照顺序进行赋值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理可以通过起别名来使代码更简洁</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>化学公式</title>
      <link href="/2024/10/21/%E5%8C%96%E5%AD%A6/"/>
      <url>/2024/10/21/%E5%8C%96%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<script type="math/tex; mode=display">v_正 = k_1 \cdot c(I_2)</script><script type="math/tex; mode=display">v_逆 = k_2 \cdot c^2(I)</script><script type="math/tex; mode=display">\because v_正 = v_逆</script><script type="math/tex; mode=display">\therefore k_1 \cdot c(I_2) = k_2 \cdot c^2(I)</script><script type="math/tex; mode=display">\therefore c^2(I) = \frac{k_1 \cdot c(I_2)}{k_2}</script><script type="math/tex; mode=display">\therefore v = k_3 \cdot c(H_2) \cdot c^2(I) = k_3 \cdot c(H_2) \cdot \frac{k_1 \cdot c(I_2)}{k_2} = \frac{k_3 \cdot k_1}{k_2} \cdot c(H_2) \cdot c(I_2)</script><script type="math/tex; mode=display">v = k \cdot c(H_2) \cdot c(I_2) \qquad k = \frac{k_3 \cdot k_1}{k_2}</script><script type="math/tex; mode=display">\displaystyle \lim_{x \to 0}{\frac{(1+x)^\frac{2}{x}-e^2[1-ln(1+x)]}{x}}</script><script type="math/tex; mode=display">\displaystyle \lim_{x \to \infty}{sin^2(\pi \sqrt{n^2+n})}</script><script type="math/tex; mode=display">\displaystyle \lim_{x \to 0}{\frac{(1-\frac{1}{2}x^2)^\frac{2}{3}-1}{xln(1+x)}}</script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的中学数学常用公式</title>
      <link href="/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E4%B8%AD%E5%AD%A6%E6%95%B0%E5%AD%A6%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/"/>
      <url>/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E4%B8%AD%E5%AD%A6%E6%95%B0%E5%AD%A6%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>@[TOC]</p><h1 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h1><script type="math/tex; mode=display">\begin{aligned}& \sin x+\sin y= 2 \sin \frac{x+y}{2} \cos \frac{x-y}{2} \\& \sin x-\sin y= 2 \cos \frac{x+y}{2} \sin \frac{x-y}{2} \\& \cos x+\cos y= 2 \cos \frac{x+y}{2} \cos \frac{x-y}{2} \\& \cos x-\cos y=-2 \sin \frac{x+y}{2} \sin \frac{x-y}{2} \\& \sin x \sin y=-\frac{1}{2}[\cos (x+y)-\cos (x-y)] \\& \cos x \cos y= \frac{1}{2}[\cos (x+y)+\cos (x-y)] \\& \sin x \cos y= \frac{1}{2}[\sin (x+y)+\sin (x-y)] \\& \sin a=\frac{2 \tan \frac{\alpha}{2}}{1+\tan ^{2} \frac{\alpha}{2}} \\& \cos \alpha=\frac{1-\tan ^{2} \frac{\alpha}{2}}{1+\tan ^{2} \frac{\alpha}{2}} \\& \tan \alpha=\frac{2 \tan \frac{\alpha}{2}}{1-\tan ^{2} \frac{\alpha}{2}} \\\end{aligned}</script><h1 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h1><script type="math/tex; mode=display">\begin{aligned}& (a+b)^3=(a+b)(a^2-ab+b^2) \\& (a+b)^n=\sum_{k=0}^nC_n^ka^kb^{n-k} \\& a^n-b^n=(a-b)\sum_{k=1}^na^{n-k}b^{k-1} \\\end{aligned}</script><p>韦达定理：设复系数一元n次方程$a_nx^n+a_{n-1}x^{n-1}+\cdots+a_1x+a_0=0$的根为$x_1,x_2,\cdots,x_n$，则成立</p><script type="math/tex; mode=display">x_{1}+x_{2}+\cdots+x_{n}=\sum_{i=1}^{n} x_{i}=-\frac{a_{n-1}}{a_{n}} \\x_{1} x_{2} \cdots x_{n}=\prod_{i=1}^{n} x_{i}=(-1)^{n} \frac{a_{0}}{a_{n}}</script><h1 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h1><script type="math/tex; mode=display">\begin{aligned}& C_m^n=\frac{m!}{n!(m-n)!} \\\end{aligned}</script><h1 id="数列"><a href="#数列" class="headerlink" title="数列"></a>数列</h1><p><a href="https://blog.csdn.net/yan59966/article/details/95371566">求数列通项公式的十一种方法</a></p><h1 id="不等式"><a href="#不等式" class="headerlink" title="不等式"></a>不等式</h1><script type="math/tex; mode=display">|x|-|y| \leqslant|x \pm y| \leqslant|x|+|y| \\\frac{2}{\frac{1}{a}+\frac{1}{b}}\le\sqrt{ab}\le\frac{a+b}{2}\le\sqrt{\frac{a^2+b^2}{2}}</script><p>调和均值≤几何均值≤算术均值≤平方均值<br><a href="https://blog.csdn.net/robert_chen1988/article/details/88256626">柯西不等式，琴生Jensen不等式</a></p><h1 id="极坐标"><a href="#极坐标" class="headerlink" title="极坐标"></a>极坐标</h1><script type="math/tex; mode=display">\begin{aligned}& r=2\cos\theta \\\end{aligned}</script><h1 id="三余弦定理"><a href="#三余弦定理" class="headerlink" title="三余弦定理"></a>三余弦定理</h1><p>&emsp;&emsp;直角三角形 $ABC$ 中，角 $B$ 是直角，$AB=1$，$BD$ 垂直于三角形 $ABC$，$\angle CAB=\alpha,\angle DAB=\beta,\angle DAC=\gamma$，那么</p><script type="math/tex; mode=display">\cos\gamma=\cos\alpha\cos\beta</script><p>&emsp;&emsp;证明：$BC=\tan\alpha,BD=\tan\beta,CD^2=BC^2+BD^2=\tan^2\alpha+\tan^2\beta,AC=1/\cos\alpha,AD=1/\cos\beta$，</p><script type="math/tex; mode=display">\begin{aligned}\cos\gamma =& \frac{AD^2+AC^2-CD^2}{2AD\cdot AC} \\=& \frac{\frac{1}{\cos^2\alpha}+\frac{1}{\cos^2\beta}-(\tan^2\alpha+\tan^2\beta)}{2\cdot\frac{1}{\cos\alpha}\cdot\frac{1}{\cos\beta}} \\=& \frac{\cos^2\alpha+\cos^2\beta-(\sin^2\alpha\cos^2\beta+\sin^2\beta\cos^2\alpha)}{2\cos\alpha\cos\beta} \\=& \frac{\cos^2\alpha+\cos^2\beta-((1-\cos^2\alpha)\cos^2\beta+(1-\cos^2\beta)\cos^2\alpha)}{2\cos\alpha\cos\beta} \\=& \frac{\cos^2\alpha\cos^2\beta+\cos^2\beta\cos^2\alpha}{2\cos\alpha\cos\beta} \\=& \cos\alpha\cos\beta \\\end{aligned}</script><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>三角形外切圆半径</p><script type="math/tex; mode=display">R=\frac{abc}{4S}</script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的线性代数与矩阵论笔记</title>
      <link href="/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%9F%A9%E9%98%B5%E8%AE%BA%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%9F%A9%E9%98%B5%E8%AE%BA%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>@[TOC]<br>大写字母表示矩阵（如$A$），小写粗斜体表示向量（如$\boldsymbol{x}$），正常字体表示标量或坐标点等（如$x_1$）。</p><h1 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h1><script type="math/tex; mode=display">\begin{aligned}& a\times(b\times c)=a^\times b^\times c=(a^\times b^\times)c=a^\times(b^\times c) \\\neq& (a\times b)\times c= a\times b\times c=(a^\times b)^\times c \\\end{aligned}</script><script type="math/tex; mode=display">a\times b\times c\neq a^\times b^\times c \\(Ra)\times b\neq R(a\times b) \\(a\times R)b= a\times (Rb) \\</script><h1 id="方阵的迹"><a href="#方阵的迹" class="headerlink" title="方阵的迹"></a>方阵的迹</h1><p>定义</p><script type="math/tex; mode=display">\text{tr}(A)=\sum_{i=1}^n(a_{ii})</script><p>性质</p><script type="math/tex; mode=display">\begin{aligned}& \text{tr}(A)=\text{tr}(A^{\text{T}})  \\& \text{tr}(A+B)=\text{tr}(A)+\text{tr}(B)  \\& \text{tr}(\alpha A)=\alpha\text{tr}(A) \\& \text{tr}(A)=\sum_{i=1}^n\lambda_i  \\& \text{tr}(AB)=\text{tr}(BA)  \\& \text{tr}(A^{\text{T}} A)=\sum_{i=1}^n\sum_{j=1}^n a_{ij}^2 \end{aligned}</script><p><a href="https://blog.csdn.net/weixin_43989965/article/details/120630050">三个三维矢量叉乘公式（拉格朗日矢量公式）推导 -CSDN博客</a>  </p><h1 id="矩阵的秩"><a href="#矩阵的秩" class="headerlink" title="矩阵的秩"></a>矩阵的秩</h1><ul><li>A和B等价或相似或合同$\Rightarrow r(A)=r(B)$</li><li>$r(A)=r(A^{\text{T}})=r(A^{\text{T}}A)=r(AA^{\text{T}})=r(kA)$</li><li>若$A$列满秩则$r(AB)=r(B)$，若$A$行满秩则$r(BA)=r(B)$</li><li>$r(A\pm B)\le r(A)+r(B)$</li><li>$r(A)+r(B)-n\le r(AB)\le\min\{r(A), r(B)\}\le\max\{r(A), r(B)\}\le r(A\vdots B)\le r(A)+r(B)$</li><li>$AB=O\Rightarrow r(A)+r(B)\le n$</li><li>幂零阵：$A^k=O\Rightarrow r(A)&lt;n$</li><li>幂等阵：$A^2=A\Rightarrow r(A)+r(I-A)=n$</li><li>幂幺阵：$A^k=I\Rightarrow r(A)=n$</li><li>$r\left(\begin{array}{ll}<br>A &amp; O \\ O &amp; B<br>\end{array}\right)=r(A)+r(B) \leq r\left(\begin{array}{ll}<br>A &amp; 0 \\ C &amp; B<br>\end{array}\right) \leq r(A)+r(B)+r(C)$</li><li>$r(A*)=\begin{cases}<br>n \Leftrightarrow r(A)=n \\<br>1 \Leftrightarrow r(A)=n -1 \\<br>0 \Leftrightarrow r(A)&lt;n -1 \\<br>\end{cases}$</li><li>若A可逆，则$r(AB)=r(BA)=r(B)$</li><li>若$A$是n阶方阵则$r(A)\ge\mu(A)$，$\mu(A)$表示矩阵$A$的非零特征值的个数；若$A$可相似对角化则$r(A)=\mu(A)$</li><li>若$A$是正定或正交矩阵则$r(A)=n$</li><li>m×n 矩阵 A 的秩为 r 的充分与必要条件为：存在 m 阶满秩矩阵 P 与 n 阶满秩矩阵 Q 使得<script type="math/tex; mode=display">PAQ=\Lambda=\left(\begin{matrix}I_r & O \\O & O\end{matrix}\right)</script></li></ul><p>若$r(A)=1$，则</p><ul><li>$|\lambda I-A|=\lambda^n-\text{tr}(A)\lambda^{n-1}$</li><li>$\lambda_1=\text{tr}(A)$，$\lambda_2=\cdots=\lambda_n=0$</li><li>$A^2=\text{tr}(A)A$，$A^n=(\text{tr}(A))^{n-1}A$</li><li>（充要条件）存在非零向量$\alpha$、$\beta$使得$A=\alpha\beta$<h1 id="特征值与特征向量"><a href="#特征值与特征向量" class="headerlink" title="特征值与特征向量"></a>特征值与特征向量</h1></li><li>特征值都是单值的矩阵一定可以对角化。</li><li>n阶矩阵有n个线性无关的特征向量是可以相似对角化的充分必要条件。</li><li>实对称矩阵的不同特征值对应的特征向量两两正交。</li><li>实对称矩阵可对角化，即必有n个线性无关的特征向量。</li><li>不同特征值对应的特征向量线性无关。</li><li>特征值相同的两个矩阵不一定相似。</li><li>$\lambda_1+\lambda_2+\cdots+\lambda_n=\text{tr}(A)$</li><li>$\lambda_1\lambda_2\cdots\lambda_n=|A|$</li></ul><p>设$A$是 n 阶矩阵，$\lambda_0$是$A$的$k$阶特征值，则</p><ul><li>若$k=1$，则属于特征值$\lambda_0$的线性无关的特征向量只有一个；</li><li>若$k&gt;1$，则属于特征值$\lambda_0$的线性无关的特征向量不超过$k$个。<h1 id="分块矩阵"><a href="#分块矩阵" class="headerlink" title="分块矩阵"></a>分块矩阵</h1>设矩阵$A$是一个$n+m$阶方阵，它具有分块三角阵的结构，即<script type="math/tex; mode=display">A=\left[\begin{array}{cc}  A_{11} & A_{12} \\ 0 & A_{22}\end{array}\right]\text{或}A=\left[\begin{array}{cc}  A_{11} & 0 \\ A_{21} & A_{22}\end{array}\right]</script>其中$A_{11}$和$A_{22}$分别是n阶和m阶可逆方阵，这意味着 A 是可逆阵。利用<script type="math/tex; mode=display">A^{-1}A=AA^{-1}=I_{n+m}</script>可以推得<script type="math/tex; mode=display">A^{-1}=\left[\begin{array}{cc}  A_{11}^{-1} & -A_{11}^{-1}A_{12}A_{22}^{-1} \\ 0 & A_{22}^{-1}\end{array}\right] \\A^{-1}=\left[\begin{array}{cc}  A_{11}^{-1} & 0 \\ -A_{22}^{-1}A_{21}A_{11}^{-1} & A_{22}^{-1}\end{array}\right]</script>一般地，若n+m阶方阵A可以写成分块形式<script type="math/tex; mode=display">A=\left[\begin{array}{cc}  A_{11} & A_{12} \\ A_{21}A_{11}^{-1} & A_{22}\end{array}\right]</script>其中$A_{11}$和$A_{22}$具有与前相同的性质，那么利用矩阵分解关系式<script type="math/tex; mode=display">A=\left[\begin{array}{cc}  I_n & 0 \\ A_{21}A_{11}^{-1} & I_m\end{array}\right]\left[\begin{array}{cc}  A_{11} & A_{12} \\ 0 & A_{22}-A_{21}A_{11}^{-1}A_{12}\end{array}\right]</script><script type="math/tex; mode=display">A=\left[\begin{array}{cc}  I_n & A_{12}A_{22}^{-1} \\ 0 & I_m\end{array}\right]\left[\begin{array}{cc}  A_{11}-A_{12}A_{22}^{-1}A_{21} & 0 \\ A_{21} & A_{22}\end{array}\right]</script>和前面关于三角阵的求逆结果，可以推得矩阵 A 的分块求逆公式如下：<script type="math/tex; mode=display">A^{-1}=\left[\begin{array}{cc}  A_{11}^{-1}+A_{11}^{-1}A_{12}\tilde{A}_{22}^{-1}A_{21}A_{11}^{-1} & -A_{11}^{-1}A_{12}\tilde{A}_{22}^{-1} \\  -\tilde{A}_{22}^{-1}A_{21}A_{11}^{-1} & \tilde{A}_{22}^{-1}\end{array}\right]</script><script type="math/tex; mode=display">A^{-1}=\left[\begin{array}{cc}  \tilde{A}_{11}^{-1} & -\tilde{A}_{11}^{-1}A_{12}A_{22}^{-1} \\  -A_{22}^{-1}A_{21}\tilde{A}_{11}^{-1} & A_{22}^{-1}+A_{22}^{-1}A_{21}\tilde{A}_{11}^{-1}A_{12}A_{22}^{-1}\end{array}\right]</script>其中<script type="math/tex; mode=display">\tilde{A}_{11}=A_{11}-A_{12}A_{22}^{-1}A_{21} \\\tilde{A}_{22}=A_{22}-A_{21}A_{11}^{-1}A_{12}</script>假定矩阵A是可逆矩阵，因而$\tilde{A}_{11}^{-1}$和$\tilde{A}_{22}^{-1}$总是存在的。根据逆矩阵的唯一性，对比两式立即得到（这附近的推导可能有问题）<script type="math/tex; mode=display">(A_{11}-A_{12}A_{22}^{-1}A_{21})^{-1}=A_{11}^{-1}+A_{11}^{-1}A_{12}\tilde{A}_{22}^{-1}A_{21}A_{11}^{-1}</script><script type="math/tex; mode=display">A_{22}-A_{21}A_{11}^{-1}A_{12}=A_{22}^{-1}+A_{22}^{-1}A_{21}\tilde{A}_{11}^{-1}A_{12}A_{22}^{-1}</script>这是两个非常重要的矩阵恒等式，在矩阵变换中经常用到。其中第一式习惯上称为矩阵反馈公式。</li><li>若A和B是方阵，则<script type="math/tex; mode=display">|AB|=|A|\cdot|B|</script>上式可用初等变换方法证明。</li><li>若A和D是方阵，则<script type="math/tex; mode=display">\left|\begin{matrix}A & B \\ 0 & D\end{matrix}\right|=|A|\cdot|D|</script>QR分解法证明：<script type="math/tex; mode=display">\begin{aligned}&\left|\begin{matrix}A & 0 \\ 0 & D\end{matrix}\right|=\left|\begin{matrix}A & 0 \\ 0 & I\end{matrix}\right|\left|\begin{matrix}I & 0 \\ 0 & D\end{matrix}\right|=|A|\cdot|D| \\&\left|\begin{matrix}A & B \\ 0 & D\end{matrix}\right|=\left|\begin{matrix}Q_A & 0 \\ 0 & Q_D\end{matrix}\right|\cdot\left|\begin{matrix}R_A & Q_A^{\text{T}}B \\ 0 & R_D\end{matrix}\right|=|Q_A|\cdot|Q_D|\cdot|R_A|\cdot|R_D|\end{aligned}</script></li><li>若A和D是方阵且A可逆，则<script type="math/tex; mode=display">\left|\begin{matrix}A & B \\ C & D\end{matrix}\right|=|A|\cdot|D-CA^{-1}B|</script>若D可逆则<script type="math/tex; mode=display">\left|\begin{matrix}A & B \\ C & D\end{matrix}\right|=|D|\cdot|A-BD^{-1}C|</script>证明<script type="math/tex; mode=display">\begin{aligned}\left|\begin{matrix}A & B \\ C & D\end{matrix}\right|=& \left|\begin{matrix}I & 0 \\ CA^{-1} & I\end{matrix}\right|\left|\begin{matrix}A & B \\ 0 & D-CA^{-1}B\end{matrix}\right|\\=& \left|\begin{matrix}I & BD^{-1} \\ 0 & I\end{matrix}\right|\left|\begin{matrix}A-BD^{-1}C & 0 \\ C & D\end{matrix}\right|\end{aligned}</script><h1 id="矩阵的正定与负定"><a href="#矩阵的正定与负定" class="headerlink" title="矩阵的正定与负定"></a>矩阵的正定与负定</h1>&emsp;&emsp;设矩阵$A$为n阶对称阵，如果对于所有n维列向量$\boldsymbol{x}$，二次型$\boldsymbol{x}^{\text{T}} A\boldsymbol{x}$均为非负，则称矩阵$A$为非负定矩阵，并用$A\ge 0$来表示。进一步，如果矩阵$A$为非负定矩阵，且对所有非零向量$\boldsymbol{x}$，二次型$\boldsymbol{x}^{\text{T}}A\boldsymbol{x}$总大于零，则称矩阵$A$为正定阵，并且用$A&gt;0$来表示。对称矩阵$A$当且仅当其所有特征值非负时才是非负定阵；当且仅当特征值均为正时才是正定阵。显然，若矩阵$A$为正定阵，则其逆矩阵存在且也为正定阵。<br>&emsp;&emsp;如果$D$是任意$n\times m$阶矩阵，则$A=DD’$是非负定阵；当且仅当$D$行满秩时，$A=DD’$才是正定阵。<br>&emsp;&emsp;如果$A$和$B$是同阶非负定阵，$\alpha$和$\beta$为非负常数，则$\alpha A+\beta B$为非负定阵；若$A$、$B$两者之一是正定阵而另一个为非负定阵且$\alpha$和$\beta$均大于零，则$\alpha A+\beta B$是正定阵。设$A$和$B$分别为非负定阵和正定阵，称-A和-$B$分别是非正定阵和负定阵。非正定阵和负定阵分别与非负定阵和正定阵具有相反而类似的性质。<br>&emsp;&emsp;几个名词：</li><li>标准形</li><li>规范形</li><li>矩阵等价</li><li>矩阵相似</li><li>矩阵合同</li></ul><p>&emsp;&emsp;二次型的标准形的系数中正负系数的个数保持不变，分别称为二次型的正负惯性指数。$n$阶实对称矩阵$A$和$B$的正负惯性指数相同是$A$和$B$合同的充分必要条件。<br>&emsp;&emsp;记二次型$f(\boldsymbol{x})=\boldsymbol{x}^{\text{T}} A\boldsymbol{x}$，$A$为$n$阶实对称矩阵，下列命题相互等价：</p><ul><li>$f$是正定（负定）二次型</li><li>$f$的正（负）惯性指数为$n$</li><li>$A$的特征值全为正（负）</li><li>$A$合同于$+I$（$-I$）</li><li>$A$的顺序主子式都大于0（$A$的奇数阶顺序主子式为负，偶数阶顺序主子式为正）</li><li>存在可逆矩阵$B$使得$A=B^TB$</li><li>$a_{ii}&gt;0$，$i=1,2,\cdots,n$<h1 id="内积与范数"><a href="#内积与范数" class="headerlink" title="内积与范数"></a>内积与范数</h1>向量范数：</li><li>非负性：对所有$\vec{x}$均有 $||\vec{x}||\ge 0$；当且仅当 $\vec{x}=0$ 时，才有$||\vec{x}||=0$；</li><li>齐次性：$||k\vec{x}||=|k| \ ||\vec{x}||$；</li><li>三角不等式 $||A+B||\le||A|| + ||B||$。</li></ul><p>矩阵范数除此以外还有次乘性：</p><ul><li>次乘性：$||AB||\le||A||\ ||B||$。 </li></ul><p>如果向量范数$||x||$和矩阵范数$||A||$满足$||Ax||\le||A||\ ||x||$，则称相容。</p><h1 id="矩阵的微分运算"><a href="#矩阵的微分运算" class="headerlink" title="矩阵的微分运算"></a>矩阵的微分运算</h1><p>矩阵微分运算有几种不同的情况。</p><h2 id="矩阵函数对标量的导数"><a href="#矩阵函数对标量的导数" class="headerlink" title="矩阵函数对标量的导数"></a>矩阵函数对标量的导数</h2><p>设n×m阶矩阵$A$、$B$和m×1阶矩阵$C$的元素都是实变数t的函数，$\lambda=\lambda(t)$是$t$的标量实值函数。定义矩阵$A$对$t$的导数等于$A$的每个元素$a_{ij}(t)$对$t$分别求导所构成的n×m阶矩阵，即</p><script type="math/tex; mode=display">\frac{\text{d}A}{\text{d}t}=\left[\frac{\text{d}a_{ij}(t)}{\text{d}t}\right]</script><p>比如，对于n维列向量$\boldsymbol{x}＝[x_1(t)\ x_2(t)\cdots x_n(t)]^{\text{T}}$，按定义就有</p><script type="math/tex; mode=display">\frac{\text{d}\boldsymbol{x}}{\text{d}t}=\left[\frac{\text{d}x_1(t)}{\text{d}t}\frac{\text{d}x_2(t)}{\text{d}t}\cdots\frac{\text{d}x_n(t)}{\text{d}t}\right]^{\text{T}}</script><p>关于矩阵函数对标量的导数，根据上述定义容易验证如下运算规则；</p><script type="math/tex; mode=display">\begin{aligned}    &\frac{\text{d}(A+B)}{\text{d}t}=\frac{\text{d}A}{\text{d}t}+\frac{\text{d}B}{\text{d}t} \\    &\frac{\text{d}(\lambda A)}{\text{d}t}=\frac{\text{d}\lambda}{\text{d}t}A+\lambda\frac{\text{d}A}{\text{d}t} \\    &\frac{\text{d}(AC)}{\text{d}t}=\frac{\text{d}A}{\text{d}t}C+A\frac{\text{d}C}{\text{d}t}\end{aligned}</script><h2 id="标量函数对矩阵的导数"><a href="#标量函数对矩阵的导数" class="headerlink" title="标量函数对矩阵的导数"></a>标量函数对矩阵的导数</h2><p>设$f=f(A)$、$g=g(A)$是以矩阵$A$的n×m个元素为自变量的标量定值函数。定义$f$对$A$的导数为如下$n\times m$阶矩阵</p><script type="math/tex; mode=display">\frac{\text{d}f}{\text{d}A}\triangleq\left[\frac{\partial f}{\partial a_{ij}}\right]</script><p>对于上述这类微分运算，显然有</p><script type="math/tex; mode=display">\begin{aligned}    &\frac{\text{d}(f+g)}{\text{d}A}=\frac{\text{d}f}{\text{d}A}+\frac{\text{d}g}{\text{d}A} \\    &\frac{\text{d}(fg)}{\text{d}A}=\frac{\text{d}f}{\text{d}A}g+f\frac{\text{d}g}{\text{d}A}\end{aligned}</script><h2 id="矩阵函数对向量的导数"><a href="#矩阵函数对向量的导数" class="headerlink" title="矩阵函数对向量的导数"></a>矩阵函数对向量的导数</h2><p>设$F(\boldsymbol{x})$是n维列向量$\boldsymbol{x}$的$m\times l$阶矩阵函数，即$F(\boldsymbol{x})=(f_{ij}(\boldsymbol{x}))_{m×l}$，而$\boldsymbol{x}=[x_1\ x_2\cdots x_n]^{\text{T}}$。定义$F(\boldsymbol{x})$对$\boldsymbol{x}$的导数为如下nm×l阶矩阵：</p><script type="math/tex; mode=display">\frac{\text{d}F}{\text{d}\boldsymbol{x}}\triangleq[\frac{\partial F(\boldsymbol{x})}{\partial x_1}\vdots\frac{\partial F(\boldsymbol{x})}{\partial x_2}\cdots\vdots\frac{\partial F(\boldsymbol{x})}{\partial x_n}]^{\text{T}}</script><p>其中</p><script type="math/tex; mode=display">\frac{\partial F(\boldsymbol{x})}{\partial x_k}\triangleq\frac{\partial f_ij(\boldsymbol{x})}{\partial x_k}</script><p>对于这类运算，我们有</p><script type="math/tex; mode=display">\begin{aligned}    &\frac{\text{d}F(\boldsymbol{x})+G(\boldsymbol{x})}{\text{d}\boldsymbol{x}}    =\frac{\text{d}F(\boldsymbol{x})}{\text{d}\boldsymbol{x}}+\frac{\text{d}G(\boldsymbol{x})}{\text{d}\boldsymbol{x}} \\    &\frac{\text{d}(F^{\text{T}}(\boldsymbol{x})G(\boldsymbol{x}))}{\text{d}\boldsymbol{x}}    =\frac{\text{d}F^{\text{T}}(\boldsymbol{x})}{\text{d}\boldsymbol{x}}G(\boldsymbol{x})+\frac{\text{d}G^{\text{T}}(\boldsymbol{x})}{\text{d}\boldsymbol{x}}F(\boldsymbol{x})\end{aligned}</script><h2 id="几个常用的矩阵微分公式"><a href="#几个常用的矩阵微分公式" class="headerlink" title="几个常用的矩阵微分公式"></a>几个常用的矩阵微分公式</h2><p>根据前面的定义，不难验证以下矩阵微分公式：</p><ul><li>设$f=f(\boldsymbol{x})$是n维列向量$\boldsymbol{x}$的标量定值函数，则有<script type="math/tex; mode=display">\frac{\text{d}f}{\text{d}t}=\left[\frac{\text{d}f}{\text{d}\boldsymbol{x}}\right]^{\text{T}}\frac{\text{d}\boldsymbol{x}}{\text{d}t}</script>式中t为实变数。</li><li>设$\boldsymbol{x}$为n维列向量，$\boldsymbol{a}$和$B$分别为与$\boldsymbol{x}$无关的m维列向量和m×n阶矩阵，f为$\boldsymbol{x}$的一个二次型，且<script type="math/tex; mode=display">f=(\boldsymbol{a}+B\boldsymbol{x})^{\text{T}}(\boldsymbol{a}+B\boldsymbol{x})</script>则有<script type="math/tex; mode=display">\begin{aligned}      &\frac{\text{d}(\boldsymbol{a}+B\boldsymbol{x})}{\text{d}\boldsymbol{x}}=B^{\text{T}} \\      &\frac{\text{d}f}{\text{d}\boldsymbol{x}}=2B^{\text{T}}(\boldsymbol{a}-B\boldsymbol{x})  \end{aligned}</script></li><li>设$A$为n阶方阵，其元素是实变数t的函数，且对所有的t，$A^{-1}$存在，则有<script type="math/tex; mode=display">\frac{\text{d}A^{-1}}{\text{d}t}=-A^{-1}\frac{\text{d}A}{\text{d}t}A^{-1}</script>  此式可通过恒等式<script type="math/tex; mode=display">\frac{\text{d}I_n}{\text{d}t}=\frac{\text{d}AA^{-1}}{\text{d}t}=0</script>  导出。</li><li>设，则有的解为矩阵$A$的伪迹。式中星号*表示转置兼取复数共轭。</li><li>其它常用公式</li></ul><script type="math/tex; mode=display">\begin{aligned}&\frac{\text{d}\boldsymbol{x}^{\text{T}}}{\text{d}\boldsymbol{x}}=\frac{\text{d}\boldsymbol{x}}{\text{d}\boldsymbol{x}^{\text{T}}}=I_n \\& \frac{\text{d}(\boldsymbol{x}^{\text{T}}\mathbf{A}\boldsymbol{x})}{\text{d}\boldsymbol{x}}=(\mathbf{A}+\mathbf{A}^{\text{T}})\boldsymbol{x} \\&\frac{\text{d}(\boldsymbol{x}^{\text{T}}\mathbf{A}\boldsymbol{x})}{\text{d}\mathbf{A}}=\boldsymbol{x}\boldsymbol{x}^{\text{T}} \\&\frac{\text{d}J}{\text{d}\mathbf{X}}    =\frac{\text{d}(\boldsymbol{\alpha}^{\text{T}}\mathbf{X}\boldsymbol{\beta})}{\text{d}\mathbf{X}}    =\boldsymbol{\alpha}\boldsymbol{\beta}^{\text{T}}exp \\\end{aligned}</script><h2 id="矩阵函数及其导数的一些性质"><a href="#矩阵函数及其导数的一些性质" class="headerlink" title="矩阵函数及其导数的一些性质"></a>矩阵函数及其导数的一些性质</h2><p>定义</p><script type="math/tex; mode=display">\begin{aligned}& \text{e}^{A}=I+At+\frac{A^2}{2!}+\frac{A^3}{3!}+\cdots \\& \sin A=A-\frac{A^3}{3!}+\frac{A^5}{5!}-\cdots \\& \cos A=1-\frac{A^2}{2!}+\frac{A^4}{4!}+\cdots\\& \ln(1+A)=A-\frac{A^2}{2}+\frac{A^3}{3}-\cdots\qquad(1)\\\end{aligned}</script><p>性质</p><script type="math/tex; mode=display">\begin{aligned}& A\text{e}^{A}=\text{e}^{A}A \\& \text{e}^{A}\cdot\text{e}^{B}=\text{e}^{B}\cdot\text{e}^{A}=\text{e}^{A+B}\qquad(2) \\& (\text{e}^{A})^{-1}=\text{e}^{-A} \\& \text{e}^{jA}=\cos A+j\sin A \\& \text{e}^{-At}=(\text{e}^{At})^{-1} \\& \text{e}^{P^{-1}APt}=P^{-1}\text{e}^{At}P \\& \ln(\text{e}^A)=A\qquad(3) \\& \ln(AB)=\ln A+\ln B\qquad(4) \\& \frac{\text{d}}{\text{d}t}\text{e}^{At}=A\text{e}^{At}=\text{e}^{At}A \\& \frac{\text{d}}{\text{d}t}(A(t)B(t))=A'B+AB' \\& \frac{\text{d}}{\text{d}t}(A^2(t))=A'A+AA'\neq2AA' \\& \frac{\text{d}}{\text{d}t}(\text{e}^{A(t)})\neq A'(t)\text{e}^{A(t)}\neq\text{e}^{A(t)}A'(t)\qquad(5) \\\end{aligned}</script><p>注：<br>(1)需满足收敛域条件$|A|&lt;1$<br>(2)需满足$AB=BA$。<br>(3)需满足$|\text{e}^A-I|&lt;1$<br>(4)需满足$|AB-I|&lt;1$和$AB=BA$。<br>(5)仅当$A’A=AA’$时才能为等号但一般不等。</p><h2 id="常系数齐次-非齐次线性微分方程组"><a href="#常系数齐次-非齐次线性微分方程组" class="headerlink" title="常系数齐次/非齐次线性微分方程组"></a>常系数齐次/非齐次线性微分方程组</h2><script type="math/tex; mode=display">\begin{aligned}& \boldsymbol{x}'(t)=A\boldsymbol{x}(t) \\& \boldsymbol{x}(t)=\text{e}^{A(t-t_0)}\boldsymbol{x}(t_0) \\& \boldsymbol{x}'(t)=A\boldsymbol{x}(t)+\boldsymbol{f}(t) \\& \boldsymbol{x}(t)=\text{e}^{A(t-t_0)}\boldsymbol{x}(t_0)+\int_{t_0}^t\text{e}^{A(t-\tau)}\boldsymbol{f}(\tau)\text{d}\tau \\\end{aligned}</script><p>证明</p><script type="math/tex; mode=display">\begin{aligned}& x'-Ax=f \\& \text{e}^{-At}(x'-Ax)=(\text{e}^{-At}x)'=\text{e}^{-At}f \\& \text{e}^{-At}x(t)=\int_{t_0}^t\text{e}^{-A\tau}f(\tau)\text{d}\tau+C \\& C=\text{e}^{-At_0}x(t_0) \\& x(t)=\text{e}^{A(t-t_0)}x(t_0)+\int_{t_0}^t\text{e}^{A(t-\tau)}f(\tau)\text{d}\tau \\\end{aligned}</script><h1 id="矩阵的伪逆"><a href="#矩阵的伪逆" class="headerlink" title="矩阵的伪逆"></a>矩阵的伪逆</h1><p>设A为n×m阶矩阵，其元素可以是复数。我们称基于A形成的矩阵代数方程组</p><h1 id="Jordan标准型"><a href="#Jordan标准型" class="headerlink" title="Jordan标准型"></a>Jordan标准型</h1><script type="math/tex; mode=display">A=\left[\begin{matrix}3 & 1 & -1 \\1 & 2 & -1 \\2 & 1 & 0\end{matrix}\right]</script><p>方法一：<br>求矩阵的特征值和特征向量 $f_A(\lambda)=\lambda I-A=(\lambda-1)(\lambda-2)^2$，<br>对于矩阵$A$的特征值$\lambda_0$，<br>$\lambda_0$的代数重数指$\lambda_0$作为特征多项式$f_A(\lambda)$的根的重数。<br>$\lambda_0$的几何重数指$\lambda_0$对应的特征向量的个数。<br>任一特征值的代数重数不小于它的几何重数。<br>$\lambda=1$对应的特征向量为$[0,1,1]^\text{T}$，代数重数1，几何重数1。<br>$\lambda=2$对应的特征向量为$[1,0,1]^\text{T}$，代数重数2，几何重数1。<br>将Jordan标准型写成$AP=PJ$的形式</p><script type="math/tex; mode=display">\begin{aligned}J=&\left[\begin{matrix}1 & 0 & 0 \\0 & 2 & 1 \\0 & 0 & 2\end{matrix}\right] \\\left[\begin{matrix}3 & 1 & -1 \\1 & 2 & -1 \\2 & 1 & 0\end{matrix}\right]\left[\begin{matrix}0 & 1 & 1 \\1 & 0 & 1 \\1 & 1 & 1\end{matrix}\right]=&\left[\begin{matrix}0 & 1 & 1 \\1 & 0 & 1 \\1 & 1 & 1\end{matrix}\right]\left[\begin{matrix}1 & 0 & 0 \\0 & 2 & 1 \\0 & 0 & 2\end{matrix}\right]\end{aligned}</script><p>其中$P$由$A$的特征向量和广义特征向量组成。<br>方法二：<br>行列式因子 $D_k(\lambda)$：所有子式的最大公约数（3阶矩阵有4+4+1个2阶子式）。<br>不变因子 $d_k(\lambda)$：n阶与n-1阶行列式因子的商。<br>初等因子：所有 $(\lambda-a)^b$ 形式的项。<br>几个例子<br>行列式 $D_1=1,D_2=\lambda-1,D_3=(\lambda-1)^3$<br>不变 $d_1=1,d_2=\lambda-1,d_3=(\lambda-1)^2$<br>初等 $\lambda-1,(\lambda-1)^2$<br>行列式 $D_1=1,D_2=1,D_3=(\lambda-1)(\lambda-2)^2$<br>不变 $d_1=1,d_2=1,d_3=(\lambda-1)(\lambda-2)^2$<br>初等 $\lambda-1,(\lambda-2)^2$<br>$\lambda$ 矩阵的初等变换之间等价，Smith标准型中的各个非零元素为不变因子。</p><h1 id="矩阵分解"><a href="#矩阵分解" class="headerlink" title="矩阵分解"></a>矩阵分解</h1><h2 id="LU分解"><a href="#LU分解" class="headerlink" title="LU分解"></a>LU分解</h2><script type="math/tex; mode=display">\begin{aligned}&\left[\begin{matrix}    1 & 0 & 0 \\    0 & 1 & 0 \\    0 & c & 1 \\\end{matrix}\right]\left[\begin{matrix}    1 & 0 & 0 \\    a & 1 & 0 \\    b & 0 & 1 \\\end{matrix}\right]A=U \\A=&\left[\begin{matrix}    1 & 0 & 0 \\    a & 1 & 0 \\    b & 0 & 1 \\\end{matrix}\right]^{-1}\left[\begin{matrix}    1 & 0 & 0 \\    0 & 1 & 0 \\    0 & c & 1 \\\end{matrix}\right]^{-1}U \\=&\left[\begin{matrix}    1 & 0 & 0 \\    -a & 1 & 0 \\    -b & 0 & 1 \\\end{matrix}\right]\left[\begin{matrix}    1 & 0 & 0 \\    0 & 1 & 0 \\    0 & -c & 1 \\\end{matrix}\right]U=\left[\begin{matrix}    1 & 0 & 0 \\    -a & 1 & 0 \\    -b & -c & 1 \\\end{matrix}\right]U\end{aligned}</script><h2 id="QR分解"><a href="#QR分解" class="headerlink" title="QR分解"></a>QR分解</h2><script type="math/tex; mode=display">\begin{aligned}A=&\left[\begin{matrix}    2 & -3 & 1 \\    1 & 1 & -6 \\    2 & 4 & 2 \\\end{matrix}\right] \\H=&I-2\omega\omega^\text{T}\end{aligned}</script><p>将第一列向量$[2,1,2]^\text{T}$变换到x轴上并保持长度不变，即$[3,0,0]^\text{T}$，$\omega^\text{T}=[2,1,2]-[3,0,0]=[-1,1,2]$后再取单位向量，代入$H$，则。</p><script type="math/tex; mode=display">H=\left[\begin{matrix}    \displaystyle\frac{2}{3} &  \displaystyle\frac{1}{3} &  \displaystyle\frac{2}{3} \\    \displaystyle\frac{1}{3} &  \displaystyle\frac{2}{3} & -\displaystyle\frac{2}{3} \\    \displaystyle\frac{2}{3} & -\displaystyle\frac{2}{3} & -\displaystyle\frac{1}{3} \\\end{matrix}\right]\left[\begin{matrix}    2 \\ 1 \\ 2 \\\end{matrix}\right]=\left[\begin{matrix}    3 \\ 0 \\ 0 \\\end{matrix}\right]</script><h2 id="满秩分解"><a href="#满秩分解" class="headerlink" title="满秩分解"></a>满秩分解</h2><script type="math/tex; mode=display">A=[F\vdots G], LF=I \\LA=C=[I\vdots LG], B=F \\BC=F[I\vdots LG]=[F\vdots FLG]=[F\vdots LFG]=A</script><h2 id="奇异值分解"><a href="#奇异值分解" class="headerlink" title="奇异值分解"></a>奇异值分解</h2><script type="math/tex; mode=display">A=UDV^\text{T} \\V_1=A^\text{T}U_1D^{-1} \\U_1=AV_1D^{-1} \\</script><h1 id="广义逆矩阵"><a href="#广义逆矩阵" class="headerlink" title="广义逆矩阵"></a>广义逆矩阵</h1><p>&emsp;&emsp;方程组有解称作相容，否则称为不相容或矛盾方程组。相容方程组的通解为</p><script type="math/tex; mode=display">x=A^-b+(I-A^-A)z</script><p>其中$z$是与$x$同维的任意向量，$A^-$是$A$的任一减号逆，满足</p><script type="math/tex; mode=display">AA^-A=A</script><p>如果还另外满足$A^-AA^-=A^-$，则称$A^-$是$A$的自反减号逆，记作$A_r^-$。证明：</p><script type="math/tex; mode=display">Ax = AA^-b+A(I-A^-A)z = AA^-b</script><p>矩阵$A$的左逆和右逆分别满足 $ A_L^{-1}A=I$和$AA_R^{-1}=I $，当$A$分别列满秩和行满秩时，分别存在左逆和右逆</p><script type="math/tex; mode=display">A_L^{-1} = (A^{\text{T}}A)^{-1}A^\text{T} \\A_R^{-1} = A^\text{T}(AA^{\text{T}})^{-1}</script><p>且分别是列满秩和行满秩矩阵$A$的自反减号逆$A_r^-$，同时也是最小范数广义逆$A_m^-$、最小二乘广义逆$A_l^-$、加号逆$A^+$。<br>&emsp;&emsp;举例，方程组</p><script type="math/tex; mode=display">\begin{cases}    x_1+2x_2+x_3 &= 1 \\    -x_2+2x_3 &= 2\end{cases},Ax=b</script><p>行满秩，可求其右逆$A_R^{-1}$为减号逆$A^-$，并求出通解。<br>$A$的加号逆为同时满足下面4个式子的矩阵，且唯一。</p><script type="math/tex; mode=display">\begin{aligned}    &AGA=A \\    &GAG=G \\    &(AG)^\text{T}=AG \\    &(GA)^\text{T}=GA \\\end{aligned}</script><p>当</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>列满秩矩阵的列向量线性无关，一般为竖形状。列范数$||A||_1$指对每一列元素(每个列向量)的绝对值求和的最大值。</li><li>$||A||_{m_1}$范数是所有元素绝对值的和；$||A||_{m_2}/||A||_F$范数是所有元素平方和开根号；$||A||_{m_\infty}$范数是所有元素绝对值最大值×阶数。</li></ul><script type="math/tex; mode=display">\begin{aligned}    (A+BCD)^{-1} =& A^{-1}-A^{-1} B    (DA^{-1}B+C^{-1})^{-1}DA^{-1} \\    (A+\vec{u}\vec{u}^\text{T})^{-1} =& A^{-1}    -\frac{A^{-1}\vec{u}\vec{u}^\text{T} A^{-1}}    {1+\vec{u}^\text{T}A^{-1}\vec{u}}\end{aligned}</script><script type="math/tex; mode=display">\vec a\times(\vec b\times\vec c)=(\vec a\cdot\vec c)\vec b -(\vec a\cdot\vec b)\vec c</script><script type="math/tex; mode=display">(\vec a\times\vec b)\times\vec c=(\vec a\cdot\vec c)\vec b -\vec a(\vec b\cdot\vec c)</script><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/marsggbo/p/10152644.html">【Math for ML】矩阵分解(Matrix Decompositions)</a><br><a href="https://ccjou.wordpress.com/2013/06/07/%E5%88%86%E5%A1%8A%E7%9F%A9%E9%99%A3%E7%9A%84%E8%A1%8C%E5%88%97%E5%BC%8F/">分块矩阵的行列式</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的高等数学笔记</title>
      <link href="/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>@[TOC]</p><h1 id="泰勒公式"><a href="#泰勒公式" class="headerlink" title="泰勒公式"></a>泰勒公式</h1><script type="math/tex; mode=display">\begin{aligned}& f(x)=f(x_0)+f'(x_0)(x-x_0)+\frac{f''(x_0)}{2!}(x-x_0)^2+\frac{f^{(3)}(x_0)}{2!}(x-x_0)^3+\cdots \\& f(a)=f(x)+f'(x)(a-x)+\frac{f''(\xi_1)}{2!}(a-x)^2 \\\end{aligned}</script><h2 id="一元函数泰勒展开"><a href="#一元函数泰勒展开" class="headerlink" title="一元函数泰勒展开"></a>一元函数泰勒展开</h2><script type="math/tex; mode=display">\begin{aligned}    \sin x&=x-\frac{x^3}{3!}+\frac{x^5}{5!}-\cdots\\    \cos x&=1-\frac{x^2}{2!}+\frac{x^4}{4!}+\cdots\\    \tan x&=x+\frac{x^3}{3}+\frac{x^5}{5}+\cdots\\    \arctan x&=x-\frac{x^3}{3}+\frac{x^5}{5}-\cdots\\    \ln(1+x)&=x-\frac{x^2}{2}+\frac{x^3}{3}-\cdots\\    \text{e}^x&=1+x+\frac{x^2}{2!}+\frac{x^3}{3!}+\cdots\\    \frac{1}{1-x}&=1+x+x^2+x^3+\cdots\\    (1+x)^n&=1+nx+\frac{n(n-1)}{2}x^2\cdots\\\end{aligned}</script><h2 id="多元函数泰勒展开"><a href="#多元函数泰勒展开" class="headerlink" title="多元函数泰勒展开"></a>多元函数泰勒展开</h2><script type="math/tex; mode=display">f(\boldsymbol{x})=\sum_{k=0}^{\infty}\frac{1}{k!}(h_1\frac{\partial}{\partial x_1}+\cdots+h_n\frac{\partial}{\partial x_n})^kf(\boldsymbol{x}_0)</script><p>其中$\boldsymbol{h}=\boldsymbol{x}-\boldsymbol{x}_0$。二阶泰勒展开矢量形式</p><script type="math/tex; mode=display">f(\boldsymbol{x})=f(\boldsymbol{x}_0)+\nabla f(\boldsymbol{x}_0)^T(\boldsymbol{x}-\boldsymbol{x}_0)+\frac{1}{2}(\boldsymbol{x}-\boldsymbol{x}_0)^T\nabla^2f(\boldsymbol{x}_0)(\boldsymbol{x}-\boldsymbol{x}_0)+o(\Vert\boldsymbol{x}-\boldsymbol{x}_0\Vert^2)</script><p>其中$\nabla f(\boldsymbol{x}_0)=\frac{\partial f(\boldsymbol{x})}{\partial \boldsymbol{x}}\bigg|_{\boldsymbol{x}=\boldsymbol{x}_0}$。<br>三元二阶泰勒展开，令</p><script type="math/tex; mode=display">\boldsymbol{v}=\begin{bmatrix}x\\y\\z\end{bmatrix},f=f(\boldsymbol{v}),\frac{\partial f_0}{\partial x}=\frac{\partial f(\boldsymbol{v})}{\partial x}\bigg|_{\boldsymbol{v}=\boldsymbol{v}_0}</script><p>则</p><script type="math/tex; mode=display">f(\boldsymbol{v})=f(\begin{bmatrix}x_0\\y_0\\z_0\end{bmatrix})+\begin{bmatrix}\frac{\partial f_0}{\partial x} & \frac{\partial f_0}{\partial y} & \frac{\partial f_0}{\partial z}\end{bmatrix}\begin{bmatrix}h_x\\h_y\\h_z\end{bmatrix}+\frac{1}{2}\begin{bmatrix}h_x & h_y & h_z\end{bmatrix}\begin{bmatrix}    \frac{\partial^2f_0}{\partial x^2} & \frac{\partial^2f_0}{\partial x\partial y}& \frac{\partial^2f_0}{\partial x\partial z} \\    \frac{\partial^2f_0}{\partial y\partial x} & \frac{\partial^2f_0}{\partial y^2}& \frac{\partial^2f_0}{\partial y\partial z} \\    \frac{\partial^2f_0}{\partial z\partial x} & \frac{\partial^2f_0}{\partial x\partial y}& \frac{\partial^2f_0}{\partial z^2}\end{bmatrix}\begin{bmatrix} h_x \\ h_y \\ h_z\end{bmatrix}</script><p>求导</p><script type="math/tex; mode=display">\frac{\partial f(\boldsymbol{v})}{\partial \boldsymbol{v}}=\begin{bmatrix}\frac{\partial f_0}{\partial x} \\ \frac{\partial f_0}{\partial y} \\ \frac{\partial f_0}{\partial z}\end{bmatrix}+\begin{bmatrix}    \frac{\partial^2f_0}{\partial x^2} & \frac{\partial^2f_0}{\partial x\partial y}& \frac{\partial^2f_0}{\partial x\partial z} \\    \frac{\partial^2f_0}{\partial y\partial x} & \frac{\partial^2f_0}{\partial y^2}& \frac{\partial^2f_0}{\partial y\partial z} \\    \frac{\partial^2f_0}{\partial z\partial x} & \frac{\partial^2f_0}{\partial x\partial y}& \frac{\partial^2f_0}{\partial z^2}\end{bmatrix}\begin{bmatrix}h_x\\h_y\\h_z\end{bmatrix}</script><script type="math/tex; mode=display">\frac{\partial f(\boldsymbol{v})}{\partial \boldsymbol{v}}=\nabla f(\boldsymbol{x}_0)+\nabla^2f(\boldsymbol{x}_0)(\boldsymbol{v}-\boldsymbol{v}_0)</script><p>$f(\boldsymbol{v})$是一个标量，而$\frac{\partial f(\boldsymbol{v})}{\partial \boldsymbol{v}}$是一个矢量。<br>令$\frac{\partial f(\boldsymbol{v})}{\partial \boldsymbol{v}}=0$可解得</p><script type="math/tex; mode=display">\boldsymbol{v}-\boldsymbol{v}_0=-(\nabla^2f(\boldsymbol{x}_0))^{-1}\nabla f(\boldsymbol{x}_0)</script><p>代入$f(\boldsymbol{x})$得</p><script type="math/tex; mode=display">\begin{aligned}f(\boldsymbol{x})&=f(\boldsymbol{x}_0)+\nabla f(\boldsymbol{x}_0)^T(-(\nabla^2f(\boldsymbol{x}_0))^{-1}\nabla f(\boldsymbol{x}_0))\\&+\frac{1}{2}(\nabla^2f(\boldsymbol{x}_0))^{-1}\nabla f(\boldsymbol{x}_0))^T\nabla^2f(\boldsymbol{x}_0)(\nabla^2f(\boldsymbol{x}_0))^{-1}\nabla f(\boldsymbol{x}_0))\\&=f_0-(f'_0)^T(f''_0)^{-1}f'_0+\frac{1}{2}((f''_0)^{-1}f'_0)^Tf''_0((f''_0)^{-1}f'_0)\\&=f_0-(f'_0)^T(f''_0)^{-1}f'_0+\frac{1}{2}(f'_0)^T(f''_0)^{-1}f'_0\\&=f_0-\frac{1}{2}(f'_0)^T(f''_0)^{-1}f'_0\\&=f(\boldsymbol{x}_0)+\frac{1}{2}\frac{\partial f(\boldsymbol{x}_0)}{\partial \boldsymbol{x}}^T\boldsymbol{h}\end{aligned}</script><h1 id="空间解析几何"><a href="#空间解析几何" class="headerlink" title="空间解析几何"></a>空间解析几何</h1><h2 id="平面"><a href="#平面" class="headerlink" title="平面"></a>平面</h2><script type="math/tex; mode=display">A(x-x_0)+B(y-y_0)+C(z-z_0)=0 \\Ax+By+Cz+D=0 \\\frac{x}{a}+\frac{y}{b}+\frac{z}{c}=1 \\\vec{n}=(A,B,C) \\</script><h2 id="直线"><a href="#直线" class="headerlink" title="直线"></a>直线</h2><script type="math/tex; mode=display">\frac{x-x_0}{m}=\frac{y-y_0}{n}=\frac{z-z_0}{p} \\\vec{s}=(m,n,p)</script><h2 id="质心"><a href="#质心" class="headerlink" title="质心"></a>质心</h2><script type="math/tex; mode=display">\begin{aligned}& \bar{x}=\frac{\iint x\rho(x,y)\text{d}\sigma}{\iint\rho(x,y)\text{d}\sigma} \\& \bar{z}=\frac{\iiint z\rho(x,y,z)\text{d}\sigma}{\iiint\rho(x,y,z)\text{d}\sigma} \\\end{aligned}</script><h1 id="双曲函数"><a href="#双曲函数" class="headerlink" title="双曲函数"></a>双曲函数</h1><script type="math/tex; mode=display">\cosh x=\frac{\text{e}^x+\text{e}^{-x}}{2},\sinh x=\frac{\text{e}^x-\text{e}^{-x}}{2} \\\cosh(-x)=\cosh(x),\sinh(-x)=-\sinh(x) \\\cosh(x+y)=\cosh x\cosh y+\sinh x\sinh y \\\sinh(x+y)=\sinh x\cosh y+\cosh x\sinh y \\\cosh^2x-\sinh^2x=1 \\\cosh 2x=\cosh^2x+\sinh^2x \\\sinh 2x=2\sinh x\cosh x \\\cosh'x=\sinh x,\quad\sinh'x=\cosh x</script><h1 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h1><script type="math/tex; mode=display">(\cot x)'=-\frac{1}{\sin^2x}</script><h2 id="隐函数求导"><a href="#隐函数求导" class="headerlink" title="隐函数求导"></a>隐函数求导</h2><script type="math/tex; mode=display">F(x,y)=0,\frac{\text{d}y}{\text{d}x}=-\frac{F_x}{F_y} \\F(x,y,z)=0,\frac{\partial z}{\partial x}=-\frac{F_x}{F_z},\frac{\partial z}{\partial y}=-\frac{F_y}{F_z}</script><h1 id="不定积分"><a href="#不定积分" class="headerlink" title="不定积分"></a>不定积分</h1><script type="math/tex; mode=display">\begin{aligned}& \int\frac{1}{\sqrt{x^2+1}}\text{d}x=\ln|x+\sqrt{x^2+1}|+C \\& \int\text{e}^{ax}\cos bx\text{d}x=\frac{\text{e}^{ax}}{a^2+b^2}(a\cos bx+b\sin bx)+C \\& \int\text{e}^{ax}\sin bx\text{d}x=\frac{\text{e}^{ax}}{a^2+b^2}(a\sin bx-b\cos bx)+C \\& \int\text{e}^{ax}\cos bx+\text{j}\text{e}^{ax}\sin bx\text{d}x=\int \text{e}^{(a+\text{j}b)x}\text{d}x=\frac{\text{e}^{(a+\text{j}b)x}}{a+\text{j}b}+C \\& \int \sec x \mathrm{~d} x=\ln |\sec x+\tan x|+C \\& \int \csc x \mathrm{~d} x=\ln |\csc x-\cot x|+C \\\end{aligned}</script><h2 id="不定积分列表法"><a href="#不定积分列表法" class="headerlink" title="不定积分列表法"></a>不定积分列表法</h2><script type="math/tex; mode=display">\int x^3\text{e}^{2x}\text{d}x=x^3\frac{1}{2}\text{e}^{2x}-3x^2\frac{1}{4}\text{e}^{2x}+6x\frac{1}{8}\text{e}^{2x}-6\frac{1}{16}\text{e}^{2x} \\</script><div class="table-container"><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>$\frac{1}{2}\text{e}^{2x}$</td><td>$\frac{1}{4}\text{e}^{2x}$</td><td>$\frac{1}{8}\text{e}^{2x}$</td><td>$\frac{1}{16}\text{e}^{2x}$</td></tr><tr><td>+</td><td>-</td><td>+</td><td>- </td></tr><tr><td>$x^3$</td><td>$3x^2$</td><td>$6x$</td><td>$6$ \\</td></tr></tbody></table></div><h2 id="没有初等函数的原函数"><a href="#没有初等函数的原函数" class="headerlink" title="没有初等函数的原函数"></a>没有初等函数的原函数</h2><script type="math/tex; mode=display">\int\text{e}^{x^2}\text{d}x\quad\int\frac{\sin x}{x}\text{d}x\quad\int\frac{1}{\ln x}\text{d}x\quad\int\frac{1}{\sqrt{1+x^4}}\text{d}x\quad\int\sqrt{1-k^2\sin^2x}\text{d}x \\\int\text{e}^{\frac{1}{x}}\text{d}x\quad</script><h1 id="定积分"><a href="#定积分" class="headerlink" title="定积分"></a>定积分</h1><script type="math/tex; mode=display">\begin{aligned}\int_0^{+\infty}\text{e}^{-x^2}\text{d}x&\xlongequal[t=\sqrt{x}]{x=t^2}\frac{1}{2}\int_0^{+\infty}\frac{\text{e}^{-t}}{\sqrt{t}}\text{d}t=\frac{1}{2}\Gamma(\frac{1}{2})=\frac{\sqrt{\pi}}{2} \\\int_0^{+\infty}\text{e}^{-x^2}\text{d}x&= \sqrt{\int_0^{+\infty}\int_0^{+\infty}\text{e}^{-x^2-y^2}\text{d}x\text{d}y} \\&= \sqrt{\int_0^{\frac{\pi}{2}}\int_0^{+\infty}\text{e}^{-r^2}r\text{d}r\text{d}\theta} \\&= \sqrt{\int_0^{\frac{\pi}{2}}\frac{1}{2}\text{d}\theta}=\frac{\sqrt{\pi}}{2} \\\int_0^{\frac{\pi}{2}}\sin x\text{d}x &= \int_0^{\frac{\pi}{2}}\sin 2x\text{d}x \\\int_a^bf(x)\text{d}x &= \int_a^bf(a+b-x)\text{d}x \\\end{aligned}</script><h2 id="Gamma-函数"><a href="#Gamma-函数" class="headerlink" title="$\Gamma$函数"></a>$\Gamma$函数</h2><script type="math/tex; mode=display">\begin{aligned}& \Gamma(s)=\int_0^{+\infty}\text{e}^{-x}x^{s-1}\text{d}x \\& \Gamma(s+1)=s\Gamma(s)=s! \\\end{aligned}</script><p>余元公式</p><script type="math/tex; mode=display">\Gamma(s)\Gamma(1-s)=\frac{\pi}{\sin\pi s}</script><h2 id="罗巴切夫斯基-Lobachevsky-积分"><a href="#罗巴切夫斯基-Lobachevsky-积分" class="headerlink" title="罗巴切夫斯基(Lobachevsky)积分"></a>罗巴切夫斯基(Lobachevsky)积分</h2><p>若$f(x)$在$[0,+\infty)$有$f(\pi-x)=f(x)$以及$f(x+\pi)=f(x)$，则有</p><script type="math/tex; mode=display">\int_0^{+\infty} f(x)\frac{\sin x}{x}=\int_0^{\frac{\pi}{2}}f(x)\text{d}x</script><h1 id="微分方程"><a href="#微分方程" class="headerlink" title="微分方程"></a>微分方程</h1><h2 id="常用变量代换"><a href="#常用变量代换" class="headerlink" title="常用变量代换"></a>常用变量代换</h2><script type="math/tex; mode=display">\begin{aligned}& z=\frac{y}{x},z=\frac{1}{y},z=y' \\\end{aligned}</script><h2 id="二阶线性微分方程解的结构"><a href="#二阶线性微分方程解的结构" class="headerlink" title="二阶线性微分方程解的结构"></a>二阶线性微分方程解的结构</h2><script type="math/tex; mode=display">\begin{aligned}& y''+P(x)y'+Q(x)y=0 \\& y=C_1y_1(x)+C_2y_2(x) \\& y''+P(x)y'+Q(x)y=f(x) \\& y=C_1y_1(x)+C_2y_2(x)+f^*(x) \\\end{aligned}</script><h2 id="二阶常系数齐次线性微分方程"><a href="#二阶常系数齐次线性微分方程" class="headerlink" title="二阶常系数齐次线性微分方程"></a>二阶常系数齐次线性微分方程</h2><p>特征方程$x^2+px+q=0$，单根$r_1,r_2$，复根$r$，共轭复根$\alpha\pm \text{j}\beta$。</p><script type="math/tex; mode=display">\begin{aligned}& y''+py'+qy=0 \\& y=C_1\text{e}^{r_1x}+C_2\text{e}^{r_2x} \\& y=(C_1+C_2x)\text{e}^{rx} \\&y=\text{e}^{\alpha x}(C_1\cos\beta x+C_2\sin\beta x) \\\end{aligned}</script><h2 id="二阶常系数非齐次线性微分方程"><a href="#二阶常系数非齐次线性微分方程" class="headerlink" title="二阶常系数非齐次线性微分方程"></a>二阶常系数非齐次线性微分方程</h2><script type="math/tex; mode=display">y''+py'+qy=f(x)</script><p>对于微分方程</p><script type="math/tex; mode=display">f(x)=\text{e}^{\lambda x}P_m(x)</script><p>特解满足形式</p><script type="math/tex; mode=display">y^*=x^kR_m(x)\text{e}^{\lambda x}</script><p>其中$R_m(x)$是与$P_m(x)$同次的多项式，而$k$按$\lambda$不是特征方程的根、是特征方程的单根、复根，依次取0、1、2。n阶常系数非齐次线性微分方程中，$k$是$\lambda$的重复次数。<br>对于微分方程</p><script type="math/tex; mode=display">f(x)=\text{e}^{\lambda x}[P_l(x)\cos\omega x+Q_n(x)\sin\omega x]</script><p>特解满足形式</p><script type="math/tex; mode=display">y^*=x^k\text{e}^{\lambda x}[R_m^{(1)}(x)\cos\omega x+R_m^{(2)}(x)\sin\omega x]</script><p>其中$R_m^{(1)}(x)$，$R_m^{(2)}(x)$是m次多项式，$m=\max\{l,n\}$，$k$按$\lambda+\omega i$(或$\lambda-\omega i$)不是特征方程的根是特征方程的单根分别取0或1。</p><h2 id="欧拉方程"><a href="#欧拉方程" class="headerlink" title="欧拉方程"></a>欧拉方程</h2><p>令$x=\text{e}^t$，$t=\ln x$</p><script type="math/tex; mode=display">\sum_{i=1}^nx^iy^{(i)}=f(x) \\\frac{\text{d}y}{\text{d}x}=\frac{1}{x}\frac{\text{d}y}{\text{d}t} \\\frac{\text{d}^2y}{\text{d}x^2}=\frac{1}{x^2}(\frac{\text{d}^2y}{\text{d}t^2}-\frac{\text{d}y}{\text{d}t}) \\\frac{\text{d}^3y}{\text{d}x^3}=\frac{1}{x^3}(\frac{\text{d}^3y}{\text{d}t^3}-3\frac{\text{d}^2y}{\text{d}t^2}+2\frac{\text{d}y}{\text{d}t}) \\xy'=\text{D}y \\x^2y''=\text{D}(\text{D}-1)y \\x^3y'''=\text{D}(\text{D}-1)(\text{D}-2)y</script><h1 id="级数"><a href="#级数" class="headerlink" title="级数"></a>级数</h1><h2 id="正项级数"><a href="#正项级数" class="headerlink" title="正项级数"></a>正项级数</h2><p>若$a_n\le b_n$且$b_n$收敛，则$a_n$收敛。<br>若$a_n\ge b_n$且$b_n$发散，则$a_n$发散。<br>令$l=\displaystyle\lim_{n\to\infty}\frac{a_n}{b_n}$，<br>若$0<l<+\infty$，则$a_n$与$b_n$敛散性相同。 若$l="0$且$b_n$收敛，则$a_n$收敛。" 令$\rho="\displaystyle\lim_{n\to\infty}\frac{a_{n+1}}{a_n}$，$\rho<1$时收敛，$\rho">1$时发散。<br>令$\rho=\sqrt[n]{a_n}$，$\rho<1$时收敛，$\rho>1$时发散。</1$时收敛，$\rho></l<+\infty$，则$a_n$与$b_n$敛散性相同。></p><h2 id="p级数"><a href="#p级数" class="headerlink" title="p级数"></a>p级数</h2><script type="math/tex; mode=display">1+\frac{1}{2^p}+\frac{1}{3^p}+\frac{1}{4^p}+\cdots+\frac{1}{n^p}</script><p>其中$p&gt;0$，$p\le1$时发散。</p><h2 id="交错级数"><a href="#交错级数" class="headerlink" title="交错级数"></a>交错级数</h2><script type="math/tex; mode=display">\sum_{n=0}^{\infty}(-1)^{n} u_{n}</script><p>若$u_n\ge u_{n+1}$且$\displaystyle\lim_{n\to\infty}u_n=0$则交错级数收敛。<br>对于一般的级数</p><script type="math/tex; mode=display">u_1+u_2+\cdots+u_n</script><p>如果级数$|u_n|$收敛则称$u_n$绝对收敛，如果级数$|u_n|$发散但$u_n$收敛则称$u_n$条件收敛。$u_n$绝对收敛是$u_n$收敛的充分不必要条件。</p><h2 id="幂级数"><a href="#幂级数" class="headerlink" title="幂级数"></a>幂级数</h2><script type="math/tex; mode=display">\sum_{n=0}^{\infty} a_{n} x^{n}=a_{0}+a_{1} x+a_{2} x^{2}+\cdots+a_{n} x^{n}</script><h1 id="信号与系统"><a href="#信号与系统" class="headerlink" title="信号与系统"></a>信号与系统</h1><h2 id="傅里叶级数"><a href="#傅里叶级数" class="headerlink" title="傅里叶级数"></a>傅里叶级数</h2><p>傅里叶级数(FS)将连续周期信号分解为非周期离散频谱。</p><script type="math/tex; mode=display">f(t)=\frac{a_0}{2}+\sum_{n=1}^{\infty}a_n\cos n\Omega t+\sum_{n=1}^{\infty}b_n\sin n\Omega t</script><script type="math/tex; mode=display">a_n=\frac{2}{T}\int_{-\frac{T}{2}}^{\frac{T}{2}}f(t)\cos n\Omega t\text{d}t</script><script type="math/tex; mode=display">b_n=\frac{2}{T}\int_{-\frac{T}{2}}^{\frac{T}{2}}f(t)\sin n\Omega t\text{d}t</script><p>其中$T$为周期，$\Omega=\frac{2\pi}{T}$。复数形式</p><script type="math/tex; mode=display">f(t)=\sum_{n=-\infty}^{\infty}F_n\text{e}^{jn\Omega t}</script><script type="math/tex; mode=display">F_n=\frac{1}{T}\int_{-\frac{T}{2}}^{\frac{T}{2}}f(t)\text{e}^{-jn\Omega t}\text{d}t</script><h2 id="傅里叶变换"><a href="#傅里叶变换" class="headerlink" title="傅里叶变换"></a>傅里叶变换</h2><p>连续傅里叶变换(FT)将连续非周期信号分解为非周期连续频谱。</p><h2 id="拉普拉斯变换"><a href="#拉普拉斯变换" class="headerlink" title="拉普拉斯变换"></a>拉普拉斯变换</h2><script type="math/tex; mode=display">\frac{\text{d}y}{\text{d}t}f(t)\longrightarrow sF(s)-f(0)</script><script type="math/tex; mode=display">\frac{\text{d}^2}{\text{d}t^2}f(t)\longrightarrow s^2F(s)-sf(0)-f'(0)</script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的概率论笔记</title>
      <link href="/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E6%A6%82%E7%8E%87%E8%AE%BA%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84%E6%A6%82%E7%8E%87%E8%AE%BA%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>@[TOC]</p><h1 id="随机事件"><a href="#随机事件" class="headerlink" title="随机事件"></a>随机事件</h1><script type="math/tex; mode=display">\begin{aligned}& A\cap B=AB,A\cup B=A+B \\& P(A+B)=P(A)+P(B)-P(AB) \\& P(A-B)=P(A\overline{B}) \\& P(A+B-C)\neq P(A-C+B),P(A+B-C)\neq P(A+(B-C)) \\& P(A(B-C))\neq P(AB-AC) \\\end{aligned}</script><p>事件运算法则</p><script type="math/tex; mode=display">\begin{aligned}& A+AB=A,A-B=A\overline{B} \\& A(B+C)=AB+AC,A+BC=(A+B)(A+C) \\& A+B+C=A+(B+C) \\& \overline{A+B}=\overline{A}\overline{B},\overline{AB}=\overline{A}+\overline{B} \\\end{aligned}</script><p>独立$P(AB)=P(A)P(B)$，不相容$P(A+B)=P(A)+P(B)$，$AB=\emptyset$</p><h1 id="一元线性回归"><a href="#一元线性回归" class="headerlink" title="一元线性回归"></a>一元线性回归</h1><script type="math/tex; mode=display">\begin{aligned}& y(n)=a^*x(n)+b^* \\& J(a,b)=\sum_{n=1}^N(y(n)-ax(n)-b)^2 \\\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}& \frac{\partial J}{\partial b} = -2\sum_{n=1}^N[y(n)-ax(n)-b]=0 \\& \sum_{n=1}^Ny(n)-a\sum_{n=1}^Nx(n)-bn=0 \\& b=\frac{1}{N}\left(\sum_{n=1}^Ny(n)-a\sum_{n=1}^Nx(n)\right)=\bar{y}-a\bar{x} \\& \frac{\partial J}{\partial a} = -2\sum_{n=1}^Nx(n)[y(n)-ax(n)-b]=0 \\& \sum_{n=1}^Nx(n)y(n)-a\sum_{n=1}^Nx^2(n)-b\sum_{n=1}^Nx(n)=0 \\& \sum_{n=1}^Nxy-a\sum x^2-\sum x\left(\sum y-a\sum x\right)=0 \\& \sum xy-\sum x\sum y=a\sum x^2-a\sum x\sum x \\&\begin{cases}a=\frac{\displaystyle\sum_{n=1}^Nx(n)y(n)-\sum_{n=1}^Nx(n)\sum_{n=1}^Ny(n)}{\displaystyle\sum_{n=1}^Nx^2(n)-\left(\sum_{n=1}^Nx(n)\right)^2} \\b=\bar{y}-a\bar{x}\end{cases}\end{aligned}</script><h1 id="分布律"><a href="#分布律" class="headerlink" title="分布律"></a>分布律</h1><h2 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h2><p>$X\sim B(n,p)$<br>设事件X发生的概率为p，进行n次实验，事件X发生k次的概率为$P(X=k)=C_n^kp^k(1-p)^{n-k}$<br>$E(X)=np,DX=np(1-p)$</p><h2 id="几何分布"><a href="#几何分布" class="headerlink" title="几何分布"></a>几何分布</h2><script type="math/tex; mode=display">X\sim G(p)</script><p>设事件X发生的概率为p，事件X首次发生时的实验次数k满足$P(X=k)=p(1-p)^{k-1}$</p><h2 id="超几何分布"><a href="#超几何分布" class="headerlink" title="超几何分布"></a>超几何分布</h2><script type="math/tex; mode=display">X\sim H(n,M,N)</script><p>N件产品中有m件次品，从中任取n件产品不放回，有X件次品的概率为</p><script type="math/tex; mode=display">P(X=k)=\frac{C_M^k\cdot C_{N-M}^{n-k}}{C_N^n}</script><h2 id="泊松分布"><a href="#泊松分布" class="headerlink" title="泊松分布"></a>泊松分布</h2><script type="math/tex; mode=display">X\sim P(\lambda)</script><script type="math/tex; mode=display">\begin{aligned}& P(X=k)=\frac{\lambda^k\text{e}^{-\lambda}}{k!} \\& \lim_{N\to+\infty}\frac{C_M^k\cdot C_{N-M}^{n-k}}{C_N^n}=C_n^kp^k(1-p)^{n-k} \\& \lim_{n\to+\infty}C_n^kp^k(1-p)^{n-k}=\frac{\lambda^k\text{e}^{-\lambda}}{k!} \\\end{aligned}</script><p>证明如下</p><script type="math/tex; mode=display">\begin{aligned}& P(X=k)=\text{C}_n^kp^k(1-p)^{n-k} \\& \text{E}(x)=np=\lambda \\&\lim_{n\rightarrow+\infty}\text{C}_n^kp^k(1-p)^{n-k} \\=&\lim_{n\rightarrow+\infty}\frac{n(n-1)(n-2)\cdots(n-k+1)}{k!}\left(\frac{\lambda}{n}\right)^k\left(1-\frac{\lambda}{n}\right)^{n-k} \\=&\frac{\lambda^k}{k!}\lim_{n\rightarrow+\infty}1(1-\frac{1}{n})(1-\frac{2}{n})\cdots(1-\frac{k}{n})\left(1-\frac{\lambda}{n}\right)^n\left(1-\frac{\lambda}{n}\right)^{-k} \\=&\frac{\lambda^k}{k!}\lim_{n\rightarrow+\infty}\left(1-\frac{\lambda}{n}\right)^n \\=&\frac{\lambda^k\text{e}^{-\lambda}}{k!}\end{aligned}</script><h2 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h2><script type="math/tex; mode=display">X\sim U[a,b]</script><h2 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h2><script type="math/tex; mode=display">X\sim e(\lambda)</script><script type="math/tex; mode=display">f(x)=\begin{cases}    \lambda\text{e}^{-\lambda x} &, x\ge 0 \\    0 &, x<0\end{cases}</script><p>指数分布与泊松分布的关系</p><script type="math/tex; mode=display">\begin{aligned}& P(Y>t)=P(X=0,t)=\frac{\left(\lambda t\right)^0}{0!}e^{-\lambda t}=e^{-\lambda t},\quad t\ge 0 \\& F(x)=1-\text{e}^{-\lambda x},x\ge 0  \\\end{aligned}</script><h2 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h2><script type="math/tex; mode=display">X\sim N(\mu,\sigma) \\f(x)=\frac{1}{\sqrt{2\pi}\sigma}\text{exp}\left\{-\frac{(x-\mu)^2}{2\sigma^2}\right\} \\\Phi(x)=\int_{-\infty}^x\frac{1}{\sqrt{2\pi}}\text{e}^{-\frac{t^2}{2}}\text{d}t</script><h1 id="数学期望和方差"><a href="#数学期望和方差" class="headerlink" title="数学期望和方差"></a>数学期望和方差</h1><script type="math/tex; mode=display">\begin{aligned}\text{Cov}(X,X) &= \text{D}X \\\text{Cov}(X,Y) &= \text{E}[(X-\text{E}X)(Y-\text{E}Y)]=\text{E}(XY)-\text{E}X\cdot\text{E}Y \\\rho_{xy} &= \frac{\operatorname{Cov}(X, Y)}{\sqrt{\text{D} X} \sqrt{\text{D} Y}} \\\text{E}(X\pm Y) &= \text{E}X\pm \text{E}Y \\\text{D}(X\pm Y) &= \text{D}X+\text{D}Y\pm 2\text{Cov}(X,Y) \\\text{Cov}(X,Y_1\pm Y_2) &= \text{Cov}(X,Y_1)\pm\text{Cov}(X,Y_2) \\\text{Cov}(X,kY) &= k\text{Cov}(X,Y) \\\end{aligned}</script><h1 id="切比雪夫不等式"><a href="#切比雪夫不等式" class="headerlink" title="切比雪夫不等式"></a>切比雪夫不等式</h1><p>马尔可夫不等式</p><script type="math/tex; mode=display">\text P\{X>\varepsilon\}\le\frac{\text EX}{\varepsilon}</script><p>其中$X\ge0$</p><script type="math/tex; mode=display">\begin{aligned}\text Ex &=\int_{0}^{\infty} x f(x) d x \\& \geq \int_{\varepsilon}^{\infty} x f(x) d x \\&\ge\varepsilon\int_{\varepsilon}^{\infty} f(x) d x \\&=P\{x \geq \varepsilon\}\end{aligned}</script><p>切比雪夫不等式</p><script type="math/tex; mode=display">\text P\{|X-\text EX|\geq\varepsilon\}\leq\frac{\text DX}{\varepsilon^2}</script><h1 id="样本方差的无偏估计"><a href="#样本方差的无偏估计" class="headerlink" title="样本方差的无偏估计"></a>样本方差的无偏估计</h1><script type="math/tex; mode=display">\begin{aligned}\frac{1}{n-1}\sum_{i=1}^{n}(x_{i}-\bar{x})^{2} &= \frac{1}{n-1}\sum_{i=1}^{n}[(x_{i}-\mu)-(\bar{x}-\mu)]^{2} \\&=\frac{1}{n-1} \sum_{i=1}^{n}(x_{i}-\mu)^{2}-\frac{2}{n-1}\sum_{i=1}^{n}(x_{i}-\mu)(\bar{x}-\mu)+\frac{1}{n-1}\sum_{i=1}^{n}(\bar{x}-\mu)^{2} \\&= \frac{1}{n-1} \sum_{i=1}^{n}(x_{i}-\mu)^{2}-\frac{2(\bar{x}-\mu)}{n-1}(n \bar{x}-n \mu)+\frac{n}{n-1}(\bar{x}-\mu)^{2} \\&= \frac{1}{n-1} \sum_{i=1}^{n}(x_{i}-\mu)^{2}-\frac{n}{n-1}(\bar{x}-\mu)^{2} \\\text{E}\left[\frac{1}{n-1}\sum_{i=1}^{n}(x_{i}-\bar{x})^{2}\right]&= \text{E}\left[\frac{1}{n-1} \sum_{i=1}^{n}(x_{i}-\mu)^{2}-\frac{n}{n-1}(\bar{x}-\mu)^{2}\right] \\&=\frac{n}{n-1}\text{D}x-\frac{n}{n-1}\cdot\frac{\text{D}x}{n}=\text{D}x\end{aligned}</script><h1 id="高维正态随机变量"><a href="#高维正态随机变量" class="headerlink" title="高维正态随机变量"></a>高维正态随机变量</h1><p>二维正态随机变量$(X_1,X_2)$的概率密度为</p><script type="math/tex; mode=display">\begin{aligned}f(x_1,x_2)=& \frac{1}{2\pi\sigma_1\sigma_2\sqrt{1-\rho^2}}\exp\left\{\frac{-1}{2(1-\rho^{2})}\left[\frac{(x_1-\mu_1)^2}{\sigma_1^2}-2 \rho \frac{\left(x_{1}-\mu_{1}\right)\left(x_{2}-\mu_{2}\right)}{\sigma_{1} \sigma_{2}}+\frac{\left(x_{2}-\mu_{2}\right)^{2}}{\sigma_{2}^{2}}\right]\right\} \\=& \frac{1}{2\pi\text{det}^{1/2}\mathbf{C}}\exp\left\{-\frac{1}{2}\left[\begin{matrix}x_1-\mu_1 \\ x_2-\mu_2\end{matrix}\right]^\top\mathbf{C}^{-1}\left[\begin{matrix}x_1-\mu_1 \\ x_2-\mu_2\end{matrix}\right]\right\}\end{aligned}</script><p>其中的协方差矩阵$\mathbf{C}$为</p><script type="math/tex; mode=display">\mathbf{C}=\left[\begin{matrix}\sigma_1^2 & \rho\sigma_1\sigma_2 \\\rho\sigma_1\sigma_2 & \sigma_2^2 \\\end{matrix}\right]=\left[\begin{matrix}\text{D}X_1 & \text{Cov}(X_1,X_2) \\\text{Cov}(X_1,X_2) & \text{D}X_2 \\\end{matrix}\right]</script><p>n维正态随机变量的概率密度为</p><script type="math/tex; mode=display">f(\boldsymbol{x})=\frac{1}{(2 \pi)^{n/2}\text{det}^{1/2}\mathbf{C}}\exp \left\{-\frac{1}{2}(\boldsymbol{x}-\boldsymbol{\mu})^{\top}\mathbf{C}^{-1}(\boldsymbol{x}-\boldsymbol{\mu})\right\}</script><h1 id="条件数学期望"><a href="#条件数学期望" class="headerlink" title="条件数学期望"></a>条件数学期望</h1><p>边缘分布</p><script type="math/tex; mode=display">\begin{aligned}& f(x)=\int_{a(x)}^{b(x)} f(x,y)\text{d}y \\& f(y)=\int_{a(y)}^{b(y)} f(x,y)\text{d}x \\\end{aligned}</script><p>其中 $a(x),b(x)$ 或 $a(y),b(y)$ 是与 $x$ 或 $y$ 有关的上下界，概率论教材中用的是 $\infty$。<br>条件分布</p><script type="math/tex; mode=display">f(y|x)=\frac{f(x,y)}{f(x)}</script><p>条件期望</p><script type="math/tex; mode=display">\text{E}(x|y)=\int_{a(y)}^{b(y)} yf(x|y)\text{d}x</script><p><strong>性质1：</strong> $\text{E}(\text{E}(X|Y))=\text{E}X$<br><strong>证明：</strong></p><script type="math/tex; mode=display">\begin{aligned}\text Ex =& \int_{a_x}^{b_x}xf(x)\text dx \\=& \int_{a_x}^{b_x}x\left[\int_{a_y(x)}^{b_y(x)}f(x,y)\text dy\right]\text dx \\=& \int_{a_x}^{b_x}\int_{a_y(x)}^{b_y(x)}xf(x,y)\text dy\text dx \\=& \int_{a_x}^{b_x}\int_{a_y(x)}^{b_y(x)}xf(y)\frac{f(x,y)}{f(y)}\text dy\text dx \\=& \int_{a_y}^{b_y}\int_{a_x(y)}^{b_x(y)}xf(y)\frac{f(x,y)}{f(y)}\text dx\text dy \\=& \int_{a_y}^{b_y}f(y)\left[\int_{a_x(y)}^{b_x(y)}x\frac{f(x,y)}{f(y)}\text dx\right]\text dy \\=& \int_{a_y}^{b_y}f(y)\left[\int_{a_x(y)}^{b_x(y)}xf(x|y)\text dx\right]\text dy \\=& \int_{a_y}^{b_y}\text E(x|y)f(y)\text dy \\=& \text E[\text E(x|y)] \\\end{aligned}</script><p><strong>性质2：</strong> $\text{E}[g(X)h(Y)|Y]=h(Y)\text{E}[g(X)|Y]$<br><strong>证明：</strong></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自用的markdown与latex特殊符号</title>
      <link href="/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84markdown%E4%B8%8Elatex%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/"/>
      <url>/2024/08/03/%E8%87%AA%E7%94%A8%E7%9A%84markdown%E4%B8%8Elatex%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>有些特殊符号不经常用老是忘，偶尔用的时候还得查，总结一下备用。<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\triangleq</span></span><br><span class="line"><span class="keyword">\approx</span></span><br><span class="line"><span class="keyword">\xlongequal</span>[y=<span class="keyword">\arctan</span> x]&#123;x=<span class="keyword">\tan</span> y&#125;</span><br><span class="line"><span class="keyword">\sum</span><span class="built_in">_</span>&#123;<span class="keyword">\substack</span>&#123;j=1 <span class="keyword">\\</span> j<span class="keyword">\neq</span> i&#125;&#125;</span><br><span class="line"><span class="keyword">\iiint</span><span class="keyword">\limits</span><span class="built_in">_</span><span class="keyword">\Omega</span></span><br><span class="line"><span class="keyword">\overset</span>&#123;<span class="keyword">\circ</span>&#125;&#123;<span class="keyword">\vec</span>&#123;r&#125;&#125;</span><br><span class="line"><span class="keyword">\varphi</span></span><br><span class="line"><span class="keyword">\checkmark</span></span><br><span class="line"><span class="keyword">\stackrel</span>&#123;<span class="keyword">\cdot</span><span class="keyword">\cdot</span><span class="keyword">\cdot</span>&#125;&#123;x&#125;</span><br><span class="line"><span class="keyword">\equiv</span></span><br></pre></td></tr></table></figure></p><script type="math/tex; mode=display">\triangleq\approx\xlongequal[y=\arctan x]{x=\tan y}\sum_{\substack{j=1 \\ j\neq i}}\iiint\limits_\Omega\overset{\circ}{\vec{r}}\varphi\checkmark\stackrel{\cdot\cdot\cdot}{x}\geqslant\equiv</script><p><a href="https://www.cmor-faculty.rice.edu/~heinken/latex/symbols.pdf">$\LaTeX$ Mathematical Symbols</a><br><a href="https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols">List of LaTeX mathematical symbols -oeis</a><br><a href="https://www.overleaf.com/learn/latex/List_of_Greek_letters_and_math_symbols">List of Greek letters and math symbols -overleaf</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>姿态与轨道动力学笔记</title>
      <link href="/2024/08/03/%E5%A7%BF%E6%80%81%E4%B8%8E%E8%BD%A8%E9%81%93%E5%8A%A8%E5%8A%9B%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/03/%E5%A7%BF%E6%80%81%E4%B8%8E%E8%BD%A8%E9%81%93%E5%8A%A8%E5%8A%9B%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="圆锥曲线轨道"><a href="#圆锥曲线轨道" class="headerlink" title="圆锥曲线轨道"></a>圆锥曲线轨道</h1><p>轨道六根数指：<br>半长轴(a)、偏心率(e)，轨道倾角(i)，升交点赤经($\Omega$)、近地点幅角($\omega$)、真近点角($\phi$)。<br>其它参数：<br>角动量 $\vec{h}$、半通径 $p$、远拱点 $r_a$、周期 $T$。</p><script type="math/tex; mode=display">\begin{aligned}    \mathcal{E} =& -\frac{\mu}{2a}=\frac{v^2}{2}-\frac{\mu}{r}    = \frac{v_{inf}^2}{2} \\    \vec{h} =& \vec{r}\times\vec{v} \\    |\vec{h}| =& |\vec{r}||\vec{v}|\sin\theta \\    a =& \frac{p}{1-e^2}=-\frac{\mu}{2\mathcal{E}}    = \frac{\mu r}{2\mu-rv^2} \\    p =& \frac{h^2}{\mu} \\    \vec{e} =& \frac{\vec{v}\times\vec{h}}{\mu}     - \frac{\vec{r}}{|\vec{r}|}     = (\frac{v^2}{\mu}-\frac{1}{r})\vec{r}     - \frac{\vec{v}\cdot\vec{r}}{\mu}\vec{v} \\    e =& \sqrt{1-\frac{h^2}{a\mu}} \\    r =& \frac{p}{1+e\cos f} \\    f =& \arccos(\frac{1}{e}(\frac{h^2}{\mu r}-1)) \\    r_a =& a(1+e) \\    T =& 2\pi\sqrt{\frac{a^3}{\mu}}\end{aligned}</script><p>由轨道元素计算位置和速度向量</p><script type="math/tex; mode=display">\begin{aligned}    R =& \begin{bmatrix}        c_\Omega c_\omega-s_\Omega c_i s_\omega &        -c_\Omega s_\omega-s_\Omega c_i c_\omega &        s_\Omega s_i \\        s_\Omega c_\omega+c_\Omega c_i s_\omega &        -s_\Omega s_\omega+c_\Omega c_i c_\omega &        -c_\Omega s_i \\        s_i s_\omega & s_i c_\omega & c_i    \end{bmatrix} \\    \vec{r} =& R\begin{bmatrix}        \displaystyle\frac{a(1-e^2)}{1+e\cos\theta}\cos\theta \\        \displaystyle\frac{a(1-e^2)}{1+e\cos\theta}\sin\theta \\ 0    \end{bmatrix} \\    \vec{v} =& \sqrt{\frac{\mu}{a(1-e^2)}}R\begin{bmatrix}        -\sin\theta \\ e+\cos\theta \\ 0    \end{bmatrix}\end{aligned}</script><p>平近点角(mean anomaly, $M$)<br>真近点角(true anomaly, $\theta$)<br>偏近点角(eccentric anomaly, $E$)</p><script type="math/tex; mode=display">\begin{aligned}    & E-e\sin E=M \\    & \frac{\tan\frac{E}{2}}{\tan\frac{\theta}{2}}     = \sqrt{\frac{1-e}{1+e}}\end{aligned}</script><p>根据平近点角计算真近点角</p><script type="math/tex; mode=display">\begin{aligned}    \theta =& M+\left(2e-{\frac {1}{4}}e^{3}\right)\sin {M}    + {\frac {5}{4}}e^{2}\sin {2M} \\    &+ {\frac {13}{12}}e^{3}\sin {3M}+O(e^{4})\end{aligned}</script><p>已知 $\mu$、初始位置 $\vec{r}$ 和速度 $\vec{v}$ 计算经过指定时间 $T_0$ 后的位置和速度</p><ol><li>根据初始位置速度计算轨道能量 $\mathcal{E}$ 和偏心率 $\vec{e}$</li><li>根据 $\mu$ 和 $\mathcal{E}$ 计算半长轴 $a$ 进而计算轨道周期 $T$</li><li>根据 $T_0$ 和 $T$ 计算平近点角进而计算偏近点角 $E$</li><li>根据 $\vec{e}$ 计算半短轴 $b$ 和焦距 $c$，由椭圆参数方程得到 $\vec{r}$</li><li>由 $\mathcal{E}$ 计算速度大小 $|\vec{v}|$</li><li>由偏心率公式计算速度 $\vec{v}$</li></ol><script type="math/tex; mode=display">\begin{aligned}    &\left[\begin{matrix}        e \\ 0 \\ 0    \end{matrix}\right]    = (\frac{\vec{v}\times\vec{h}}{\mu} - \frac{\vec{r}}{|\vec{r}|})    \left[\begin{matrix}        r_x \\ r_y \\ 0    \end{matrix}\right]    - \frac{v_xr_x+v_yr_y}{\mu} \left[\begin{matrix}        v_x \\ v_y \\ 0    \end{matrix}\right] \\    & k = \frac{\vec{v}\times\vec{h}}{\mu} - \frac{\vec{r}}{|\vec{r}|} \\    & r_xv_x^2+r_yv_xv_y = \mu(kr_x-e) \\    & r_yv_y^2+r_xv_xv_y = \mu kr_y \\    & r_x^2v_x^2+r_xr_yv_xv_y = \mu(kr_x-e)r_x \\    & r_y^2v_y^2+r_xr_yv_xv_y = \mu kr_yr_y \\    & r_x^2v_x^2-r_y^2v_y^2 = \mu(kr_x-e)r_x - \mu kr_yr_y = k_1 \\    & v_x^2+v_y^2 = v^2 \\    & v_x^2 = \frac{r_y^2v^2 + k_1}{r^2} \\    & v_y^2 = \frac{r_x^2v^2 - k_1}{r^2} \\    &k_1 = \mu k(r_x^2-r_y^2) - er_x     = (v^2 - \frac{\mu}{r})(r_x^2-r_y^2) - \mu er_x\end{aligned}</script><h1 id="四元数、欧拉角、旋转矩阵"><a href="#四元数、欧拉角、旋转矩阵" class="headerlink" title="四元数、欧拉角、旋转矩阵"></a>四元数、欧拉角、旋转矩阵</h1><p><a href="https://blog.csdn.net/qq_34288751/article/details/124308210">四元数、欧拉角、旋转矩阵笔记</a>  </p><h1 id="旋转坐标系下的速度和加速度"><a href="#旋转坐标系下的速度和加速度" class="headerlink" title="旋转坐标系下的速度和加速度"></a>旋转坐标系下的速度和加速度</h1><p><a href="https://blog.csdn.net/qq_34288751/article/details/124308210">自用的刚体姿态动力学推导</a>  </p><h1 id="QUEST-算法"><a href="#QUEST-算法" class="headerlink" title="QUEST 算法"></a>QUEST 算法</h1><p>&emsp;&emsp;QUEST（QUaternion ESTimator）已知多个参考向量 $y_k$ 和对应的多个观测向量 $x_k$，求旋转矩阵 $A$ 使得 $y=Rx$ 的误差最小，即最小化指标函数</p><script type="math/tex; mode=display">J_0=\frac{1}{2}\sum_{k=1}^n\alpha_k|y_k-Ax_k|^2</script><p>或者最大化指标函数</p><script type="math/tex; mode=display">J=\sum_{k=1}^n\alpha_ky_k^\text{T}Ax_k</script><p>其中 $y_k$ 和 $x_k$ 均为单位向量，$\alpha_k\ge 0$ 为加权因子，$\sum\alpha_k=1$，并且 $J=1-J_0$。</p><h2 id="一组数据的情况"><a href="#一组数据的情况" class="headerlink" title="一组数据的情况"></a>一组数据的情况</h2><p>&emsp;&emsp;首先研究一个向量 $y=Ax$，设 $B=yx^\text{T}$，利用关于矩阵的迹的两个公式</p><script type="math/tex; mode=display">x^\text{T}y=\text{tr}(yx^\text{T})=\text{tr}(xy^\text{T}) \\\text{tr}(AB)=\text{tr}(BA)</script><p>则</p><script type="math/tex; mode=display">\begin{aligned}J=y^\text{T}Ax=\text{tr}(y(Ax)^\text{T})=\text{tr}(yx^\text{T}A^\text{T})=\text{tr}(BA^\text{T})=\text{tr}(AB^\text{T})\end{aligned}</script><p>将四元数与旋转矩阵的关系 (<a href="https://blog.csdn.net/qq_34288751/article/details/124308210#t4">四元数、欧拉角、旋转矩阵笔记</a>)</p><script type="math/tex; mode=display">R=(w^2-q_v^\text{T}q_v)I+2q_vq_v^\text{T}-2wq_v^{\wedge}</script><p>代入 $J$ 得</p><script type="math/tex; mode=display">\begin{aligned}J =& \text{tr}([(w^2-q_v^\text{T}q_v)I+2q_vq_v^\text{T}-2wq_v^{\wedge}]B^\text{T}) \\=& (w^2-q_v^\text{T}q_v)\text{tr}(B)+2\text{tr}(q_vq_v^\text{T}B^\text{T})-2w\text{tr}(q_v^{\wedge}B^\text{T})\end{aligned}</script><p>记</p><script type="math/tex; mode=display">\begin{aligned}\sigma =& \text{tr}(B) \\S =& B+B^\text{T} = yx^\text{T}+xy^\text{T} \\Z =& y\times x\end{aligned}</script><p>则</p><script type="math/tex; mode=display">\begin{aligned}J=& (w^2-q_v^\text{T}q_v)\sigma+2\text{tr}(q_vq_v^\text{T}xy^\text{T})-2w\text{tr}(q_v^{\wedge}xy^\text{T}) \\=& w^2\sigma-q_v^\text{T}q_v\sigma+\text{tr}(xy^\text{T}q_vq_v^\text{T})+q_v^\text{T}x\text{tr}(q_vy^\text{T})-2w\text{tr}(q_v^{\wedge}xy^\text{T}) \\=& w^2\sigma-q_v^\text{T}q_v\sigma+y^\text{T}q_v\text{tr}(xq_v^\text{T})+q_v^\text{T}x\text{tr}(y^\text{T}q_v)-2wy^\text{T}q_v^{\wedge}x \\=& w^2\sigma-\sigma q_v^\text{T}q_v+q_v^\text{T}yx^\text{T}q_v+q_v^\text{T}xy^\text{T}q_v+2wq_v^\text{T}y^{\wedge}x \\=& w^2\sigma-\sigma q_v^\text{T}q_v+q_v^\text{T}Sq_v+2wq_v^\text{T}(y\times x) \\=& w^2\sigma+q_v^\text{T}Zw+wZ^\text{T}q_v+q_v^\text{T}Sq_v-\sigma q_v^\text{T}q_v \\=& (w\sigma+q_v^\text{T}Z)w+(wZ^\text{T}+q_v^\text{T}(S-\sigma I))q_v \\=& \begin{bmatrix} w & q_v^\text{T} \end{bmatrix}\begin{bmatrix} \sigma & Z^\text{T} \\ Z & S-\sigma I \\ \end{bmatrix}\begin{bmatrix} w \\ q_v \end{bmatrix} \\=& q^\text{T}Kq\end{aligned}</script><p>其中第3行到第4行 $y^\text{T}q_v^{\wedge}x = -q_v^\text{T}y^{\wedge}x$ 实际上等价于 </p><script type="math/tex; mode=display">a\cdot (b\times c) = b\cdot (c\times a) = c\cdot (a\times b)</script><p>&emsp;&emsp;考虑到单位四元数 $q$ 满足 $|q|=1$，使用拉格朗日乘子法，</p><script type="math/tex; mode=display">\begin{aligned}L =& q^\text{T}Kq+\lambda(q^\text{T}q-1) \\\frac{\partial L}{\partial q} =& 2Kq-2\lambda q=0\end{aligned}</script><p>&emsp;&emsp;进一步扩展到多组数据并加入权重，取</p><script type="math/tex; mode=display">\begin{aligned}B =& \sum_{k=1}^n \alpha_k y_k x_k^\text{T} \\\sigma =& \text{tr}(B) \\S =& B+B^\text{T} \\Z =& \sum_{k=1}^n \alpha_k y_k \times x_k\end{aligned}</script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圆锥体转动惯量</title>
      <link href="/2024/08/03/%E5%9C%86%E9%94%A5%E4%BD%93%E8%BD%AC%E5%8A%A8%E6%83%AF%E9%87%8F/"/>
      <url>/2024/08/03/%E5%9C%86%E9%94%A5%E4%BD%93%E8%BD%AC%E5%8A%A8%E6%83%AF%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>设圆锥体的体积为 $V$，质量为 $M$，底面半径为 $R$，高为 $H$。</p><p>体积微元</p><script type="math/tex; mode=display">\text dV=r\text dr\text dh\text d\theta</script><p>体积</p><script type="math/tex; mode=display">\begin{aligned}V =& \int_0^{2\pi}\int_0^H\int_0^{r(h)}r\text dr\text dh\text d\theta \\=& 2\pi\int_0^H\int_0^{\frac RH(H-h)}r\text dr\text dh \\=& 2\pi\int_0^H\frac 12\left(\frac RH(H-h)\right)^2\text dh \\\xlongequal[h=Hx]{x=h/H} & \pi R^2\int_0^1(1-2x+x^2)H\text dx \\=& \pi R^2H\left[x-x^2+\frac{x^3}{3}\right]_0^1 \\=& \frac 13\pi R^2H\end{aligned}</script><p>质心高度</p><script type="math/tex; mode=display">\begin{aligned}z =& \frac{\int_0^{2\pi}\int_0^{H}\int_0^{r(h)}hr\text dr\text dh\text d\theta}{\int_0^{2\pi}\int_0^{H}\int_0^{r(h)}r\text dr\text dh\text d\theta} \\=& \frac 1{\frac 13\pi R^2H}2\pi\int_0^Hh\int_0^{\frac RH(H-h)}r\text dr\text dh \\=& \frac 6{R^2H}\int_0^H\frac h2\left(\frac RH(H-h)\right)^2\text dh \\=& \frac 3H\int_0^H\frac {(H-h)^2}{H^2}h\text dh \\\xlongequal[h=Hx]{x=h/H}& \frac 3H\int_0^1(1-2x+x^2)H^2x\text dx \\=& 3H\left[\frac{x^2}2-\frac 23 x^3+\frac{x^4}4\right]_0^1 \\=& \frac H4\end{aligned}</script><p>质量微元</p><script type="math/tex; mode=display">\text dm=\rho\text dV=\frac M{\frac 13\pi R^2H}r\text dr\text dh\text d\theta</script><p>绕z轴转动惯量</p><script type="math/tex; mode=display">\begin{aligned}J_z =& \int_0^{2\pi}\int_0^H\int_0^{r(h)}r^2\text dm \\=& \frac M{\frac 13\pi R^2H}\int_0^{2\pi}\int_0^H\int_0^{r(h)}r^2r\text dr\text dh\text d\theta \\=& \frac {6M}{R^2H}\int_0^H\int_0^{\frac RH(H-h)}r^3\text dr\text dh \\=& \frac {6MR^4}{4R^2H}\int_0^H\frac{(H-h)^4}{H^4}\text dh \\\xlongequal[h=Hx]{x=h/H}& \frac {3MR^2}{2H}\int_0^1(1-x)^4H\text dx \\=& \frac {3MR^2}2(1-4\frac 12+6\frac 13-4\frac 14+1\frac 15) \\=& \frac 3{10}MR^2\end{aligned}</script><p>计算绕x轴转动惯量时，其内一点到旋转轴的距离为</p><script type="math/tex; mode=display">d(r,h,\theta)=\sqrt{(h-\frac H4)^2+r^2\cos^2\theta}</script><script type="math/tex; mode=display">\begin{aligned}J_x=& \int_0^{2\pi}\int_0^H\int_0^{r(h)}d^2(r,h,\theta)\text dm \\=& \frac M{\frac 13\pi R^2H}\int_0^{2\pi}\int_0^H\int_0^{\frac RH(H-h)}\left((h-\frac H4)^2+r^2\cos^2\theta\right)r\text dr\text dh\text d\theta \\=& \frac M{\frac 13\pi R^2H}\left(\pi R^2\int_0^H(h-\frac H4)^2\frac{(H-h)^2}{H^2}\text dh+\int_0^{2\pi}\cos^2\theta\text d\theta\int_0^H\int_0^{\frac RH(H-h)}r^3\text dr\text dh\right) \\=& \frac M{\frac 13\pi R^2H}\left(\pi R^2\int_0^1(1-x)^2(x-\frac14)^2H^3\text dx+\int_0^{2\pi}\frac{\cos 2\theta+1}{2}\text d\theta\frac{R^4}4\int_0^H\frac{(H-h)^4}{H^4}\text dh\right) \\=& \frac M{\frac 13\pi R^2H}\left(\pi R^2H^3\int_0^1(x^4-\frac 52x^3+\frac{33}{16}x^2-\frac 58x+\frac 1{16})\text dx+\frac{\pi R^4}4\int_0^1(1-x)^4H\text dx\right) \\=& \frac M{\frac 13\pi R^2H}\left(\pi R^2H^3\frac 1{80}+\frac 1{20}\pi HR^4\right) \\=& 3M\left(\frac{H^2}{80}+\frac{R^2}{20}\right)\end{aligned}</script><p>草稿纸</p><script type="math/tex; mode=display">(x^2-2x+1)(x^2-\frac12x+\frac1{16})</script><script type="math/tex; mode=display">\frac15-\frac58+\frac{11}{16}-\frac5{16}+\frac1{16}=\frac15-\frac3{16}=\frac1{80}</script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>万有引力的几个结论证明</title>
      <link href="/2024/08/03/%E4%B8%87%E6%9C%89%E5%BC%95%E5%8A%9B%E7%9A%84%E5%87%A0%E4%B8%AA%E7%BB%93%E8%AE%BA%E8%AF%81%E6%98%8E/"/>
      <url>/2024/08/03/%E4%B8%87%E6%9C%89%E5%BC%95%E5%8A%9B%E7%9A%84%E5%87%A0%E4%B8%AA%E7%BB%93%E8%AE%BA%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="均匀球体对球体外物体的万有引力等效于位于球心处的质点"><a href="#均匀球体对球体外物体的万有引力等效于位于球心处的质点" class="headerlink" title="均匀球体对球体外物体的万有引力等效于位于球心处的质点"></a>均匀球体对球体外物体的万有引力等效于位于球心处的质点</h1><script type="math/tex; mode=display">\begin{aligned}\cos\alpha &= \frac{D-z}{\sqrt{x^2+y^2+(D-z)^2}} \\&= \frac{D-r\cos\phi}{\sqrt{r^2\sin^2\phi\cos^2\theta +r^2\sin^2\phi\sin^2\theta+D^2-2rD\cos\phi+r^2\cos^2\phi}} \\&= \frac{D-r\cos\phi}{\sqrt{r^2+D^2-2rD\cos\phi}}\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}F &= \iiint\frac{Gm\rho\text{d}V}{x^2+y^2+(D-z)^2}\cos\alpha \\&= Gm\rho\iiint\frac{r^2\sin\phi(D-r\cos\phi)}{(r^2+D^2-2rD\cos\phi)^{\frac{3}{2}}}\text{d}V\end{aligned}</script><p>令</p><script type="math/tex; mode=display">\begin{aligned}A(\phi) &= r^2\sin\phi(D-r\cos\phi) \\B(\phi) &= r^2+D^2-2rD\cos\phi\end{aligned}</script><p>则</p><script type="math/tex; mode=display">\begin{aligned}\frac{\text{d}B(\phi)}{\text{d}\phi} &= 2rD\sin\phi \\A(\phi) &= r^2\sin\phi(D-r\cos\phi) \\&= \frac{r(D-r\cos\phi)}{2D}\frac{\text{d}B(\phi)}{\text{d}\phi} \\&= \frac{r(B(\phi)+D^2-r^2)}{4D^2}\frac{\text{d}B(\phi)}{\text{d}\phi} \\\end{aligned}</script><p>于是</p><script type="math/tex; mode=display">\begin{aligned}& \int\frac{B(\phi)+D^2-r^2}{B^{\frac{3}{2}}(\phi)}\text{d}B(\phi) \\=& -2\int(B(\phi)+D^2-r^2)\text{d}B^{-\frac{1}{2}}(\phi) \\=& -2\left[\sqrt{B(\phi)}+\frac{D^2-r^2}{\sqrt{B(\phi)}}\right] +2\int B^{-\frac{1}{2}}(\phi)\text{d}B(\phi) \\=& -2\left[\sqrt{B(\phi)}+\frac{D^2-r^2}{\sqrt{B(\phi)}}\right]+4\sqrt{B(\phi)} \\=& 2\sqrt{B(\phi)}-2\frac{D^2-r^2}{\sqrt{B(\phi)}} \\\end{aligned}</script><p>加入上下限</p><script type="math/tex; mode=display">\begin{aligned}\sqrt{B(0)} =& \sqrt{r^2+D^2-2rD}=D-r \\\sqrt{B(\pi)} =& \sqrt{r^2+D^2+2rD}=D+r \\\int_0^{\pi}\frac{B(\phi)+D^2-r^2}{B^{\frac{3}{2}}(\phi)}\text{d}B(\phi)=& 2\left[\sqrt{B(\phi)}-\frac{D^2-r^2}{\sqrt{B(\phi)}}\right]_0^{\pi} \\=& 2[(D+r)-(D-r)]-2[(D-r)-(D+r)] \\=& 8r\end{aligned}</script><p>代入$F$</p><script type="math/tex; mode=display">\begin{aligned}F =& Gm\rho\iiint\frac{r^2\sin\phi(D-r\cos\phi)}{(r^2+D^2-2rD\cos\phi)^{\frac{3}{2}}}\text{d}V \\=& Gm\rho\int_0^{2\pi}\int_0^{\pi}\int_0^{R}\frac{r^2\sin\phi(D-r\cos\phi)}{(r^2+D^2-2rD\cos\phi)^{\frac{3}{2}}}\text{d}r\text{d}\phi\text{d}\theta \\=& 2\pi Gm\rho\int_0^{\pi}\int_0^{R}\frac{r^2\sin\phi(D-r\cos\phi)}{(r^2+D^2-2rD\cos\phi)^{\frac{3}{2}}}\text{d}r\text{d}\phi \\=& 2\pi Gm\rho\int_0^{R}\int_0^{\pi}\int\frac{A(\phi)} {B^{\frac{3}{2}}(\phi)}\text{d}\phi\text{d}r \\=& 2\pi Gm\rho\int_0^{R}\int_0^{\pi}\frac{r(B(\phi)+D^2-r^2)} {4D^2B^{\frac{3}{2}}(\phi)}\text{d}B(\phi)\text{d}r \\=& \frac{\pi Gm\rho r}{2D^2}\int_0^{R}r\int_0^{\pi}\frac{B(\phi)+D^2-r^2} {B^{\frac{3}{2}}(\phi)}\text{d}B(\phi)\text{d}r \\=& \frac{\pi Gm\rho}{2D^2}\int_0^{R}8r^2\text{d}r \\=& \frac{4\pi Gm\rho}{D^2}\frac{R^3}{3} \\=& \frac{4\pi GmR^3}{3D^2}\frac{M}{\frac{4}{3}\pi R^3} \\=& \frac{GMm}{D^2}\end{aligned}</script><h1 id="均匀球壳对球壳内任意一点的万有引力合力为0"><a href="#均匀球壳对球壳内任意一点的万有引力合力为0" class="headerlink" title="均匀球壳对球壳内任意一点的万有引力合力为0"></a>均匀球壳对球壳内任意一点的万有引力合力为0</h1><p>积分</p><script type="math/tex; mode=display">\int_0^{\pi}\frac{B(\phi)+D^2-r^2}{B^{\frac{3}{2}}(\phi)}\text{d}B(\phi)</script><p>中，由于$D\le r$，所以$\sqrt{B(0)}=\sqrt{r^2+D^2-2rD}=r-D$，此时</p><script type="math/tex; mode=display">\begin{aligned}\int_0^{\pi}\frac{B(\phi)+D^2-r^2}{B^{\frac{3}{2}}(\phi)}\text{d}B(\phi)=& 2\left[\sqrt{B(\phi)}-\frac{D^2-r^2}{\sqrt{B(\phi)}}\right]_0^{\pi} \\=& 2[(D+r)-(D-r)]-2[(r-D)+(r+D)] \\=& 0\end{aligned}</script><p>代入$F$</p><script type="math/tex; mode=display">\begin{aligned}F =& Gm\rho\int_0^{2\pi}\int_0^{\pi}\int_{R_1}^{R_2}\frac{r^2\sin\phi(D-r\cos\phi)}{(r^2+D^2-2rD\cos\phi)^{\frac{3}{2}}}\text{d}r\text{d}\phi\text{d}\theta \\=& \frac{\pi Gm\rho r}{2D^2}\int_{R_1}^{R_2}r\int_0^{\pi}\frac{B(\phi)+D^2-r^2} {B^{\frac{3}{2}}(\phi)}\text{d}B(\phi)\text{d}r \\=& 0\end{aligned}</script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四元数、欧拉角、旋转矩阵笔记</title>
      <link href="/2024/08/03/%E5%9B%9B%E5%85%83%E6%95%B0%E3%80%81%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/03/%E5%9B%9B%E5%85%83%E6%95%B0%E3%80%81%E6%AC%A7%E6%8B%89%E8%A7%92%E3%80%81%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="四元数"><a href="#四元数" class="headerlink" title="四元数"></a>四元数</h1><p>单位四元数</p><script type="math/tex; mode=display">\begin{aligned}& Q=\left[\cos\frac\phi 2,i\sin\frac\phi 2,j\sin\frac\phi 2,k\sin\frac\phi 2\right] \\\end{aligned}</script><p>四元数性质</p><script type="math/tex; mode=display">\begin{aligned}& q_aq_b=[s_a,\vec{a}][s_b,\vec{b}]=[s_as_b-\vec{a}\cdot\vec{b}, s_a\vec{b} + s_b\vec{a} + \vec{a}\times\vec{b}] \\& q^{-1} = \frac{q^*}{|q|^2}\end{aligned}</script><p>任意向量 $\vec{v}$ 沿着以单位向量定义的旋转轴 $\vec{u}$ 旋转 $\theta$ 度之后的 $\vec{v}’$ 可以使用四元数乘法来获得。令 $q_v=[0,\vec{v}]$，$q=[\cos\frac{\theta}{2},\sin\frac{\theta}{2}\vec{u}]$，那么</p><script type="math/tex; mode=display">\vec{v}'=qq_vq^*</script><h2 id="四元数微分方程"><a href="#四元数微分方程" class="headerlink" title="四元数微分方程"></a>四元数微分方程</h2><script type="math/tex; mode=display">\begin{aligned}\begin{bmatrix}\dot{q}_0 \\ \dot{q}_1 \\ \dot{q}_2 \\ \dot{q}_3 \\\end{bmatrix}=& \frac{1}{2}\begin{bmatrix}0 & -\omega_x & -\omega_y & -\omega_z \\\omega_x & 0 & -\omega_z & \omega_y \\\omega_y & -\omega_z & 0 & -\omega_x \\\omega_z & \omega_y & -\omega_x & 0\end{bmatrix}\begin{bmatrix}q_0 \\ q_1 \\ q_2 \\ q_3\end{bmatrix} \\=& \frac{1}{2}\begin{bmatrix}q_{0} & -q_{1} & -q_{2} & -q_{3} \\q_{1} & q_{0} & q_{3} & -q_{2} \\q_{2} & -q_{3} & q_{0} & q_{1} \\q_{3} & q_{2} & -q_{1} & q_{0}\end{bmatrix}\begin{bmatrix}0 \\ \omega_{x} \\ \omega_{y} \\ \omega_{z}\end{bmatrix}\end{aligned}</script><h1 id="旋转矩阵"><a href="#旋转矩阵" class="headerlink" title="旋转矩阵"></a>旋转矩阵</h1><p>横滚角 $\phi$ 绕x轴旋转，向左横滚为正</p><script type="math/tex; mode=display">R_x=\begin{bmatrix}    1 & 0 & 0 \\    0 & \cos\phi & -\sin\phi \\    0 & \sin\phi & \cos\phi\end{bmatrix}</script><p>俯仰角 $\theta$ 绕y轴旋转，抬头为正</p><script type="math/tex; mode=display">R_y=\begin{bmatrix}    \cos\theta & 0 & \sin\theta \\    0 & 1 & 0 \\    -\sin\theta & 0 & \cos\theta \\\end{bmatrix}</script><p>偏航角 $\psi$ 绕z轴旋转，向左偏航为正</p><script type="math/tex; mode=display">R_z=\begin{bmatrix}    \cos\psi & -\sin\psi & 0 \\    \sin\psi & \cos\psi & 0 \\    0 & 0 & 1\end{bmatrix}</script><p>由罗德里格斯公式</p><script type="math/tex; mode=display">R=\cos\theta I+(1-\cos\theta)\vec{n}\vec{n}^{\text{T}}+\sin\theta\vec{n}^{\wedge}</script><p>可以将旋转矩阵和轴角互相转换，有了轴角即可转换成四元数。<br>由旋转矩阵转换成轴角的公式为</p><script type="math/tex; mode=display">\theta=\pm\arccos(\frac{\text{tr}(\mathbf{R})-1}{2})</script><p>由于$\boldsymbol{n}$为旋转轴且满足</p><script type="math/tex; mode=display">\mathbf{R}\boldsymbol{n}=\boldsymbol{n}</script><p>所以 $\boldsymbol{n}$ 为旋转矩阵 $\mathbf{R}$ 的特征值为1对应的模长为1的特征向量。</p><h1 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h1><p>&emsp;&emsp;统一按照本体系zyx轴的旋转顺序，先绕z轴偏航，再绕y轴俯仰，最后绕x轴横滚。本体系x轴朝后为横滚轴，向左横滚为正；y轴朝右为俯仰轴，抬头为正；z轴朝上为偏航轴，向左偏航为正。旋转后横滚俯仰偏航三个角度的定义见后文<code>四元数、旋转矩阵转欧拉角</code>一节。</p><h1 id="四元数转旋转矩阵"><a href="#四元数转旋转矩阵" class="headerlink" title="四元数转旋转矩阵"></a>四元数转旋转矩阵</h1><script type="math/tex; mode=display">\begin{aligned}R =& \begin{bmatrix}1-2q_2^2-2q_3^2 & 2q_1q_2-2q_0q_3 & 2q_1q_3+2q_0q_2 \\2q_1q_2+2q_0q_3 & 1-2q_1^2-2q_3^2 & 2q_2q_3-2q_0q_1 \\2q_1q_3-2q_0q_2 & 2q_2q_3+2q_0q_1 & 1-2q_1^2-2q_2^2\end{bmatrix} \\=& \begin{bmatrix}q_0^2+q_1^2-q_2^2-q_3^2 & 2q_1q_2-2q_0q_3 & 2q_1q_3+2q_0q_2 \\2q_1q_2+2q_0q_3 & q_0^2-q_1^2+q_2^2-q_3^2 & 2q_2q_3-2q_0q_1 \\2q_1q_3-2q_0q_2 & 2q_2q_3+2q_0q_1 & q_0^2-q_1^2-q_2^2+q_3^2\end{bmatrix} \\=& (q_0^2-q_v^\text{T}q_v)I+2q_vq_v^\text{T}+2q_0q_v^{\wedge} \\=& (q_0^2-q_1^2-q_2^2-q_3^2)I+2\begin{bmatrix}q_1^2 & q_1q_2 & q_1q_3 \\ q_1q_2 & q_2^2 & q_2q_3 \\ q_1q_3 & q_2q_3 & q_3^2 \\\end{bmatrix}+2q_0\begin{bmatrix}0 & -q_3 & q_2 \\ q_1 & 0 & -q_1 \\ -q_2 & q_3 & 0 \\\end{bmatrix}\end{aligned}</script><p><a href="http://q_0q_0q_0.songho.ca/opengl/gl_quaternion.html">Quaternion to Rotation Matriq_1 -OpenGL</a></p><h1 id="旋转矩阵转四元数"><a href="#旋转矩阵转四元数" class="headerlink" title="旋转矩阵转四元数"></a>旋转矩阵转四元数</h1><p><a href="https://math.stackexchange.com/questions/893984/conversion-of-rotation-matrix-to-quaternion">Conversion of rotation matrix to quaternion -stackexchange</a><br><a href="https://d3cw3dd2w32x2b.cloudfront.net/wp-content/uploads/2015/01/matrix-to-quat.pdf">Converting a Rotation Matrix to a Quaternion -stackexchange</a><br><a href="https://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/">Maths - Conversion Matrix to Quaternion -EuclideanSpace</a></p><p>旋转矩阵与四元数的各个元素间有如下关系</p><script type="math/tex; mode=display">1+r_{11}-r_{22}-r_{33}=4x^2 \\1-r_{11}+r_{22}-r_{33}=4y^2 \\1-r_{11}-r_{22}+r_{33}=4z^2 \\r_{12}+r_{21}=4xy \\r_{13}+r_{31}=4xz \\r_{23}+r_{32}=4yz \\r_{21}-r_{12}=4wz \\r_{13}-r_{31}=4wy \\r_{32}-r_{23}=4wx \\</script><p>已知旋转矩阵求四元数，上面方程组可以等价写为已知 $a_1$ 到 $a_9$ 求 $x,y,z,w$：</p><script type="math/tex; mode=display">4x^2=a_1 \\4y^2=a_2 \\4z^2=a_3 \\4xy=a_4 \\4xz=a_5 \\4yz=a_6 \\4wz=a_7 \\4wy=a_8 \\4wx=a_9 \\</script><p>这9个方程中，等式左边包含 $4x,4y,4z,4w$ 项的方程分别有4,4,4,3个，等式两侧同时除以共同项后即可剩下 $x,y,z,w$ 项，而共同项 $4x,4y,4z$ 的计算方法为</p><script type="math/tex; mode=display">4x=\pm 2\sqrt{4x^2}</script><p>例如，</p><script type="math/tex; mode=display">x=\frac{a_1}{4x}=\frac{a_1}{\pm 2\sqrt{4x^2}}=\frac{a_1}{\pm 2\sqrt{a_1}} \\y=\frac{a_4}{4x}=\frac{a_4}{\pm 2\sqrt{4x^2}}=\frac{a_4}{\pm 2\sqrt{a_1}} \\z=\frac{a_5}{4x}=\frac{a_5}{\pm 2\sqrt{4x^2}}=\frac{a_5}{\pm 2\sqrt{a_1}} \\w=\frac{a_9}{4x}=\frac{a_9}{\pm 2\sqrt{4x^2}}=\frac{a_9}{\pm 2\sqrt{a_1}} \\</script><p>这个例子以共同项 $4x$ 或 $a_1$ 为分母，但有时候分母可能为0，所以需要根据实际情况分别以4个共同项为分母。共同项 $4y$、$4z$ 与 $4x$ 类似，而 $4w$ 的计算方法为，将前3式相加得到</p><script type="math/tex; mode=display">3-r_{11}-r_{22}-r_{33}=4(1-w^2) \\4w^2=1+r_{11}+r_{22}+r_{33} \\4w=\pm 2\sqrt{4w^2}</script><p>实际中有一些比较常用的特殊情况。例如，四元数</p><script type="math/tex; mode=display">Q_1=[0, 1, 0, 0] \\Q_2=[0, 0, 1, 0] \\Q_3=[0, 0, 0, 1] \\</script><p>对应的旋转矩阵分别为</p><script type="math/tex; mode=display">\begin{bmatrix} 1 & 0 & 0  \\ 0 & -1 & 0 \\ 0 & 0 & -1 \end{bmatrix}\begin{bmatrix} -1 & 0 & 0 \\ 0 & 1 & 0  \\ 0 & 0 & -1 \end{bmatrix}\begin{bmatrix} -1 & 0 & 0 \\ 0 & -1 & 0 \\ 0 & 0 & 1  \end{bmatrix}</script><p>四元数</p><script type="math/tex; mode=display">[0.5, 0.5, 0.5, 0.5] \\[0.5, -0.5, 0.5, 0.5] \\[0.5, 0.5, -0.5, 0.5] \\[0.5, 0.5, 0.5, -0.5] \\</script><script type="math/tex; mode=display">[-0.5, 0.5, 0.5, 0.5] \\[-0.5, -0.5, 0.5, 0.5] \\[-0.5, 0.5, -0.5, 0.5] \\</script><p>对应的旋转矩阵分别为</p><script type="math/tex; mode=display">\begin{bmatrix} 0 & 0 & 1  \\ 1 & 0 & 0  \\ 0 & 1 & 0  \end{bmatrix}\begin{bmatrix} 0 & -1 & 0 \\ 0 & 0 & 1  \\ -1 & 0 & 0 \end{bmatrix}\begin{bmatrix} 0 & -1 & 0 \\ 0 & 0 & -1 \\ 1 & 0 & 0  \end{bmatrix}\begin{bmatrix} 0 & 1 & 0  \\ 0 & 0 & -1 \\ -1 & 0 & 0 \end{bmatrix} \\\begin{bmatrix} 0 & 1 & 0  \\ 0 & 0 & 1  \\ 1 & 0 & 0  \end{bmatrix}\begin{bmatrix} 0 & 0 & -1 \\ -1 & 0 & 0 \\ 0 & 1 & 0  \end{bmatrix}\begin{bmatrix} 0 & 0 & 1  \\ -1 & 0 & 0 \\ 0 & -1 & 0 \end{bmatrix}</script><h1 id="欧拉角转旋转矩阵"><a href="#欧拉角转旋转矩阵" class="headerlink" title="欧拉角转旋转矩阵"></a>欧拉角转旋转矩阵</h1><p><a href="https://en.wikipedia.org/wiki/Euler_angles">https://en.wikipedia.org/wiki/Euler_angles</a></p><script type="math/tex; mode=display">\begin{aligned}& \begin{bmatrix}    \cos\psi & -\sin\psi & 0 \\    \sin\psi & \cos\psi & 0 \\    0 & 0 & 1\end{bmatrix}\begin{bmatrix}    \cos\theta & 0 & \sin\theta \\    0 & 1 & 0 \\    -\sin\theta & 0 & \cos\theta \\\end{bmatrix}\begin{bmatrix}    1 & 0 & 0 \\    0 & \cos\phi & -\sin\phi \\    0 & \sin\phi & \cos\phi\end{bmatrix} \\=& \begin{bmatrix}    c_1c_2 & -s_1 & c_1s_2 \\    s_1c_2 & c_1 & s_1s_2 \\    -s_2 & 0 & c_2\end{bmatrix}\begin{bmatrix}    1 & 0 & 0 \\    0 & c_3 & -s_3 \\    0 & s_3 & c_3\end{bmatrix} \\=& \begin{bmatrix}    c_1c_2 & c_1s_2s_3-s_1c_3 & c_1s_2 \\    s_1c_2 & s_1s_2s_3+c_1c_3 & s_1s_2 \\    -s_2 & c_2s_3 & c_2\end{bmatrix}\end{aligned}</script><h1 id="四元数、旋转矩阵转欧拉角"><a href="#四元数、旋转矩阵转欧拉角" class="headerlink" title="四元数、旋转矩阵转欧拉角"></a>四元数、旋转矩阵转欧拉角</h1><p>航模飞控上用的四元数转欧拉角代码如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rol=<span class="built_in">atan2</span>(<span class="number">2</span>*(q0*q1+q2*q3),<span class="number">1</span><span class="number">-2</span>*(q1*q1+q2*q2));</span><br><span class="line">pit=<span class="built_in">asin</span>(<span class="number">2</span>*(q0*q2-q1*q3));</span><br><span class="line">yaw=<span class="built_in">atan2</span>(<span class="number">2</span>*(q0*q3+q1*q2),<span class="number">1</span><span class="number">-2</span>*(q2*q2+q3*q3));</span><br></pre></td></tr></table></figure><br>四元数转旋转矩阵代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">matqr</span><span class="params">(<span class="number">3</span>, <span class="number">3</span>, vecdble&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    q0*q0+q1*q1-q2*q2-q3*q3, <span class="number">2</span>*q1*q2<span class="number">-2</span>*q0*q3, <span class="number">2</span>*q1*q3<span class="number">+2</span>*q0*q2,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="number">2</span>*q1*q2<span class="number">+2</span>*q0*q3, q0*q0-q1*q1+q2*q2-q3*q3, <span class="number">2</span>*q2*q3<span class="number">-2</span>*q0*q1,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="number">2</span>*q1*q3<span class="number">-2</span>*q0*q2, <span class="number">2</span>*q2*q3<span class="number">+2</span>*q0*q1, q0*q0-q1*q1-q2*q2+q3*q3,</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;)</span></span>;</span><br></pre></td></tr></table></figure><br>对应得到旋转矩阵转欧拉角<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rol=<span class="built_in">atan2</span>(r23, r33);</span><br><span class="line">pit=<span class="built_in">asin</span>(-r31);</span><br><span class="line">yaw=<span class="built_in">atan2</span>(r21, r11);</span><br></pre></td></tr></table></figure><br>二值反正切函数为<code>atan2(y,x)</code>，横滚角的二值反正切函数中的y、x值分别为本体系y坐标轴和z坐标轴在世界系的z坐标(r23, r33)，俯仰角为0时也可以理解成世界系z轴在本体系YOZ平面上的投影与z轴的夹角（但俯仰角不为0时不能这样等价）。偏航角的二值反正切函数中的y、x值分别为本体系x轴在世界系的y坐标和x坐标(r21, r11)，可以理解成本体系x轴在世界系XOY平面上的投影与世界系x轴的夹角。俯仰角为本体系x轴与世界系XOY平面的距离，因为x轴朝向本体后方，所以取负号，表示抬头为正。</p><h1 id="欧拉角速度"><a href="#欧拉角速度" class="headerlink" title="欧拉角速度"></a>欧拉角速度</h1><p><a href="https://blog.csdn.net/a735148617/article/details/116740453">欧拉角速度与角速度的关系推导 -CSDN博客</a><br><a href="https://physics.stackexchange.com/questions/73961/angular-velocity-expressed-via-euler-angles">Angular Velocity expressed via Euler Angles -Physics Stack Exchange</a>  </p><p>assume that $x=x(t),y=y(t)$, then let $z=\text e^x\sin y$, how to use sympy to calculate the total differentiation of $z$, i.e. $\sin y+\text e^x\cos y$?</p><p>角速度 $\vec\omega$ 是表示在惯性坐标系的，可分解为</p><script type="math/tex; mode=display">\vec\omega=\omega_x\vec i+\omega_y\vec j+\omega_z\vec k</script><p>同时，又可以将它分解到刚体固连坐标系三次旋转的转轴上：</p><script type="math/tex; mode=display">\vec\omega=\text{d}\phi\vec e_x+\text{d}\theta\vec e_y+\text{d}\psi\vec e_z</script><p>首先绕 $z$ 轴旋转</p><script type="math/tex; mode=display">\text{d}\psi e_z=\begin{bmatrix}1 & 0 & 0 \\0 & 1 & 0 \\0 & 0 & 1\end{bmatrix}\begin{bmatrix}0 \\ 0 \\ \text{d}\psi\end{bmatrix}</script><p>其次绕 $y$ 轴旋转</p><script type="math/tex; mode=display">\text{d}\theta e_y=\begin{bmatrix}    \cos\psi & -\sin\psi & 0 \\    \sin\psi & \cos\psi & 0 \\    0 & 0 & 1\end{bmatrix}\begin{bmatrix}0 \\ \text{d}\theta \\ 0\end{bmatrix}</script><p>最后绕 $x$ 轴旋转</p><script type="math/tex; mode=display">\text{d}\phi e_x=\begin{bmatrix}    \cos\psi & -\sin\psi & 0 \\    \sin\psi & \cos\psi & 0 \\    0 & 0 & 1\end{bmatrix}\begin{bmatrix}    \cos\theta & 0 & \sin\theta \\    0 & 1 & 0 \\    -\sin\theta & 0 & \cos\theta \\\end{bmatrix}\begin{bmatrix}\text{d}\phi \\ 0 \\ 0\end{bmatrix}</script><p>将三者相加，就可得到角速度与欧拉角速度的关系</p><script type="math/tex; mode=display">\begin{aligned}\vec\omega =& R_zR_y\text{d}\vec\phi+R_z\text{d}\vec\theta+\text{d}\vec\psi \\=& I(\text{d}\vec\psi+R_z(\text{d}\vec\theta+R_y\text{d}\vec\phi)) \\% =& R_x(\text{d}\vec\phi+R_y(\text{d}\vec\theta+R_z\text{d}\vec\psi)) \\=& \begin{bmatrix}    \cos\psi\cos\theta\text{d}\phi \\    \sin\psi\cos\theta\text{d}\phi \\    -\sin\theta\text{d}\phi \\\end{bmatrix}+\begin{bmatrix}    -\sin\psi\text{d}\theta \\    \cos\psi\text{d}\theta \\    0 \\\end{bmatrix}+\begin{bmatrix}0 \\ 0 \\ \text{d}\psi\end{bmatrix} \\=& \begin{bmatrix}    \cos\psi\cos\theta & -\sin\psi & 0 \\    \sin\psi\cos\theta & \cos\psi & 0 \\    -\sin\theta & 0 & 1 \\\end{bmatrix}\begin{bmatrix}\text{d}\phi \\ \text{d}\theta \\ \text{d}\psi\end{bmatrix} \\\end{aligned}</script><p>反过来得到</p><script type="math/tex; mode=display">\begin{aligned}\begin{bmatrix}\text{d}\phi \\ \text{d}\theta \\ \text{d}\psi\end{bmatrix} = \begin{bmatrix}    \cos\psi/\cos\theta & -\sin\psi/\cos\theta & 0 \\    \sin\psi & \cos\psi & 0 \\    -cos\psi\tan\theta & \sin\psi\tan\theta & 1 \\\end{bmatrix}\vec\omega\end{aligned}</script><h1 id="罗德里格斯参数"><a href="#罗德里格斯参数" class="headerlink" title="罗德里格斯参数"></a>罗德里格斯参数</h1><script type="math/tex; mode=display">g=\frac{1}{q_w}\begin{bmatrix}    q_x \\ q_y \\ q_z\end{bmatrix}=e\tan\frac{\Phi}{2}</script><h1 id="xyz固定角和zyx欧拉角相等的直观理解"><a href="#xyz固定角和zyx欧拉角相等的直观理解" class="headerlink" title="xyz固定角和zyx欧拉角相等的直观理解"></a>xyz固定角和zyx欧拉角相等的直观理解</h1><p>&emsp;&emsp;xyz固定角指所有的旋转均在世界坐标系下，刚体先后绕世界坐标系的xyz轴旋转，设旋转前的向量为 $\vec{v}$ (为了便于理解，可以想象 $\vec{v}=(1,0,0)^T$)，则旋转后的向量为</p><script type="math/tex; mode=display">\vec{v}_1=R_zR_yR_x\vec{v}</script><p>&emsp;&emsp;zyx欧拉角指3次旋转均为绕与刚体固连的坐标系的轴旋转，顺序为zyx。旋转前刚体坐标系与世界坐标系重合，绕刚体坐标系z轴旋转一次后的向量在世界坐标系下的坐标为 $R_z\vec{v}$。一直在动的刚体坐标系称为刚体系，刚体系在绕z轴旋转一次后的坐标系称为”刚1系”。此时再绕刚体系(刚1系)y轴旋转，旋转后的坐标在刚体系中仍为 $\vec{v}$，在刚1系中的坐标为 $R_y\vec{v}$。此时注意对向量乘一个矩阵的另一个作用，即将向量从一个坐标系变换到另一个坐标系，刚1系下的任意坐标 $\vec{x}$ 在世界系下的坐标为 $R_z\vec{x}$，所以现在旋转了两次的向量 $\vec{v}$ 在刚1系中的坐标为 $R_y\vec{v}$，在世界系中的坐标就是 $R_zR_y\vec{v}$。<br>&emsp;&emsp;同理，再旋转最后一次后，向量 $\vec{v}$ 在刚体系的坐标仍然为 $\vec{v}$，在刚2系中的坐标为 $R_x\vec{v}$，刚2系的任意坐标 $\vec{x}$ 在刚1系下的坐标为 $R_y\vec{x}$ 所以向量 $\vec{v}$ 在刚2系中的坐标为 $R_x\vec{v}$，在刚1系中的坐标为 $R_yR_x\vec{v}$，在世界系中的坐标为 $R_zR_yR_x\vec{v}$，与xyz固定角相同。</p><ul><li>John J. Craig. 机器人学导论.<h1 id="其他参考"><a href="#其他参考" class="headerlink" title="其他参考"></a>其他参考</h1></li><li><a href="https://www.qiujiawei.com/understanding-quaternions/">理解四元数 -Wyman的原创技术博客</a></li><li><a href="https://www.3dgep.com/understanding-quaternions/">Understanding Quaternions -3D Game Engine Programming</a></li><li><a href="https://blog.csdn.net/waihekor/article/details/103297840">四元数微分方程的推导和代码实现 -CSDN博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/27471300">四元数——基本概念 -知乎</a></li><li><a href="https://www.zhihu.com/question/23005815/answer/483589712">如何形象地理解四元数？ -知乎</a></li><li><a href="https://krasjet.github.io/quaternion/quaternion.pdf">四元数与三维旋转 -知乎</a></li><li><a href="https://graphics.stanford.edu/courses/cs348a-17-winter/Papers/quaternion.pdf">Quaternions and Rotations (PDF) -stanford</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QR分解求矩阵特征值</title>
      <link href="/2024/08/03/QR%E5%88%86%E8%A7%A3%E6%B1%82%E7%9F%A9%E9%98%B5%E7%89%B9%E5%BE%81%E5%80%BC/"/>
      <url>/2024/08/03/QR%E5%88%86%E8%A7%A3%E6%B1%82%E7%9F%A9%E9%98%B5%E7%89%B9%E5%BE%81%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="豪斯霍尔德变换"><a href="#豪斯霍尔德变换" class="headerlink" title="豪斯霍尔德变换"></a>豪斯霍尔德变换</h1><p>&emsp;&emsp;豪斯霍尔德(Householder)变换又称作镜像变换，作用是将任何非零向量$x$变换成另一个向量$y$，且两个向量关于某个平面镜像对称。变换矩阵</p><script type="math/tex; mode=display">H=I-\omega\omega^\text{T}</script><p>称为豪斯霍尔德矩阵，即$Hx=y$，满足</p><script type="math/tex; mode=display">H^\text{T}=H^{-1}=H,\ H^\text{T}H=I</script><p>其中$\omega$是对称平面的单位法向量，从图中可直观看出$x-y=2\omega(\omega^\text{T}x)$。<br>&emsp;&emsp;因为任何两个长度相等的向量肯定关于一个平面对称，所以可以把任何向量镜像到任何位置，现在要做的是将向量镜像到x轴上，对应的镜像矩阵为</p><script type="math/tex; mode=display">H=I-\rho^{-1}uu^\text{T}</script><p>令$\sigma=\pm||x||_2$即向量$\vec{x}$的长度，则矩阵$H$可以将向量$\vec{x}$变换到x轴上，用$-\sigma\vec{e}_1$表示，如右图所示。$\vec{e}_1$表示x轴上的单位向量。此时$\vec{u}=\vec{x}+\sigma\vec{e}_1$为两个镜像向量的差，$\rho=0.5||u||_2^2=\sigma(\sigma+\alpha_1)$，$\alpha_1$是$\vec{x}$的第一个元素，$\sigma+\alpha_1$是$\vec{u}$的第一个元素。</p><h1 id="海森堡矩阵"><a href="#海森堡矩阵" class="headerlink" title="海森堡矩阵"></a>海森堡矩阵</h1><script type="math/tex; mode=display">\left[\begin{matrix}x & x & x & x \\x & x & x & x \\0 & x & x & x \\0 & 0 & x & x \\\end{matrix}\right]</script><p>&emsp;&emsp;形如上面的矩阵称为海森堡(Hessenberg)矩阵，也就是上三角阵下面再多一排斜对角的元素，也称作拟上三角阵。左下角为0的称为上海森堡阵，右上角为0的称为下海森堡阵。<br>&emsp;&emsp;任何实的$n$阶方阵$A$可通过镜像变换化为上海森堡阵，变换思路是，每一步把矩阵$A$的每一列的下半部分清零。<br>&emsp;&emsp;豪斯霍尔德矩阵在具体的迭代中可用于简化迭代所需的矩阵乘法。左乘H矩阵：</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>任务切换的轨迹规划问题</title>
      <link href="/2024/08/03/%E4%BB%BB%E5%8A%A1%E5%88%87%E6%8D%A2%E7%9A%84%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98/"/>
      <url>/2024/08/03/%E4%BB%BB%E5%8A%A1%E5%88%87%E6%8D%A2%E7%9A%84%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><strong>摘要</strong> </p><script type="math/tex; mode=display">\vec r(t)=\sqrt{x^2(t)+y^2(t)}</script><script type="math/tex; mode=display">\begin{aligned}\dot \\\end{aligned}</script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>有4个坐标点，分别位于 $(0,0),(1,0),(1,1),(0,1)$，现在需要为一个质点设计运动规划方法，使该质点依次穿过这4个坐标点，同时要求最大速度不超过5，最大加速度不超过1，也就是设计质点的运动参数方程 $x(t)$ 和 $y(t)$，使 $\vec r(t)=\sqrt{x^2(t)+y^2(t)}$ 满足<br>&lt;!—</p><script type="math/tex; mode=display">|\dot{\vec r}(t)|=\left|\frac{x\dot x+y\dot{y}}{\sqrt{x^2+y^2}}\right| \leq 5</script><p>—&gt;</p><script type="math/tex; mode=display">|\vec v(t)|=|\dot{\vec r}(t)|=\left|\sqrt{\dot x^2+\dot y^2}\right| \leq 5</script><script type="math/tex; mode=display">|\vec a(t)|=|\ddot{\vec r}(t)|=\left|\sqrt{\ddot x^2+\ddot y^2}\right| \leq 1</script><p>并且当 $t=t_1,t_2,t_f$ 时分别满足</p><script type="math/tex; mode=display">\begin{aligned}& x(t_1),y(t_1)=(1,0) \\& x(t_2),y(t_2)=(1,1) \\& x(t_f),y(t_f)=(0,1) \\\end{aligned}</script><p>另外也可以约束在起点 $(0,0)$ 处和终点 $(0,1)$ 处的速度为0。下图所示为两种可能的质点运动轨迹<br><img src="https://img-blog.csdnimg.cn/direct/91ddd9dacebc46609839f7a366259d0e.png" alt="在这里插入图片描述"><br>可以看出，第三个点(1,1)的位置会影响前两个点之间的路线和移动时间。</p><h1 id="求解思路"><a href="#求解思路" class="headerlink" title="求解思路"></a>求解思路</h1><p>&emsp;&emsp;正确的方法应该是最优控制，但除了末端状态固定末端时刻自由的条件以外，还有很多中间点的约束，不知道能不能使用变分法求解。<br>&emsp;&emsp;机械臂路径规划使用的方法是使用3次多项式并用智能优化算法计算多项式系数，但智能优化算法速度较慢。</p><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><p>用下面的问题去问各种大语言模型，一般会得到两种方法。<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">there are 4 positions(points) on a plane, located at (0,0),(1,0),(1,1),(0,1) respectively, the question is design a route which start from (0,0) and end at (1,0), and go throuth (0,0),(1,0),(1,1),(0,1) in order, the constraints are as follows: the route line must be differentiable, a point moving on the line also has a limitted speed and accelerate, for example, the length of its speed vector satisfies</span><br><span class="line">$$|\dot&#123;r&#125;(t)|=|\vec v(t)|=\sqrt&#123;v<span class="emphasis">_x^2(t)+v_</span>y^2(t)&#125;\leq 5$$</span><br><span class="line">and the length of its acceleration vector satisfies</span><br><span class="line">$$|\ddot&#123;r&#125;(t)|=|\vec a(t)|=\sqrt&#123;a<span class="emphasis">_x^2(t)+a_</span>y^2(t)&#125;\leq 1$$</span><br><span class="line">how to design the route function $r(t)$ ?</span><br></pre></td></tr></table></figure><br>&emsp;&emsp;chatGPT给出的方法是贝塞尔曲线，但贝塞尔曲线无法满足最大速度和最大加速度的约束。新必应给出的样条函数的问题是只能处理单射的函数的情况，但上面图中从点 $(1,0)$ 到点 $(1,1)$ 就不是函数。所以在问题中使用参数方程 $x(t)$ 和 $y(t)$ 而不是单一的函数。其他大语言模型几乎给不出有价值的回答。<br>&emsp;&emsp;有一篇论文认为可以转化为凸二次规划问题用matlab求解，但没给出任何细节。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几个数学问题记录</title>
      <link href="/2024/08/03/%E5%87%A0%E4%B8%AA%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/08/03/%E5%87%A0%E4%B8%AA%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="飞蛾扑火问题"><a href="#飞蛾扑火问题" class="headerlink" title="飞蛾扑火问题"></a>飞蛾扑火问题</h1><script type="math/tex; mode=display">\begin{aligned}& dr=-rd\theta\sin(\frac{\pi}{2}-\alpha) \\& r=e^{-\theta\cos\alpha} \\\end{aligned}</script><h1 id="最速降线"><a href="#最速降线" class="headerlink" title="最速降线"></a>最速降线</h1><script type="math/tex; mode=display">\begin{aligned}& T=\int_{t_1}^{t_2}\frac{\text{d}s}{v}=\int_{x_1}^{x_2}\frac{\sqrt{1+y'^2}}{\sqrt{2gy}}\text{d}x \\& f(y,y')=\frac{\sqrt{1+y'^2}}{\sqrt{2gy}} \\& y(1+y'^2)=C \\&     \text{d}x=\sqrt{\frac{y}{2a-y}}\text{d}y    \xlongequal{y=a-az}-a\sqrt{\frac{1-z}{1+z}}\text{d}z    \xlongequal{z=\cos\theta}2a\sin^2\frac{\theta}{2}\text{d}\theta \\    x&=a(\theta-\sin\theta) \\    y&=a(1-\cos\theta)\end{aligned}</script><h1 id="悬链线"><a href="#悬链线" class="headerlink" title="悬链线"></a>悬链线</h1><h2 id="微分法"><a href="#微分法" class="headerlink" title="微分法"></a>微分法</h2><script type="math/tex; mode=display">\begin{aligned}& T\sin\theta=\rho gs,T\cos\theta=H \\& y'=\frac{1}{a}\int_0^x\sqrt{1+y'^2}\text{d}x \\& \frac{\text{d}p}{\text{d}x}=\frac{1}{a}\sqrt{1+p^2} \\& y=\frac{a}{2}(\text{e}^{\frac{x}{a}}+\text{e}^{-\frac{x}{a}}) \\\end{aligned}</script><h2 id="变分法"><a href="#变分法" class="headerlink" title="变分法"></a>变分法</h2><p><a href="https://zhuanlan.zhihu.com/p/148762023">续浅谈变分原理：运动常数、拉格朗日乘子法</a></p><h1 id="相同周长时圆的面积最大"><a href="#相同周长时圆的面积最大" class="headerlink" title="相同周长时圆的面积最大"></a>相同周长时圆的面积最大</h1><p>设从$(-r,0)$点到$(r,0)$点的曲线函数为$y(x)$，曲线长度为$L$，即在</p><script type="math/tex; mode=display">\int_{-r}^r\sqrt{1+y'^2}\text{d}x=L</script><p>的约束条件下，求</p><script type="math/tex; mode=display">J=\int_{-r}^ry\text{d}x</script><p>的最大值。<br>设</p><script type="math/tex; mode=display">z(x)=\int_{-r}^x\sqrt{1+y'^2}\text{d}x</script><p>则</p><script type="math/tex; mode=display">z'(x)=\sqrt{1+y'^2}</script><p>拉格朗日乘子法取</p><script type="math/tex; mode=display">H=y+\lambda(z'^2-y'^2-1)</script><p>则</p><script type="math/tex; mode=display">\begin{aligned}& \frac{\partial H}{\partial y}-\frac{\text{d}}{\text{d}x}\frac{\partial H}{\partial y'}=0 \\& 1=-2(\lambda y')' \\& \lambda y'=ax \\& \frac{\partial H}{\partial z}-\frac{\text{d}}{\text{d}x}\frac{\partial H}{\partial z'}=0 \\& \lambda z'=b \\& \frac{b^2}{\lambda^2}=\frac{a^2x^2}{\lambda^2}+1 \\& y'=\pm\frac{ax}{\sqrt{b^2-a^2x^2}} \\& y=\sqrt{\frac{b^2}{a^2}-x^2} \\\end{aligned}</script><p>代入$y(-r)=y(r)=0$得$y=\sqrt{r^2-x^2}$。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>带遗忘因子的递推最小二乘法推导</title>
      <link href="/2024/08/03/%E5%B8%A6%E9%81%97%E5%BF%98%E5%9B%A0%E5%AD%90%E7%9A%84%E9%80%92%E6%8E%A8%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E6%8E%A8%E5%AF%BC/"/>
      <url>/2024/08/03/%E5%B8%A6%E9%81%97%E5%BF%98%E5%9B%A0%E5%AD%90%E7%9A%84%E9%80%92%E6%8E%A8%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E6%8E%A8%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<p><strong>摘要：</strong> 首先，已知最小二乘法的解后，推导出解的递推形式；然后通过一个简单的公式y=x+w的形式引入遗忘因子，并改写成递推形式，最后将遗忘因子引入带递推的最小二乘法中。</p><h1 id="递推最小二乘法"><a href="#递推最小二乘法" class="headerlink" title="递推最小二乘法"></a>递推最小二乘法</h1><p>对多组数据 $\vec{x}_i$ 和 $y_i$，满足</p><script type="math/tex; mode=display">y_i = \vec{x}^\mathrm{T}_i\vec{\theta}</script><p>其中 $\vec{x}_i$ 是输入数据向量，$y_i$ 是输出数据标量。写成矩阵形式</p><script type="math/tex; mode=display">\vec{y} = X\vec{\theta}</script><p>其中（以3组数据、2个未知参数为例）</p><script type="math/tex; mode=display">\vec{y} = \begin{bmatrix}    y_1 \\ y_2 \\ y_3\end{bmatrix},X = \begin{bmatrix}    \vec{x}^\mathrm{T}_1 \\    \vec{x}^\mathrm{T}_2 \\    \vec{x}^\mathrm{T}_3\end{bmatrix},\theta = \begin{bmatrix}    \theta_1 \\ \theta_2\end{bmatrix},y_i=x_{i1}\theta_1+x_{i2}\theta_2</script><p>完整地写作（以3组数据、2个未知参数为例）</p><script type="math/tex; mode=display">\begin{bmatrix}    y_1 \\ y_2 \\ y_3\end{bmatrix}=\begin{bmatrix}    x_{11} & x_{12} \\    x_{21} & x_{22} \\    x_{31} & x_{32} \\\end{bmatrix}\begin{bmatrix}    \theta_1 \\ \theta_2\end{bmatrix}</script><p>有$k$组数据时记作</p><script type="math/tex; mode=display">    X^\mathrm{T}_k = \begin{bmatrix}        \vec{x}_1 & \vec{x}_2 & \cdots & \vec{x}_k    \end{bmatrix} \\    \vec{y}_k=\begin{bmatrix} y_1 & y_2 & \cdots & y_k\end{bmatrix}</script><p>(此时注意区分一些符号，例如 $\vec{y}_k$ 与 $y_k$，$X$ 与 $\vec{x}$ 等)<br>已知最小二乘法的解为</p><script type="math/tex; mode=display">    \vec{\theta}    =(X^\mathrm{T}X)^{-1}    X^\mathrm{T}\vec{y} \tag{1}</script><p>令 $P = (X^\mathrm{T}X)^{-1}$，<br>则加上递推后</p><script type="math/tex; mode=display">\begin{aligned}    P_k^{-1} =& X_k^\mathrm{T}X_k    = \sum_{i=1}^k\vec{x}_i\vec{x}^\mathrm{T}_i\\    =& \sum_{i=1}^{k-1}\vec{x}_i\vec{x}^\mathrm{T}_i    +\vec{x}_k\vec{x}^\mathrm{T}_k \\    =& P_{k-1}^{-1} + \vec{x}_k\vec{x}_k^\mathrm{T}\end{aligned} \tag{2}</script><p>同理可得</p><script type="math/tex; mode=display">    X_k^\mathrm{T}\vec{y}_k    =X_{k-1}^\mathrm{T}\vec{y}_{k-1}    +\vec{x}_ky_k \tag{3}</script><p>于是代入式(1)得到</p><script type="math/tex; mode=display">\begin{aligned}    \vec{\theta}_k =& P_kX_k^\mathrm{T}\vec{y}_k \\    =& P_k(X_{k-1}^\mathrm{T}\vec{y}_{k-1}    +\vec{x}_ky_k) \\    =& P_k(P_{k-1}^{-1}\vec{\theta}_{k-1}    +\vec{x}_ky_k) \\    =& P_k(P_k^{-1}\vec{\theta}_{k-1}    -\vec{x}_k\vec{x}_k^\mathrm{T}\theta_{k-1}+\vec{x}_ky_k) \\    =& \vec{\theta}_{k-1} + P_k\vec{x}_k    (y_k-\vec{x}_k^\mathrm{T}\theta_{k-1}) \\    =& \vec{\theta}_{k-1}    +(P_{k-1}^{-1} + \vec{x}_k\vec{x}_k^\mathrm{T})^{-1}    \vec{x}_k(y_k-\vec{x}_k^\mathrm{T}\theta_{k-1}) \\    =& \vec{\theta}_{k-1}    +(P_{k-1}-\frac{P_{k-1}\vec{x}_k\vec{x}_k^\mathrm{T}    P_{k-1}}{1+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k})    \vec{x}_k(y_k-\vec{x}_k^\mathrm{T}\theta_{k-1}) \\\end{aligned}</script><p>其中倒数第3行到倒数第一行的过程</p><script type="math/tex; mode=display">    P_k = P_{k-1}-\frac{P_{k-1}\vec{x}_k\vec{x}_k^\mathrm{T}    P_{k-1}}{1+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k}</script><p>用到了下面的矩阵求逆公式及其引理</p><script type="math/tex; mode=display">\begin{aligned}    (A+BCD)^{-1} =& A^{-1}-A^{-1} B    (DA^{-1}B+C^{-1})^{-1}DA^{-1} \\    (A+\vec{u}\vec{u}^\text{T})^{-1} =& A^{-1}    -\frac{A^{-1}\vec{u}\vec{u}^\text{T} A^{-1}}    {1+\vec{u}^\text{T}A^{-1}\vec{u}}\end{aligned}</script><p>令</p><script type="math/tex; mode=display">    K_k = \frac{P_{k-1}\vec{x}_k}    {1+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k}</script><p>则</p><script type="math/tex; mode=display">\begin{aligned}    P_k =& (I-K_k\vec{x}_k^\mathrm{T})P_{k-1}\\    P_k\vec{x}_k =& P_{k-1}\vec{x}_k    -K_k\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k \\    =& \frac{P_{k-1}\vec{x}_k    (1+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k)    -P_{k-1}\vec{x}_k\vec{x}_k^\mathrm{T}    P_{k-1}\vec{x}_k}    {1+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k} \\    =& \frac{P_{k-1}\vec{x}_k}    {1+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k} \\    =& K_k \\\end{aligned}</script><p>总结成递推公式得到</p><script type="math/tex; mode=display">\begin{aligned}    K_k =& \frac{P_{k-1}\vec{x}_k}{1+\vec{x}_k^\mathrm{T}    P_{k-1}\vec{x}_k}\\    P_k =& (I-K_k\vec{x}_k^\mathrm{T})P_{k-1} \\    \vec{\theta}_k =& \vec{\theta}_{k-1}    +K_k(y_k-\vec{x}_k^\mathrm{T}\theta_{k-1})\end{aligned}</script><h1 id="一些注意事项"><a href="#一些注意事项" class="headerlink" title="一些注意事项"></a>一些注意事项</h1><p>&emsp;&emsp;因为 $P=(X^\text{T}X)^{-1}$，$\vec{x}_1\vec{x}_1^\text{T}$ 一般很小，所以实际使用时一般把 $P_1$ 初始化为一个接近无穷大的单位阵。<br>&emsp;&emsp;可以看出 $P$ 是个对称矩阵，如果因为数值计算的原因导致 $P$ 不严格对称时，代码里需要加一步：$P\leftarrow(P+P^\text{T})/2$。</p><h1 id="引入遗忘因子"><a href="#引入遗忘因子" class="headerlink" title="引入遗忘因子"></a>引入遗忘因子</h1><p>先考虑一个比较简单的情况</p><script type="math/tex; mode=display">x_n=\theta+w_n</script><p>其中 $\theta$ 是要估计的参数，$w_n$ 是高斯白噪声，$x_n$ 是观测到的数据，总共有 $N$ 组数据，将 $N$ 组数据取平均得到 $\theta$ 的一个估计值为</p><script type="math/tex; mode=display">\hat{\theta}=\frac{1}{N}\sum_{n=1}^Nx_n</script><p>写成递推形式为</p><script type="math/tex; mode=display">\hat\theta_n=\hat\theta_{n-1}+\frac{1}{n}(x_n-\hat\theta_{n-1})</script><p>例如，</p><script type="math/tex; mode=display">\begin{aligned}    \hat\theta_1 =& x_1\\    \hat\theta_2 =& \hat\theta_1+\frac{1}{2}(x_2-\hat\theta_1)    =\frac{1}{2}(x_1+x_2) \\    \hat\theta_3 =& \hat\theta_2+\frac{1}{3}(x_3-\hat\theta_2)    =\frac{1}{3}(x_1+x_2+x_3) \\\end{aligned}</script><p>现在对之前的值乘一个衰减系数 $\lambda\in(0,1)$，也就是</p><script type="math/tex; mode=display">\begin{aligned}    \hat\theta_2 =& \frac{1}{\lambda+1}(\lambda x_1+x_2) \\    \hat\theta_3 =& \frac{1}{\lambda^2+\lambda+1}(\lambda^2x_1+\lambda x_2+x_3) \\    \vdots\end{aligned}</script><p>写成递推形式为</p><script type="math/tex; mode=display">\begin{aligned}    \hat\theta_2=&\frac{1}{\lambda+1}(\lambda x_1+x_2) \\    \hat\theta_3=&\frac{1}{\lambda^2+\lambda+1}(\lambda(\lambda+1)\hat\theta_2+x_3) \\    =&\hat\theta_2+\frac{1}{\lambda^2+\lambda+1}(x_3-\hat\theta_2)\end{aligned}</script><p>当 $n\rightarrow\infty$ 时，递推形式可以近似为</p><script type="math/tex; mode=display">\begin{aligned}    \hat{\theta}_n =& \hat\theta_{n-1}+\frac{1}{\sum_{n=0}^{N-1}\lambda^{n}}(x_n-\hat\theta_{n-1}) \\    =& \hat\theta_{n-1}+(1-\lambda)(x_n-\hat\theta_{n-1})\end{aligned}</script><h1 id="递推最小二乘中的遗忘因子"><a href="#递推最小二乘中的遗忘因子" class="headerlink" title="递推最小二乘中的遗忘因子"></a>递推最小二乘中的遗忘因子</h1><p>类似地，在最小二乘的误差 $S_i=||y_i-\vec{x}_i^\text{T}\vec\theta||^2$ 中加入遗忘因子，得到总误差（以3组数据为例）</p><script type="math/tex; mode=display">J_3=\lambda^2S_1+\lambda S_2+S_3</script><p>完整的方程可以写作</p><script type="math/tex; mode=display">\vec{y}_3=X_3\theta \\\begin{bmatrix}    \lambda y_1 \\ \sqrt{\lambda}y_2 \\ y_3\end{bmatrix}=\begin{bmatrix}    \lambda x_{11} & \lambda x_{12} \\    \sqrt{\lambda}x_{21} & \sqrt{\lambda}x_{22} \\    x_{31} & x_{32} \\\end{bmatrix}\begin{bmatrix}    \theta_1 \\ \theta_2\end{bmatrix}</script><p>类似地代入最小二乘的解式(1)，并求式(2)(3)的递推形式</p><script type="math/tex; mode=display">\begin{aligned}X_2^\text{T}X_2 =& \begin{bmatrix}\sqrt{\lambda}x_{11} & x_{21} \\\sqrt{\lambda}x_{12} & x_{22} \\\end{bmatrix}\begin{bmatrix}\sqrt{\lambda}x_{11} & \sqrt{\lambda} x_{12} \\x_{21} & x_{22}\end{bmatrix} \\X_3^\text{T}X_3 =& \begin{bmatrix}\lambda x_{11} & \sqrt{\lambda}x_{21} & x_{31} \\\lambda x_{12} & \sqrt{\lambda}x_{22} & x_{32} \\\end{bmatrix}\begin{bmatrix}\lambda x_{11} & \lambda x_{12} \\\sqrt{\lambda}x_{21} & \sqrt{\lambda} x_{22} \\x_{31} & x_{32}\end{bmatrix} \\=& \lambda X_2^\text{T}X_2 + \vec{x}_3\vec{x}_3^\text{T} \\X_2^\text{T}\vec{y}_2 =& \begin{bmatrix}\sqrt{\lambda}x_{11} & x_{21} \\\sqrt{\lambda}x_{12} & x_{22} \\\end{bmatrix}\begin{bmatrix}\sqrt{\lambda}y_1 \\ y_2\end{bmatrix} \\X_3^\text{T}\vec{y}_3 =& \begin{bmatrix}\lambda x_{11} & \sqrt{\lambda}x_{21} & x_{31} \\\lambda x_{12} & \sqrt{\lambda}x_{22} & x_{32} \\\end{bmatrix}\begin{bmatrix}\lambda y_1 \\ \sqrt{\lambda}y_2 \\ y_3\end{bmatrix} \\=& \lambda X_2^\text{T}\vec{y}_2 + \vec{x}_3y_3\end{aligned}</script><p>即</p><script type="math/tex; mode=display">\begin{aligned}P_k^{-1} =& \lambda P_{k-1}^{-1} + \vec{x}_k\vec{x}_k^\text{T} \\X_k^\text{T}\vec{y}_k =& \lambda X_{k-1}^\text{T}\vec{y}_{k-1} + \vec{x}_ky_k\end{aligned}</script><p>代入式(1)得到</p><script type="math/tex; mode=display">\begin{aligned}\vec{\theta}_k =& P_kX_k^\text{T}\vec{y}_k \\=& P_k(\lambda X_{k-1}^\text{T}\vec{y}_{k-1} + \vec{x}_ky_k) \\=& P_k(\lambda P_{k-1}^{-1}\vec{\theta}_{k-1} + \vec{x}_ky_k) \\=& P_k(P_k^{-1}\vec{\theta}_{k-1}-\vec{x}_k\vec{x}_k^\text{T}\theta_{k-1}+\vec{x}_ky_k) \\=& \vec\theta_{k-1} + P_k\vec{x}_k(y_k-\vec{x}_k^\text{T}\theta_{k-1}) \\=& \vec\theta_{k-1} + (\lambda P_{k-1}^{-1} + \vec{x}_k\vec{x}_k^\text{T})^{-1}\vec{x}_k(y_k-\vec{x}_k^\text{T}\theta_{k-1}) \\=& \vec\theta_{k-1}+(\frac{P_{k-1}}{\lambda}-\frac{\frac{P_{k-1}}{\lambda}\vec{x}_k\vec{x}_k^\text{T}\frac{P_{k-1}}{\lambda}}{1+\vec{x}_k^\text{T}\frac{P_{k-1}}{\lambda}\vec{x}_k})\vec{x}_k(y_k-\vec{x}_k^\text{T}\theta_{k-1}) \\=& \vec\theta_{k-1}+(\frac{P_{k-1}}{\lambda}-\frac{1}{\lambda}\frac{P_{k-1}\vec{x}_k\vec{x}_k^\text{T}P_{k-1}}{\lambda + \vec{x}_k^\text{T}P_{k-1}\vec{x}_k})\vec{x}_k(y_k-\vec{x}_k^\text{T}\theta_{k-1}) \\\end{aligned}</script><p>令</p><script type="math/tex; mode=display">K_k = \frac{P_{k-1}\vec{x}_k}{\lambda+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k}</script><p>则</p><script type="math/tex; mode=display">\begin{aligned}P_k =& \frac{1}{\lambda}(I-K_k\vec{x}_k^\mathrm{T})P_{k-1}\\P_k\vec{x}_k =& \frac{1}{\lambda}(P_{k-1}\vec{x}_k-K_k\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k) \\=& \frac{1}{\lambda}\frac{P_{k-1}\vec{x}_k(\lambda+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k)-P_{k-1}\vec{x}_k\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k}{\lambda+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k} \\=& \frac{1}{\lambda}\frac{P_{k-1}\vec{x}_k\lambda}{\lambda+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k} \\=& K_k \\\end{aligned}</script><p>总结成递推公式得到</p><script type="math/tex; mode=display">\begin{aligned}K_k =& \frac{P_{k-1}\vec{x}_k}{\lambda+\vec{x}_k^\mathrm{T}P_{k-1}\vec{x}_k}\\P_k =& \frac{1}{\lambda}(I-K_k\vec{x}_k^\mathrm{T})P_{k-1} \\\vec{\theta}_k =& \vec{\theta}_{k-1}+K_k(y_k-\vec{x}_k^\mathrm{T}\theta_{k-1})\end{aligned}</script><p>与不带遗忘因子的公式相比，第3个式子 $\vec{\theta}_k$ 不变，前两个稍微有变化。</p><h1 id="一个例子与代码"><a href="#一个例子与代码" class="headerlink" title="一个例子与代码"></a>一个例子与代码</h1><p>&emsp;&emsp;对方程 $y=ax^2+bx+c$，输入多组数据，$x$ 取一些高斯噪声，以4组数据为例，</p><script type="math/tex; mode=display">\begin{bmatrix}    y_1 \\ y_2 \\ y_3 \\ y_4\end{bmatrix}=\begin{bmatrix}    x_1^2 & x_1 & 1 \\    x_2^2 & x_2 & 1 \\    x_3^2 & x_3 & 1 \\    x_4^2 & x_4 & 1 \\\end{bmatrix}\begin{bmatrix}    a \\ b \\ c\end{bmatrix}</script><p>代码使用了自用的矩阵运算库<code>zhnmat</code>，见 <a href="https://blog.csdn.net/qq_34288751/article/details/129314145">自用的矩阵运算库zhnmat使用说明</a><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;zhnmat.hpp&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> zhnmat;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constexpr</span> <span class="type">double</span> a = <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">constexpr</span> <span class="type">double</span> b = <span class="number">1.1</span>;</span><br><span class="line">    <span class="keyword">constexpr</span> <span class="type">double</span> c = <span class="number">2.1</span>;</span><br><span class="line">    <span class="type">double</span> U, V, randx;</span><br><span class="line">    <span class="type">double</span> y, lambda=<span class="number">0.5</span>;</span><br><span class="line">    Mat K;</span><br><span class="line">    <span class="function">Mat <span class="title">vx</span><span class="params">(<span class="number">3</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">    Mat P = <span class="built_in">eye</span>(<span class="number">3</span>)*<span class="number">1e6</span>;</span><br><span class="line">    <span class="function">Mat <span class="title">theta</span><span class="params">(<span class="number">3</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        U = (<span class="built_in">rand</span>()<span class="number">+1.0</span>) / (RAND_MAX<span class="number">+1.0</span>);</span><br><span class="line">        V = (<span class="built_in">rand</span>()<span class="number">+1.0</span>) / (RAND_MAX<span class="number">+1.0</span>);</span><br><span class="line">        randx = <span class="built_in">sqrt</span>(<span class="number">-2.0</span> * <span class="built_in">log</span>(U))* <span class="built_in">cos</span>(<span class="number">6.283185307179586477</span> * V);  <span class="comment">// `randx`服从标准正态分布</span></span><br><span class="line">        randx *= <span class="number">2</span>;</span><br><span class="line">        vx.<span class="built_in">set</span>(<span class="number">0</span>, <span class="number">0</span>, randx*randx);</span><br><span class="line">        vx.<span class="built_in">set</span>(<span class="number">1</span>, <span class="number">0</span>, randx);</span><br><span class="line">        vx.<span class="built_in">set</span>(<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        y = a*randx*randx + b*randx + c;</span><br><span class="line">        K = P * vx / (lambda + (vx.<span class="built_in">T</span>() * P * vx).<span class="built_in">at</span>(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        P = (<span class="built_in">eye</span>(<span class="number">3</span>) - K * vx.<span class="built_in">T</span>()) * P / lambda;</span><br><span class="line">        theta = theta + K * (y - (vx.<span class="built_in">T</span>() * theta).<span class="built_in">at</span>(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;theta&quot;</span> &lt;&lt; theta &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵求导的几个实际应用例子</title>
      <link href="/2024/08/03/%E7%9F%A9%E9%98%B5%E6%B1%82%E5%AF%BC%E7%9A%84%E5%87%A0%E4%B8%AA%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%BE%8B%E5%AD%90/"/>
      <url>/2024/08/03/%E7%9F%A9%E9%98%B5%E6%B1%82%E5%AF%BC%E7%9A%84%E5%87%A0%E4%B8%AA%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%BE%8B%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>如果约定所有的向量均为列向量，那么我认为矩阵求导在实际使用中就没有必要讨论行布局或者列布局，因为导数的推导过程和结果就决定了矩阵求导公式是唯一的。<br>大部分情况二阶矩阵或二维向量足以说明问题，剩下的到三阶也够了，不会出现低阶成立而高阶不成立的情况，所以下面举的例子均为三阶及以下。<br>若无特别说明，细斜体(如$J$)表示标量，粗斜体小写(如$\boldsymbol{x}$)表示向量，粗正体大写(如$\mathbf{A}$)表示矩阵。</p><h1 id="损失函数与梯度下降法"><a href="#损失函数与梯度下降法" class="headerlink" title="损失函数与梯度下降法"></a>损失函数与梯度下降法</h1><script type="math/tex; mode=display">    J=\frac{1}{2}(\boldsymbol{y}-\hat{\boldsymbol{y}}(\boldsymbol{x}))^{\top}    (\boldsymbol{y}-\hat{\boldsymbol{y}}(\boldsymbol{x}))</script><p>其中$J$是标量损失值，$\boldsymbol{x}$是待优化参数，其梯度下降法更新公式为</p><script type="math/tex; mode=display">\boldsymbol{x}'=-\gamma\frac{\partial J}{\partial\boldsymbol{x}}</script><p>为简化问题而可以令$\gamma=1$。$\hat{y}$与$x$的函数关系决定了矩阵的导数应该怎么求。按照导数定义先求$\Delta J$</p><script type="math/tex; mode=display">\begin{aligned}    2\Delta J &= (\boldsymbol{y}-(\hat{\boldsymbol{y}}+\Delta\boldsymbol{y}))^{\top}    (\boldsymbol{y}-(\hat{\boldsymbol{y}}+\Delta\boldsymbol{y}))    -(\boldsymbol{y}-\hat{\boldsymbol{y}})^{\top}(\boldsymbol{y}-\hat{\boldsymbol{y}}) \\    &= \Delta\boldsymbol{y}^{\top}\Delta\boldsymbol{y}    -\Delta\boldsymbol{y}^{\top}(\boldsymbol{y}-\hat{\boldsymbol{y}})    -(\boldsymbol{y}-\hat{\boldsymbol{y}})^{\top}\Delta\boldsymbol{y} \\    &= -2(\boldsymbol{y}-\hat{\boldsymbol{y}})^{\top}\Delta\boldsymbol{y} \\\end{aligned}</script><p>令$\boldsymbol{e}=\boldsymbol{y}-\hat{\boldsymbol{y}}$，则</p><script type="math/tex; mode=display">\Delta J=-\boldsymbol{e}^{\top}\Delta\boldsymbol{y}</script><ol><li>$\boldsymbol{y}=\mathbf{A}\boldsymbol{x}$</li></ol><script type="math/tex; mode=display">\begin{aligned}    \Delta y_1=a_{11}\Delta x_1+a_{12}\Delta x_2 \\    \Delta y_2=a_{21}\Delta x_1+a_{22}\Delta x_2 \\\end{aligned}</script><p>于是</p><script type="math/tex; mode=display">\begin{aligned}    \Delta \boldsymbol{y} &= \mathbf{A}\Delta \boldsymbol{x} \\    \Delta J &= -\boldsymbol{e}^{\top}\mathbf{A}\Delta \boldsymbol{x} \\\end{aligned}</script><p>把$\Delta J$拆开得到梯度下降法更新公式</p><script type="math/tex; mode=display">\begin{aligned}    x_1' &= -\frac{\partial J}{\partial x_1}=e_1a_{11}+e_2a_{21} \\    x_2' &= -\frac{\partial J}{\partial x_2}=e_1a_{12}+e_2a_{22} \\\end{aligned}</script><p>写成矩阵形式得</p><script type="math/tex; mode=display">\boldsymbol{x}'=\mathbf{A}^{\top}\boldsymbol{e}</script><ol><li>$\boldsymbol{y}=\boldsymbol{a}^{\top}\mathbf{X}\boldsymbol{b}$<script type="math/tex; mode=display">\left[\begin{matrix} y_1 \\ y_2\end{matrix}\right]=\left[\begin{matrix} a_1 & a_2 & a_3\end{matrix}\right]\left[\begin{matrix} x_{11} & x_{12} \\ x_{21} & x_{22} \\ x_{31} & x_{32} \\\end{matrix}\right]\left[\begin{matrix} b_1 \\ b_2\end{matrix}\right]</script></li></ol><h1 id="非线性系统的线性化"><a href="#非线性系统的线性化" class="headerlink" title="非线性系统的线性化"></a>非线性系统的线性化</h1><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>有的直接是pdf文件，注意分辨。<br><a href="https://zhuanlan.zhihu.com/p/24709748">矩阵求导术(上)</a><br><a href="https://github.com/soloice/Matrix_Derivatives">matrix vector derivatives for machine learning</a><br><a href="http://www.matrixcalculus.org/">Matrix Calculus</a><br><a href="https://project.hupili.net/tutorial/hu2012-matrix-calculus/hu2012matrix-calculus.pdf">Matrix Calculus: Derivation and Simple Application</a><br><a href="http://paulklein.ca/newsite/teaching/matrix%20calculus.pdf">Matrix Calculus - Notes on the Derivative of a Trace</a><br><a href="http://cs229.stanford.edu/notes2021fall/cs229-notes1.pdf">CS229 Lecture Notes</a><br><a href="http://cal.cs.illinois.edu/~johannes/research/matrix%20calculus.pdf">matrix calculus</a><br><a href="https://zhuanlan.zhihu.com/p/475364267">关于Machine Learning中的基础数学推导值得一看的文章(持续更新)</a><br><a href="https://tminka.github.io/papers/matrix/">Old and New Matrix Algebra Useful for Statistics</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>球面几何</title>
      <link href="/2024/08/03/%E7%90%83%E9%9D%A2%E5%87%A0%E4%BD%95/"/>
      <url>/2024/08/03/%E7%90%83%E9%9D%A2%E5%87%A0%E4%BD%95/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/direct/05d2b93cfe9d4881af0e6cad4e4c385b.png" alt="在这里插入图片描述"><br>正弦定理</p><script type="math/tex; mode=display">\frac{\sin A}{\sin a}=\frac{\sin B}{\sin b}=\frac{\sin C}{\sin c}</script><p>余弦定理</p><script type="math/tex; mode=display">\cos a=\cos b\cos c+\sin b\sin c\cos A</script><p>两点间的球面距离</p><script type="math/tex; mode=display">\cos\overset{\frown}{AB}=\cos A_w\cos B_w\cos(B_j-A_j)+\sin A_w\sin B_w</script><p>其中，$A_j,A_w$ 分别表示 $A$ 点的经度、纬度。</p><h1 id="画圆弧的方法"><a href="#画圆弧的方法" class="headerlink" title="画圆弧的方法"></a>画圆弧的方法</h1><p>给定两个点计算这两个点之间的所有点。</p><ol><li>计算两点间的球面距离</li><li></li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.zhihu.com/question/382038661/answer/1101649342">怎么证明球面上两点间最短距离是大圆劣弧？ -知乎</a><br><a href="https://blog.csdn.net/GarfieldEr007/article/details/50801789">球面三角基本名称及性质、基本定理和公式、解法 -CSDN博客</a><br><a href="https://en.wikipedia.org/wiki/Spherical_trigonometry">Spherical trigonometry -Wikipedia</a><br><a href="https://zhuanlan.zhihu.com/p/42948839">根据经纬度计算两点间的球面距离 -知乎</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线html调试</title>
      <link href="/2024/07/11/%E5%9C%A8%E7%BA%BFhtml%E8%B0%83%E8%AF%95/"/>
      <url>/2024/07/11/%E5%9C%A8%E7%BA%BFhtml%E8%B0%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件在线转换格式（自用）</title>
      <link href="/2024/07/10/%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2/"/>
      <url>/2024/07/10/%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.freeconvert.com/zh/"><strong>FreeConvert</strong></a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片在线压缩网站（自用）</title>
      <link href="/2024/07/10/%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/"/>
      <url>/2024/07/10/%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://freecompress.com/zh-cn/compress-image"><strong>Freecompress</strong></a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 壁纸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Microsoft 365并成功激活</title>
      <link href="/2024/07/10/%E4%BD%BF%E7%94%A8otp%E9%83%A8%E7%BD%B2office/"/>
      <url>/2024/07/10/%E4%BD%BF%E7%94%A8otp%E9%83%A8%E7%BD%B2office/</url>
      
        <content type="html"><![CDATA[<p>进入<a href="https://otp.landian.vip/zh-cn/">Office Tool Plus 官网</a>下载并安装<br>以下是一些官网教程</p><blockquote><p><a href="https://www.coolhub.top/archives/11">安装 Office</a><br><a href="https://www.coolhub.top/archives/14">激活 Office</a><br><a href="https://www.coolhub.top/archives/13">疑难解答</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Office Tool Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Office Tool Plus </tag>
            
            <tag> Microsoft 365 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows下安装ubuntu，实现双系统</title>
      <link href="/2024/07/10/ubuntu/"/>
      <url>/2024/07/10/ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Windows和Ubuntu双系统教程"><a href="#安装Windows和Ubuntu双系统教程" class="headerlink" title="安装Windows和Ubuntu双系统教程"></a>安装Windows和Ubuntu双系统教程</h1><p>这里暂时没什么内容，因为我懒得更新</p>]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高质量壁纸网站</title>
      <link href="/2024/07/09/%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
      <url>/2024/07/09/%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<style>#web_bg{  background: url(/pictures/bg.jpg)!important;  background-position: center !important;  background-size: cover !important;  background-repeat: no-repeat !important;}</style><ol><li><a href="https://wallhaven.cc/"><strong>wallhaven</strong></a></li><li><a href="https://wallpaperscraft.com/"><strong>wallpaperscraft</strong></a></li><li><a href="https://wallroom.io/"><strong>wallroom</strong></a></li><li><a href="https://wallpapercave.com/"><strong>wallpaper cave</strong></a></li><li><a href="https://unsplash.com/"><strong>Unsplash</strong></a></li><li><a href="https://www.gamewallpapers.com/"><strong>gamewallpapers</strong></a></li><li><a href="https://bz.zzzmh.cn/index"><strong>极简壁纸</strong></a></li><li><a href="https://pixabay.com/zh/"><strong>pixabay</strong></a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 壁纸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLite 笔记</title>
      <link href="/2024/07/07/sqlite/"/>
      <url>/2024/07/07/sqlite/</url>
      
        <content type="html"><![CDATA[<h1 id="SQLite-笔记"><a href="#SQLite-笔记" class="headerlink" title="SQLite 笔记"></a>SQLite 笔记</h1><p>SQLite C++依赖库:<br><a href="https://github.com/SRombauts/SQLiteCpp">https://github.com/SRombauts/SQLiteCpp</a>  </p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.runoob.com/sqlite/sqlite-tutorial.html">SQLite 教程 -菜鸟教程</a><br><a href="https://www.sqlite.org/download.html">SQLite Download Page</a><br><a href="https://sqlite.readdevdocs.com/">SQLite中文网</a><br><a href="https://sqlitebrowser.org/">DB Browser for SQLite</a><br><a href="https://www.jianshu.com/p/562576ec138c">感受一下C++操作SQLite有多麻烦 -简书</a><br><a href="https://blog.csdn.net/hbsyaaa/article/details/127858034">玩转SQLite-11：C语言高效API之sqlite3_prepare系列函数 -CSDN博客</a><br><a href="https://www.yiibai.com/sqlite/primary-key.html">SQLite主键</a><br><a href="https://blog.csdn.net/gymaisyl/article/details/108404902">Sqlite数据库-使用的查询语句大全 -CSDN博客</a><br><a href="https://geek-docs.com/sqlite">SQLite 教程 -极客教程</a>  </p><h2 id="语法笔记"><a href="#语法笔记" class="headerlink" title="语法笔记"></a>语法笔记</h2><div class="table-container"><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>打开文件（cmd）</td><td>sqlite3 filename.db</td></tr><tr><td>打开文件（sql）</td><td>.open filename.db</td></tr><tr><td>退出</td><td>.exit</td></tr><tr><td>列出所有表格</td><td>.tables</td></tr><tr><td>列出表格的键</td><td>.schema tablename</td></tr><tr><td>显示模式</td><td>.header on  \  .mode column</td></tr><tr><td>创建表格</td><td>CREATE TABLE tablename;</td></tr><tr><td>删除表格</td><td>DROP TABLE tablename;</td></tr><tr><td>清空表格</td><td>DELETE FROM sqlite_sequence WHERE name = ‘tablename’;</td></tr><tr><td>修改表格名称</td><td>ALTER TABLE table_name RENAME TO new_table_name;</td></tr><tr><td>添加列</td><td>ALTER TABLE tablename ADD COLUMN columnname INTEGER DEFAULT 0;</td></tr><tr><td>增</td><td>INSERT INTO tablename VALUES (7, ‘James’, 24, ‘Houston’, 10000.00 );</td></tr><tr><td>删</td><td>DELETE FROM tablename WHERE rowid=valuename;</td></tr><tr><td>改</td><td>UPDATE tablename SET columnname=valuename WHERE conditionname;</td></tr><tr><td>查</td><td>SELECT * FROM tablename;</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> SQLite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学 </tag>
            
            <tag> SQLite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客网站搭建过程</title>
      <link href="/2024/07/07/process/"/>
      <url>/2024/07/07/process/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建记录"><a href="#搭建记录" class="headerlink" title="搭建记录"></a>搭建记录</h1><p>这篇文章的内容为本站的搭建过程，省略一些修改图片路径等简易操作</p><h2 id="1-初始化Hexo项目"><a href="#1-初始化Hexo项目" class="headerlink" title="1.初始化Hexo项目"></a>1.初始化Hexo项目</h2><p>在新的文件夹中打开终端，输入以下<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><h2 id="2-安装初始依赖库"><a href="#2-安装初始依赖库" class="headerlink" title="2.安装初始依赖库"></a>2.安装初始依赖库</h2><p>接着输入<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><br>通过这个使博客内容可以正常显示</p><h2 id="3-将博客挂载到github-pages"><a href="#3-将博客挂载到github-pages" class="headerlink" title="3.将博客挂载到github pages"></a>3.将博客挂载到github pages</h2><p>随后安装hexo-deployer-git使博客能够上传到github<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br>（在此之后，在_config.yml中修改deploy内容，这里省略）</p><h2 id="4-安装butterfly主题"><a href="#4-安装butterfly主题" class="headerlink" title="4.安装butterfly主题"></a>4.安装butterfly主题</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>随后安装渲染器<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><br>在此之后将_config.yml中的theme改为butterfly<br>并且将language改为zh-CN</p><h2 id="5-文章显示"><a href="#5-文章显示" class="headerlink" title="5.文章显示"></a>5.文章显示</h2><p>修改主题配置文件_config.butterfly.yml中的post_meta<br>date_type均改为both<br>date_format均改为relative</p><h2 id="6-本地搜索"><a href="#6-本地搜索" class="headerlink" title="6.本地搜索"></a>6.本地搜索</h2><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><br>_config.yml中加入<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br>_config.butterfly.yml中local_search的enable改为true</p><h2 id="7-字数统计"><a href="#7-字数统计" class="headerlink" title="7.字数统计"></a>7.字数统计</h2><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><br>_config.butterfly.yml中wordcount的enable改为true</p><h2 id="8-鼠标点击效果"><a href="#8-鼠标点击效果" class="headerlink" title="8.鼠标点击效果"></a>8.鼠标点击效果</h2><p>_config.butterfly.yml中fireworks或者Heart symbol或者words的enable改为true</p><h2 id="9-修改为一图流"><a href="#9-修改为一图流" class="headerlink" title="9.修改为一图流"></a>9.修改为一图流</h2><p>首先在source文件夹内新建css文件夹，并新建custom.css写入以下代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 页脚与头图透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page-header</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 白天模式遮罩透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式遮罩透明 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>随后在_config.butterfly.yml文件中的inject配置项的head子项加入以下代码<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="10-页脚徽标"><a href="#10-页脚徽标" class="headerlink" title="10.页脚徽标"></a>10.页脚徽标</h2><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-footer-beautify --save</span><br></pre></td></tr></table></figure><br>在站点配置文件_config.yml或者主题配置文件_config.butterfly.yml中添加（这是我的配置）<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># footer_beautify</span></span><br><span class="line"><span class="comment"># 页脚计时器：[Native JS Timer](https://akilar.top/posts/b941af/)</span></span><br><span class="line"><span class="comment"># 页脚徽标：[Add Github Badge](https://akilar.top/posts/e87ad7f8/)</span></span><br><span class="line"><span class="attr">footer_beautify:</span></span><br><span class="line">  <span class="attr">enable:</span></span><br><span class="line">    <span class="attr">timer:</span> <span class="literal">true</span> <span class="comment"># 计时器开关</span></span><br><span class="line">    <span class="attr">bdage:</span> <span class="literal">true</span> <span class="comment"># 徽标开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="comment">#屏蔽页面</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">footer-wrap</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># 计时器部分配置项</span></span><br><span class="line">  <span class="attr">runtime_js:</span> <span class="string">/js/runtime.js</span></span><br><span class="line">  <span class="attr">runtime_css:</span> <span class="string">/css/runtime.css</span></span><br><span class="line">  <span class="comment"># 徽标部分配置项</span></span><br><span class="line">  <span class="attr">swiperpara:</span> <span class="number">0</span> <span class="comment">#若非0，则开启轮播功能，每行徽标个数</span></span><br><span class="line">  <span class="attr">bdageitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://hexo.io/</span> <span class="comment">#徽标指向网站链接</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo</span> <span class="comment">#徽标API</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">博客框架为Hexo</span> <span class="comment">#徽标提示语</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://butterfly.js.org/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站主题为Butterfly</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://vercel.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Hosted-Vercel-brightgreen?style=flat&amp;logo=Vercel</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站采用Vercel部署</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://github.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站项目由Github托管</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span></span><br><span class="line">  <span class="attr">swiperbdage_init_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-footer-beautify/lib/swiperbdage_init.min.js</span></span><br></pre></td></tr></table></figure><br>其中我的css配置为<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*电子钟字体*/</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;UnidreamLED&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf&quot;</span>);</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#runtime</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">280px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">padding-inline</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;UnidreamLED&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#runtime</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#28b4c8</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">28</span>,<span class="number">69</span>,<span class="number">218</span>,<span class="number">0.71</span>);</span><br><span class="line">  <span class="attribute">animation</span>: flashlight <span class="number">1s</span> linear infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*悬停显示徽标提示语*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.github-badge</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="built_in">attr</span>(data-title);</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--text-bg-hover);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-tag">a</span><span class="selector-class">.github-badge</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">18</span>,<span class="number">18</span>,<span class="number">18</span>,<span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> flashlight &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> flashlight &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-o-keyframes</span> flashlight &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> flashlight &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">#1478d2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>我的js配置为<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> create_time = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2024-07-06 22:00:00&#x27;</span>).<span class="title function_">getTime</span>() / <span class="number">1000</span>); <span class="comment">//在此行修改建站时间</span></span><br><span class="line">    <span class="keyword">let</span> timestamp = <span class="title class_">Math</span>.<span class="title function_">round</span>((<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()) / <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">let</span> second = timestamp - create_time;</span><br><span class="line">    <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> nol = <span class="keyword">function</span>(<span class="params">h</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> h&gt;<span class="number">9</span>?<span class="attr">h</span>:<span class="string">&#x27;0&#x27;</span>+h;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">      time[<span class="number">1</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">      second %= <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">3600</span>) &#123;</span><br><span class="line">      time[<span class="number">2</span>] = <span class="title function_">nol</span>(<span class="built_in">parseInt</span>(second / <span class="number">3600</span>));</span><br><span class="line">      second %= <span class="number">3600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">      time[<span class="number">3</span>] = <span class="title function_">nol</span>(<span class="built_in">parseInt</span>(second / <span class="number">60</span>));</span><br><span class="line">      second %= <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (second &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      time[<span class="number">4</span>] = <span class="title function_">nol</span>(second);</span><br><span class="line">    &#125;</span><br><span class="line">     currentTimeHtml =<span class="string">&quot;&lt;div id=&#x27;runtime&#x27;&gt;&quot;</span> + <span class="string">&#x27;本站距今已运行了 &#x27;</span> + time[<span class="number">1</span>] + <span class="string">&#x27; 天 &#x27;</span> + time[<span class="number">2</span>] + <span class="string">&#x27; 时 &#x27;</span> + time[<span class="number">3</span>] + <span class="string">&#x27; 分 &#x27;</span> + time[<span class="number">4</span>] + <span class="string">&#x27; 秒&#x27;</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;workboard&quot;</span>).<span class="property">innerHTML</span> = currentTimeHtml;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure></p><h2 id="11-修改字体"><a href="#11-修改字体" class="headerlink" title="11.修改字体"></a>11.修改字体</h2><p>这个我有心理阴影，不再赘述，有需求自行查阅</p><h2 id="12-文章置顶滚动栏"><a href="#12-文章置顶滚动栏" class="headerlink" title="12.文章置顶滚动栏"></a>12.文章置顶滚动栏</h2><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><br>在站点配置文件_config.yml或者主题配置文件_config.butterfly.yml中添加<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure><br>在博客中使用swiper_index，后边数字越大越优先展示</p><h2 id="13-文章双侧栏显示及加载动画"><a href="#13-文章双侧栏显示及加载动画" class="headerlink" title="13.文章双侧栏显示及加载动画"></a>13.文章双侧栏显示及加载动画</h2><p>本篇分为两个部分，首先实现双侧栏显示，随后是加载动画</p><h3 id="A-双侧栏显示"><a href="#A-双侧栏显示" class="headerlink" title="A.双侧栏显示"></a>A.双侧栏显示</h3><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><br>在网站配置文件_config.yml中新增以下项<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">butterfly_article_double_row:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br>在custom.css中新增以下使按钮居中<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#pagination</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="B-wowjs动画"><a href="#B-wowjs动画" class="headerlink" title="B.wowjs动画"></a>B.wowjs动画</h3><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure><br>在站点配置文件_config.yml或者主题配置文件_config.butterfly.yml中添加（这是我的配置）<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">10</span> <span class="comment">#过滤器优先级</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment">#移动端是否启用，默认移动端禁用</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__fadeInLeft</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">1s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="number">0</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">1</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__fadeInRight</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">1s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="number">0</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">  <span class="attr">animate_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/animate.min.css</span></span><br><span class="line">  <span class="attr">wow_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow.min.js</span></span><br><span class="line">  <span class="attr">wow_init_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow_init.js</span></span><br></pre></td></tr></table></figure><br>如需修改动画效果，参考<a href="https://animate.style/">Animate.css</a>，复制并更改style后的内容</p><h2 id="14-菜单栏居中"><a href="#14-菜单栏居中" class="headerlink" title="14.菜单栏居中"></a>14.菜单栏居中</h2><p>在custom.css文件中新增以下<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 一级菜单居中 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.menus_items</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: fit-content <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>修改_config.butterfly.yml中menu的列表，后加hide<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">列表||fas</span> <span class="string">fa-list</span> <span class="string">||</span> <span class="attr">hide:</span></span><br></pre></td></tr></table></figure><br>通过这个可以确保列表在手机端为折叠状态</p><h2 id="15-黑夜模式下文字霓虹灯效果"><a href="#15-黑夜模式下文字霓虹灯效果" class="headerlink" title="15.黑夜模式下文字霓虹灯效果"></a>15.黑夜模式下文字霓虹灯效果</h2><p>在custom.css文件中新增以下<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 日间模式不生效 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#site-name</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#site-title</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#site-subtitle</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#post-info</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式生效 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#site-name</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#site-title</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: light_15px <span class="number">10s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#site-subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: light_10px <span class="number">10s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#post-info</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: light_5px <span class="number">10s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 关键帧描述 */</span></span><br><span class="line"><span class="keyword">@keyframes</span> light_15px &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#5636ed</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">12.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#11ee5e</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">25%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f14747</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">37.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f1a247</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f1ee47</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#b347f1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">62.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#002afa</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">75%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#ed709b</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">87.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#39c5bb</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#5636ed</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> light_10px &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#5636ed</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">12.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#11ee5e</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">25%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f14747</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">37.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f1a247</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f1ee47</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#b347f1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">62.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#002afa</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">75%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#ed709b</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">87.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#39c5bb</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#5636ed</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> light_5px &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#5636ed</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">12.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#11ee5e</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">25%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f14747</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">37.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f1a247</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#f1ee47</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#b347f1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">62.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#002afa</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">75%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#ed709b</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">87.5%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#39c5bb</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#5636ed</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="16-个人卡片渐变色"><a href="#16-个人卡片渐变色" class="headerlink" title="16.个人卡片渐变色"></a>16.个人卡片渐变色</h2><p>在custom.css中新增<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 侧边栏个人信息卡片动态渐变色 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    -<span class="number">45deg</span>,</span><br><span class="line">    <span class="number">#e8d8b9</span>,</span><br><span class="line">    <span class="number">#eccec5</span>,</span><br><span class="line">    <span class="number">#a3e9eb</span>,</span><br><span class="line">    <span class="number">#bdbdf0</span>,</span><br><span class="line">    <span class="number">#eec1ea</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgb</span>(<span class="number">66</span>, <span class="number">68</span>, <span class="number">68</span>);</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  -moz-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑夜模式适配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#191919ee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 个人信息Follow me按钮 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &gt; <span class="selector-id">#card-info-btn</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3eb8be</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>颜色内容可以自行更改</p><h2 id="17-页面样式调节"><a href="#17-页面样式调节" class="headerlink" title="17.页面样式调节"></a>17.页面样式调节</h2><p>在css中添加<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--trans-light</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.88</span>);</span><br><span class="line">  <span class="attr">--trans-dark</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.88</span>);</span><br><span class="line">  <span class="attr">--border-style</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">169</span>, <span class="number">169</span>, <span class="number">169</span>);</span><br><span class="line">  <span class="attr">--backdrop-filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>) <span class="built_in">saturate</span>(<span class="number">150%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页文章卡片 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页侧栏卡片 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文章页、归档页、普通页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#page</span>,</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#archive</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 导航栏 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式遮罩 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#archive</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-dark);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式页脚页头遮罩透明 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 阅读模式 */</span></span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式下的阅读模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="18-音乐播放器"><a href="#18-音乐播放器" class="headerlink" title="18.音乐播放器"></a>18.音乐播放器</h2><p>安装以下依赖<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><br>在_config.yml中添加<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 音乐插件</span></span><br><span class="line"><span class="attr">aplayer:</span> </span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><br>并且在_config.butterfly.yml中修改aplayerInject<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br>其余用法等不再赘述，详情见<a href="https://butterfly.js.org/posts/507c070f/">Butterfly添加全局吸底Aplayer教程</a>或者参考<a href="https://aplayer.js.org/#/zh-Hans/">APlayer官网档案</a></p><h3 id="附：再在这里贴一个魔改音乐播放器教程"><a href="#附：再在这里贴一个魔改音乐播放器教程" class="headerlink" title="附：再在这里贴一个魔改音乐播放器教程"></a>附：再在这里贴一个魔改音乐播放器教程</h3><p>详情见<a href="https://blog.anheyu.com/posts/6c69.html">butterfly魔改aplayer音乐</a></p><h2 id="19-引入iconfont自定义图标"><a href="#19-引入iconfont自定义图标" class="headerlink" title="19.引入iconfont自定义图标"></a>19.引入iconfont自定义图标</h2><p>参考<a href="https://akilar.top/posts/d2ebecef/">Iconfont Inject</a>以及<a href="https://akilar.top/posts/615e2dec/#%E5%8A%A8%E6%80%81%E6%A0%87%E7%AD%BE-anima">修改动态样式</a></p><h2 id="20-渐变色版权美化"><a href="#20-渐变色版权美化" class="headerlink" title="20.渐变色版权美化"></a>20.渐变色版权美化</h2><p>参考<a href="https://akilar.top/posts/8322f8e6/">（二创）Copyright-beautify</a><br>以后博客内容标头可以如下自定义<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: XXX # 文章名称</span><br><span class="line">date: XXXX-XX-XX XX:XX:XX # 文章发布日期</span><br><span class="line">updated: XXXX-XX-XX XX:XX:XX # 文章更新日期</span><br><span class="line">copyright_author: XXX # 作者覆写</span><br><span class="line">copyright_url: XXX # 原文链接覆写（直接输入网址，不需要加其他符号）</span><br><span class="line">license: # 许可协议名称覆写(一般不用)</span><br><span class="line">license_url: # 许可协议链接覆写（一般不用）</span><br><span class="line">swiper_index: X # 滚动条优先级，数字越大越优先</span><br><span class="line">cover: XX # 封面（后跟路径）</span><br><span class="line">categories: XX # 设置分类</span><br><span class="line">tags: XX # 设置标签</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h2 id="21-按照最后更新时间对博客排序"><a href="#21-按照最后更新时间对博客排序" class="headerlink" title="21.按照最后更新时间对博客排序"></a>21.按照最后更新时间对博客排序</h2><p>修改_config.yml中index_generator下的order_by<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- order_by: -date</span></span><br><span class="line"><span class="addition">+ order_by: -updated</span></span><br></pre></td></tr></table></figure></p><h2 id="22-双栏布局首页卡片魔改"><a href="#22-双栏布局首页卡片魔改" class="headerlink" title="22.双栏布局首页卡片魔改"></a>22.双栏布局首页卡片魔改</h2><p>参考<a href="https://akilar.top/posts/d6b69c49/">双栏布局首页卡片魔改教程</a></p><h2 id="23-补：在每篇文章中自定义背景"><a href="#23-补：在每篇文章中自定义背景" class="headerlink" title="23.补：在每篇文章中自定义背景"></a>23.补：在每篇文章中自定义背景</h2><p>在markdown文件中添加<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#web_bg</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">XXX</span>)<span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 这里的url填图片路径 */</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-position</span>: center <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-size</span>: cover <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-repeat</span>: no-repeat <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="24-魔改关于页面"><a href="#24-魔改关于页面" class="headerlink" title="24.魔改关于页面"></a>24.魔改关于页面</h2><p>参考<a href="https://blog.anheyu.com/posts/e62b.html">安知鱼|butterfly魔改关于页面</a></p><h2 id="25-给网站增加悬浮伸缩侧边栏"><a href="#25-给网站增加悬浮伸缩侧边栏" class="headerlink" title="25.给网站增加悬浮伸缩侧边栏"></a>25.给网站增加悬浮伸缩侧边栏</h2><p>参考<a href="https://www.qcqx.cn/article/fab5c3df.html">轻笑Chuckle|给网站增加悬浮伸缩侧边栏</a></p><h2 id="26"><a href="#26" class="headerlink" title="26."></a>26.</h2>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客网站更新记录</title>
      <link href="/2024/07/07/record/"/>
      <url>/2024/07/07/record/</url>
      
        <content type="html"><![CDATA[<h1 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h1><h2 id="2024年7月7日"><a href="#2024年7月7日" class="headerlink" title="2024年7月7日"></a>2024年7月7日</h2><p>（今日因旧代码报错而不得不放弃，从头开始，有点崩溃，因此开始记录并且做好备份，以便后续出问题更改）</p><ol><li><p><strong>配置了一下butterfly主题的基础，比如设置网页背景，侧边栏头像，以及博客封面之类</strong></p></li><li><p><strong>更新了本地搜索，开启字数统计，打开背景特效，打开通知弹窗</strong></p></li><li><p><strong>更新了鼠标点击特效</strong></p></li><li><p><strong>更新了网页为一图流，且增加页脚徽标</strong></p></li><li><p><strong>更改字体成功，网页中字体为Aa楷体，代码字体为Consolas</strong></p></li></ol><p>（累了，明天再说，绝区零启动！）</p><h2 id="2024年7月8日"><a href="#2024年7月8日" class="headerlink" title="2024年7月8日"></a>2024年7月8日</h2><ol><li><strong>更新文章置顶滚动栏</strong></li></ol><p>（此时已恢复到旧版本状态）</p><ol><li><p><strong>更新双侧栏及加载动画，同时实现菜单栏居中</strong></p></li><li><p><strong>成功实现黑夜模式下，主文字显示霓虹灯效果</strong></p></li><li><p><strong>更新个人卡片渐变色（正常模式下渐变，黑夜模式下纯黑）</strong></p></li></ol><p>（发现一个bug，加上渐变色后卡片没有滑入效果，未来可能去除）</p><ol><li><p><strong>更新页面样式（包括圆角，透明度设置，描边，模糊效果等）</strong></p></li><li><p><strong>新添音乐播放器，歌单设置的为我的网易云歌单</strong></p></li></ol><p>（今日就到这里，勾栏听曲）</p><h2 id="2024年7月9日"><a href="#2024年7月9日" class="headerlink" title="2024年7月9日"></a>2024年7月9日</h2><p>（今天摸鱼，浅浅更新）</p><ol><li><p><strong>引入自定义图标，修改部分图标</strong></p></li><li><p><strong>新增渐变色版权美化</strong></p></li></ol><p>（虽然内容较少，但也花费巨大时间，目前感觉配置差不多了，以后有啥慢慢更新）</p><h2 id="2024年7月10日"><a href="#2024年7月10日" class="headerlink" title="2024年7月10日"></a>2024年7月10日</h2><p>（今日着手写博客，以后重点主要放在发布博客内容上）</p><ol><li><strong>更新首页卡片双栏布局显示，提高观感</strong></li></ol><h2 id="2024年7月11日"><a href="#2024年7月11日" class="headerlink" title="2024年7月11日"></a>2024年7月11日</h2><ol><li><p><strong>更新关于界面</strong></p></li><li><p><strong>更新悬浮伸缩侧边栏，并增加音乐</strong></p></li></ol><p>（这个侧边栏对于手机还不适配，因此原先的音乐通道并没有关闭，日后应该会修）</p><h2 id="2024年7月12日"><a href="#2024年7月12日" class="headerlink" title="2024年7月12日"></a>2024年7月12日</h2><ol><li><p><strong>更新关于界面</strong></p></li><li><p><strong>更新悬浮伸缩侧边栏，并增加音乐</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
